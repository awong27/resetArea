{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mitya\\\\Documents\\\\GitHub\\\\csc648-03-sp20-team102\\\\application\\\\team102\\\\UI\\\\src\\\\Component\\\\Scan.js\";\nimport React, { Component } from 'react';\nexport default class Scan extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.oGetUserMedia;\n\n    if (navigator.getUserMedia) {\n      navigator.getUserMedia({\n        video: true\n      }, this.handleVideo, this.videoError);\n    }\n  }\n\n  handleVideo(stream) {\n    // Update the state, triggering the component to re-render with the correct stream\n    this.setState({\n      videoSrc: window.URL.createObjectURL(stream)\n    });\n    this.videoElement.play();\n  }\n\n  videoError() {}\n\n  render() {\n    const video = React.createElement(\"video\", {\n      id: \"video\",\n      width: \"640\",\n      height: \"480\",\n      className: \"cameraFrame\",\n      src: state.videoSrc,\n      autoPlay: \"true\",\n      ref: input => {\n        this.videoElement = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, video);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/mitya/Documents/GitHub/csc648-03-sp20-team102/application/team102/UI/src/Component/Scan.js"],"names":["React","Component","Scan","constructor","props","componentDidMount","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","oGetUserMedia","video","handleVideo","videoError","stream","setState","videoSrc","window","URL","createObjectURL","videoElement","play","render","state","input"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAGA,eAAe,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AACxCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,SAAS,CAACC,YAAV,GAAyBD,SAAS,CAACC,YAAV,IAA0BD,SAAS,CAACE,kBAApC,IAA0DF,SAAS,CAACG,eAApE,IAAuFH,SAAS,CAACI,cAAjG,IAAmHJ,SAAS,CAACK,aAAtJ;;AACA,QAAIL,SAAS,CAACC,YAAd,EAA4B;AACxBD,MAAAA,SAAS,CAACC,YAAV,CAAuB;AAACK,QAAAA,KAAK,EAAE;AAAR,OAAvB,EAAsC,KAAKC,WAA3C,EAAwD,KAAKC,UAA7D;AACH;AACF;;AACDD,EAAAA,WAAW,CAAEE,MAAF,EAAU;AACnB;AACA,SAAKC,QAAL,CAAc;AAAEC,MAAAA,QAAQ,EAAEC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BL,MAA3B;AAAZ,KAAd;AACA,SAAKM,YAAL,CAAkBC,IAAlB;AACD;;AACDR,EAAAA,UAAU,GAAG,CACZ;;AACDS,EAAAA,MAAM,GAAG;AACP,UAAMX,KAAK,GAAI;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,KAAK,EAAC,KAAxB;AAA8B,MAAA,MAAM,EAAC,KAArC;AAA2C,MAAA,SAAS,EAAC,aAArD;AAAmE,MAAA,GAAG,EAAGY,KAAK,CAACP,QAA/E;AAAyF,MAAA,QAAQ,EAAC,MAAlG;AACX,MAAA,GAAG,EAAGQ,KAAD,IAAW;AAAE,aAAKJ,YAAL,GAAoBI,KAApB;AAA4B,OADnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAf;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGb,KADH,CADF;AAKH;;AAzBuC","sourcesContent":["import React, {Component} from 'react';\r\n\r\n\r\nexport default class Scan extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n      }\r\n      componentDidMount() {\r\n        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.oGetUserMedia;\r\n        if (navigator.getUserMedia) {\r\n            navigator.getUserMedia({video: true}, this.handleVideo, this.videoError);\r\n        }\r\n      }\r\n      handleVideo (stream) {\r\n        // Update the state, triggering the component to re-render with the correct stream\r\n        this.setState({ videoSrc: window.URL.createObjectURL(stream) });\r\n        this.videoElement.play();\r\n      }\r\n      videoError() {\r\n      }\r\n      render() {\r\n        const video = (<video id=\"video\" width=\"640\" height=\"480\" className=\"cameraFrame\" src={ state.videoSrc} autoPlay=\"true\"\r\n            ref={(input) => { this.videoElement = input; }}></video>);\r\n        return (\r\n          <div>\r\n            {video}\r\n          </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}