{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mitya\\\\Documents\\\\GitHub\\\\csc648-03-sp20-team102\\\\application\\\\team102\\\\UI\\\\src\\\\Component\\\\Scan.js\";\nimport React, { Component } from 'react';\nimport MediaHandler from './MediaHandler';\nimport { Button } from 'reactstrap';\n\nconst fs = require('browserfy-fs');\n\nconst sys = require('sys');\n\nexport default class Scan extends Component {\n  constructor() {\n    super();\n\n    this.captureImage = () => {\n      const context = this.canvas.getContext('2d');\n      context.drawImage(this.myVideo, 0, 0, 400, 350);\n      const image = this.canvas.toDataURL('image/jpeg', 0.5);\n      const data = image.replace(/^data:image\\/w+;base64,/, \"\");\n      const buf = new Buffer(data, 'base64');\n      fs.writeFile('./image.jpg', buf);\n      return image;\n    };\n\n    this.state = {\n      hasMedia: false\n    };\n    this.mediaHandler = new MediaHandler();\n  }\n\n  componentDidMount() {\n    this.mediaHandler.getPermissions().then(stream => {\n      this.setState({\n        hasMedia: true\n      });\n\n      try {\n        this.myVideo.srcObject = stream;\n      } catch (e) {\n        this.myVideo.src = URL.createObjectURL(stream);\n      }\n\n      this.myVideo.play();\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"video-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      className: \"video\",\n      width: \"400\",\n      height: \"350\",\n      ref: ref => {\n        this.myVideo = ref;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: this.captureImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Capture\"), React.createElement(\"div\", {\n      className: \"image-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      ref: canvas => {\n        this.canvas = canvas;\n      },\n      width: \"400\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/mitya/Documents/GitHub/csc648-03-sp20-team102/application/team102/UI/src/Component/Scan.js"],"names":["React","Component","MediaHandler","Button","fs","require","sys","Scan","constructor","captureImage","context","canvas","getContext","drawImage","myVideo","image","toDataURL","data","replace","buf","Buffer","writeFile","state","hasMedia","mediaHandler","componentDidMount","getPermissions","then","stream","setState","srcObject","e","src","URL","createObjectURL","play","render","ref"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,MAAT,QAAuB,YAAvB;;AACA,MAAMC,EAAE,GAAGC,OAAO,CAAC,cAAD,CAAlB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,KAAD,CAAnB;;AAGA,eAAe,MAAME,IAAN,SAAmBN,SAAnB,CAA6B;AAExCO,EAAAA,WAAW,GAAG;AACV;;AADU,SAwBdC,YAxBc,GAwBC,MAAM;AACjB,YAAMC,OAAO,GAAG,KAAKC,MAAL,CAAYC,UAAZ,CAAuB,IAAvB,CAAhB;AACAF,MAAAA,OAAO,CAACG,SAAR,CAAkB,KAAKC,OAAvB,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,GAAtC,EAA2C,GAA3C;AACA,YAAMC,KAAK,GAAG,KAAKJ,MAAL,CAAYK,SAAZ,CAAsB,YAAtB,EAAoC,GAApC,CAAd;AACA,YAAMC,IAAI,GAAGF,KAAK,CAACG,OAAN,CAAc,yBAAd,EAAwC,EAAxC,CAAb;AACA,YAAMC,GAAG,GAAG,IAAIC,MAAJ,CAAWH,IAAX,EAAiB,QAAjB,CAAZ;AACAb,MAAAA,EAAE,CAACiB,SAAH,CAAa,aAAb,EAA4BF,GAA5B;AACA,aAAOJ,KAAP;AACH,KAhCa;;AAGV,SAAKO,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAIA,SAAKC,YAAL,GAAoB,IAAItB,YAAJ,EAApB;AACH;;AAEDuB,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,YAAL,CAAkBE,cAAlB,GACCC,IADD,CACQC,MAAD,IAAY;AACf,WAAKC,QAAL,CAAc;AAACN,QAAAA,QAAQ,EAAG;AAAZ,OAAd;;AAEA,UAAI;AACA,aAAKT,OAAL,CAAagB,SAAb,GAAyBF,MAAzB;AACH,OAFD,CAEE,OAAOG,CAAP,EAAU;AACR,aAAKjB,OAAL,CAAakB,GAAb,GAAmBC,GAAG,CAACC,eAAJ,CAAoBN,MAApB,CAAnB;AACH;;AACD,WAAKd,OAAL,CAAaqB,IAAb;AACH,KAVD;AAWH;;AAYDC,EAAAA,MAAM,GAAG;AAEL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAyB,MAAA,KAAK,EAAC,KAA/B;AAAqC,MAAA,MAAM,EAAC,KAA5C;AAAkD,MAAA,GAAG,EAAGC,GAAD,IAAS;AAAC,aAAKvB,OAAL,GAAeuB,GAAf;AAAoB,OAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAK5B,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,EAKI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,GAAG,EAAIE,MAAD,IAAY;AAAC,aAAKA,MAAL,GAAcA,MAAd;AAAqB,OAAhD;AAAkD,MAAA,KAAK,EAAC,KAAxD;AAA8D,MAAA,MAAM,EAAE,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CALJ,CADJ;AAWH;;AAjDuC","sourcesContent":["import React, {Component} from 'react';\r\nimport MediaHandler from './MediaHandler';\r\nimport { Button } from 'reactstrap';\r\nconst fs = require('browserfy-fs');\r\nconst sys = require('sys');\r\n\r\n\r\nexport default class Scan extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            hasMedia: false\r\n        };\r\n\r\n        this.mediaHandler = new MediaHandler();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mediaHandler.getPermissions()\r\n        .then( (stream) => {\r\n            this.setState({hasMedia : true});\r\n\r\n            try {\r\n                this.myVideo.srcObject = stream;\r\n            } catch (e) {\r\n                this.myVideo.src = URL.createObjectURL(stream);\r\n            }\r\n            this.myVideo.play();\r\n        })\r\n    }\r\n\r\n    captureImage = () => {\r\n        const context = this.canvas.getContext('2d');\r\n        context.drawImage(this.myVideo, 0, 0, 400, 350);\r\n        const image = this.canvas.toDataURL('image/jpeg', 0.5);\r\n        const data = image.replace(/^data:image\\/w+;base64,/,\"\");\r\n        const buf = new Buffer(data, 'base64');\r\n        fs.writeFile('./image.jpg', buf);\r\n        return image;\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"video-container\">\r\n                    <video className=\"video\" width=\"400\" height=\"350\" ref={(ref) => {this.myVideo = ref;}}></video>\r\n                </div>\r\n                <Button onClick={this.captureImage}>Capture</Button>\r\n                <div className=\"image-container\">\r\n                    <canvas ref={ (canvas) => {this.canvas = canvas}} width='400' height= '350' ></canvas>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}