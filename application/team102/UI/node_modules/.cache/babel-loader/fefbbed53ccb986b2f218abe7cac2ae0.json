{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antwong\\\\Documents\\\\temp\\\\csc648-03-sp20-team102\\\\application\\\\team102\\\\UI\\\\src\\\\Component\\\\inventory.js\";\nimport React, { useState, Component } from 'react';\nimport { Button, Badge, ButtonGroup, Card, CardImg, CardText, CardFooter, CardHeader, CardBody, NavLink, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Navi from \"./Navigation\";\nimport TopBar from \"./TopBar\";\nimport axios from \"axios\";\nimport \"./inv.css\";\nimport consume from \"./pizzaIcon.png\";\nimport trash from \"./trashIcon.png\";\nimport plusbtn from \"./plus.svg\";\n/**\r\n   * add item to inventory page\r\n   * Modal will display a detailed description in a pop up window\r\n   * CardImg will pull the large display pic\r\n   * CardHeader and CardFooter \r\n   * display buttons, name and exp date \r\n   */\n\nconst Fooddata = props => {\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return React.createElement(Card, {\n    className: \"invItem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(CardImg, {\n    alt: \"FridgeItem\",\n    onClick: toggle,\n    src: props.food.foodPic,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.food.foodName)), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Expires:\", props.food.expirationDate), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Calories:\", props.food.calories), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Carbs:\", props.food.carbs), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Sugar:\", props.food.sugar), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Protein:\", props.food.protein), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Fat:\", props.food.fat), React.createElement(\"img\", {\n    alt: props.food.foodName,\n    src: props.food.foodPic,\n    height: \"50%\",\n    width: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {\n      props.deleteItems(props.food._id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"delete\",\n    src: trash,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, props.food.numOfItems)), React.createElement(Button, {\n    onClick: () => \"/create\" + props.food._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"eat\",\n    src: consume,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }))))), React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    className: \"itemHead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Badge, {\n    color: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"!\")), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, props.food.foodName)), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, props.food.expirationDate)))), React.createElement(CardBody, {\n    position: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(CardFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    className: \"itemOptions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {\n      props.deleteItems(props.food._id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"delete\",\n    src: trash,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, props.food.numOfItems)), React.createElement(Button, {\n    onClick: () => \"/create\" + props.food._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"eat\",\n    src: consume,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })))));\n};\n\nexport default class inventory extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    this.deleteItems = this.deleteItems.bind(this);\n    this.state = {\n      fooddata: [],\n      username: params.id,\n      password: params.password\n    };\n  } //${params.id}\n\n  /**\r\n   * grabs list of food data\r\n   */\n\n\n  componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    axios.get('http://localhost:8080/fooddata/').then(response => {\n      this.setState({\n        fooddata: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  deleteItems(id) {\n    axios.delete(\"http://localhost:8080/fooddata/\" + id).then(res => console.log(res.data));\n    this.setState({\n      fooddata: this.state.fooddata.filter(el => el._id !== id)\n    });\n  }\n  /**\r\n   * matches food data list with personal id for personal food list\r\n   * populates individually Fooddata by sending food_id\r\n   */\n\n\n  inventory() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    return this.state.fooddata.map(currentfood => {\n      if (currentfood.creator === params.id) {\n        return React.createElement(Fooddata, {\n          food: currentfood,\n          deleteItems: this.deleteItems,\n          key: currentfood._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        });\n      } else return null;\n    });\n  }\n\n  render() {\n    const create = \"/Create/\" + this.state.username + \"/\" + this.state.password;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(TopBar, {\n      username: this.state.username,\n      password: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Inventory\")), React.createElement(\"div\", {\n      className: \"FridgeList\",\n      style: {\n        height: this.state.fooddata.length * 50 + \"px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, this.inventory()), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(NavLink, {\n      href: create,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"addbtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"add\",\n      src: plusbtn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }))), React.createElement(Navi, {\n      username: this.state.username,\n      password: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }));\n  }\n\n}\n/*foodcard() {\r\n\r\n    return (\r\n      <FoodStuff\r\n        food={this.state.fooddata}\r\n        deleteItems={this.deleteItems}\r\n        key={this.state.fooddata._id}\r\n      />\r\n    );\r\n  }  */\n\n/* from food inner part -- need to add pop up card to it\r\n  var name= this.state.fooddata.foodName;\r\n    var expire= this.state.fooddata.expirationDate;\r\n    var creat=this.state.fooddata.creator;\r\n    var calories = this.state.fooddata.calories;\r\n    var carbs = this.state.fooddata.carbs;\r\n    var protein = this.state.fooddata.protein;\r\n    var sugar=this.state.fooddata.sugar;\r\n    var fat = this.state.fooddata.fat;\r\n    var id = this.state.fooddata._id;\r\n\r\n\r\n    const foodpic = <img src={this.state.fooddata.foodPic} height=\"200\" width=\"200\"></img>;\r\n    <div>\r\n        <h3>{name}</h3>\r\n        <h4>{foodpic}</h4>\r\n        <h4>Calories:{calories}</h4>\r\n        <h4>Carbs:{carbs}</h4>\r\n        <h4>Sugar:{sugar}</h4>\r\n        <h4>Protein:{protein}</h4>\r\n        <h4>Fat:{fat}</h4>\r\n\r\n      </div>\r\n*/","map":{"version":3,"sources":["C:/Users/Antwong/Documents/temp/csc648-03-sp20-team102/application/team102/UI/src/Component/inventory.js"],"names":["React","useState","Component","Button","Badge","ButtonGroup","Card","CardImg","CardText","CardFooter","CardHeader","CardBody","NavLink","Modal","ModalHeader","ModalBody","ModalFooter","Navi","TopBar","axios","consume","trash","Fooddata","props","className","modal","setModal","toggle","food","foodPic","foodName","expirationDate","calories","carbs","sugar","protein","fat","deleteItems","_id","numOfItems","inventory","constructor","match","params","bind","state","fooddata","username","id","password","componentDidMount","get","then","response","setState","data","catch","error","console","log","delete","res","filter","el","map","currentfood","creator","render","create","height","length","plusbtn"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react';\r\nimport { Button, Badge, ButtonGroup, \r\n  Card, CardImg, CardText, CardFooter, CardHeader, CardBody, \r\n  NavLink, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport Navi from \"./Navigation\";\r\nimport TopBar from \"./TopBar\";\r\nimport axios from \"axios\";\r\nimport \"./inv.css\";\r\nimport consume from \"./pizzaIcon.png\";\r\nimport trash from \"./trashIcon.png\";\r\nimport plusbtn from \"./plus.svg\";\r\n/**\r\n   * add item to inventory page\r\n   * Modal will display a detailed description in a pop up window\r\n   * CardImg will pull the large display pic\r\n   * CardHeader and CardFooter \r\n   * display buttons, name and exp date \r\n   */\r\nconst Fooddata = props => {\r\n  const { className } = props;\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  return (\r\n    <Card className=\"invItem\">\r\n      <CardImg alt=\"FridgeItem\" onClick={toggle} src={props.food.foodPic} />\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}><h3>{props.food.foodName}</h3></ModalHeader>\r\n        <ModalBody>\r\n          <td>Expires:{props.food.expirationDate}</td>\r\n          <h4>Calories:{props.food.calories}</h4>\r\n          <h4>Carbs:{props.food.carbs}</h4>\r\n          <h4>Sugar:{props.food.sugar}</h4>\r\n          <h4>Protein:{props.food.protein}</h4>\r\n          <h4>Fat:{props.food.fat}</h4>\r\n          <img alt={props.food.foodName} src={props.food.foodPic} height=\"50%\" width=\"100%\" />\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <ButtonGroup>\r\n            <Button onClick={() => { props.deleteItems(props.food._id); }}>\r\n              <img alt=\"delete\" src={trash} />\r\n            </Button>\r\n            <Button>\r\n              <CardText>{props.food.numOfItems}</CardText>\r\n            </Button>\r\n            <Button onClick={() => \"/create\" + props.food._id}>\r\n              <img alt=\"eat\" src={consume} />\r\n            </Button>\r\n          </ButtonGroup>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      <CardHeader>\r\n        <ButtonGroup className=\"itemHead\">\r\n          <Button>\r\n            <Badge color=\"danger\">!</Badge>\r\n          </Button>\r\n          <Button>\r\n            <CardText>{props.food.foodName}</CardText>\r\n          </Button>\r\n          <Button>\r\n            <CardText>{props.food.expirationDate}</CardText>\r\n          </Button>\r\n        </ButtonGroup>\r\n      </CardHeader>\r\n      <CardBody position='center'>\r\n\r\n      </CardBody>\r\n      <CardFooter>\r\n        <ButtonGroup className=\"itemOptions\">\r\n          <Button onClick={() => { props.deleteItems(props.food._id); }}>\r\n            <img alt=\"delete\" src={trash} />\r\n          </Button>\r\n          <Button>\r\n            <CardText>{props.food.numOfItems}</CardText>\r\n          </Button>\r\n          <Button onClick={() => \"/create\" + props.food._id}>\r\n            <img alt=\"eat\" src={consume} />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </CardFooter>\r\n    </Card>\r\n  );\r\n}\r\nexport default class inventory extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const { match: { params } } = this.props;\r\n    this.deleteItems = this.deleteItems.bind(this);\r\n\r\n    this.state = {\r\n      fooddata: [],\r\n      username: params.id,\r\n      password: params.password\r\n    };\r\n  }\r\n  //${params.id}\r\n  /**\r\n   * grabs list of food data\r\n   */\r\n  componentDidMount() {\r\n    const { match: { params } } = this.props;\r\n    axios\r\n      .get('http://localhost:8080/fooddata/')\r\n      .then(response => {\r\n        this.setState({ fooddata: response.data });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  deleteItems(id) {\r\n    axios\r\n      .delete(\"http://localhost:8080/fooddata/\" + id)\r\n      .then(res => console.log(res.data));\r\n    this.setState({\r\n      fooddata: this.state.fooddata.filter(el => el._id !== id)\r\n    });\r\n  }\r\n  /**\r\n   * matches food data list with personal id for personal food list\r\n   * populates individually Fooddata by sending food_id\r\n   */\r\n  inventory() {\r\n    const { match: { params } } = this.props;\r\n    return this.state.fooddata.map(currentfood => {\r\n      if (currentfood.creator === params.id) {\r\n        return (\r\n          <Fooddata\r\n            food={currentfood}\r\n            deleteItems={this.deleteItems}\r\n            key={currentfood._id}\r\n          />\r\n        );\r\n      } else return (null);\r\n    });\r\n  }  \r\n  render() {\r\n    const create = \"/Create/\"+this.state.username+\"/\"+this.state.password;\r\n    return (\r\n      <div><TopBar username={this.state.username} password={this.state.password} />     \r\n        <div><h1>Inventory</h1></div>\r\n        <div className=\"FridgeList\" style={{height: this.state.fooddata.length*50+\"px\"}}>\r\n          {this.inventory()}\r\n        </div>\r\n        <br /><br />\r\n        <NavLink href={create}><Button className=\"addbtn\"><img alt=\"add\" src={plusbtn} /></Button></NavLink>\r\n        <Navi username={this.state.username} password={this.state.password} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n/*foodcard() {\r\n\r\n    return (\r\n      <FoodStuff\r\n        food={this.state.fooddata}\r\n        deleteItems={this.deleteItems}\r\n        key={this.state.fooddata._id}\r\n      />\r\n    );\r\n  }  */\r\n/* from food inner part -- need to add pop up card to it\r\n  var name= this.state.fooddata.foodName;\r\n    var expire= this.state.fooddata.expirationDate;\r\n    var creat=this.state.fooddata.creator;\r\n    var calories = this.state.fooddata.calories;\r\n    var carbs = this.state.fooddata.carbs;\r\n    var protein = this.state.fooddata.protein;\r\n    var sugar=this.state.fooddata.sugar;\r\n    var fat = this.state.fooddata.fat;\r\n    var id = this.state.fooddata._id;\r\n\r\n\r\n    const foodpic = <img src={this.state.fooddata.foodPic} height=\"200\" width=\"200\"></img>;\r\n    <div>\r\n        <h3>{name}</h3>\r\n        <h4>{foodpic}</h4>\r\n        <h4>Calories:{calories}</h4>\r\n        <h4>Carbs:{carbs}</h4>\r\n        <h4>Sugar:{sugar}</h4>\r\n        <h4>Protein:{protein}</h4>\r\n        <h4>Fat:{fat}</h4>\r\n\r\n      </div>\r\n*/"]},"metadata":{},"sourceType":"module"}