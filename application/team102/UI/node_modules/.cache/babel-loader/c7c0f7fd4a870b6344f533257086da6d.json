{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mitya\\\\Documents\\\\GitHub\\\\csc648-03-sp20-team102\\\\application\\\\team102\\\\UI\\\\src\\\\Component\\\\Scan.js\";\nimport React, { Component } from 'react';\nimport MediaHandler from './MediaHandler';\nexport default class Scan extends Component {\n  constructor() {\n    super();\n    this.state = {\n      hasMedia: false\n    };\n    this.mediaHandler = new MediaHandler();\n  }\n\n  componentDidMount() {\n    this.mediaHandler.getPermissions().then(stream => {\n      this.setState({\n        hasMedia: true\n      });\n\n      try {\n        this.myVideo.srcObject = stream;\n      } catch (e) {\n        this.myVideo.src = URL.createObjectURL(stream);\n      }\n\n      this.myVideo.play();\n    });\n  }\n\n  captureImage() {\n    const context = this.canvas.getContext('2d');\n    context.drawImage(this.myVideo, 0, 0, 800, 600);\n    const image = this.canvas.toDataURL('image/jpeg', 0.5);\n    return image;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"video-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      className: \"video\",\n      width: \"300\",\n      ref: ref => {\n        this.myVideo = ref;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/mitya/Documents/GitHub/csc648-03-sp20-team102/application/team102/UI/src/Component/Scan.js"],"names":["React","Component","MediaHandler","Scan","constructor","state","hasMedia","mediaHandler","componentDidMount","getPermissions","then","stream","setState","myVideo","srcObject","e","src","URL","createObjectURL","play","captureImage","context","canvas","getContext","drawImage","image","toDataURL","render","ref"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAGA,eAAe,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAExCG,EAAAA,WAAW,GAAG;AACV;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAIA,SAAKC,YAAL,GAAoB,IAAIL,YAAJ,EAApB;AACH;;AAEDM,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,YAAL,CAAkBE,cAAlB,GACCC,IADD,CACQC,MAAD,IAAY;AACf,WAAKC,QAAL,CAAc;AAACN,QAAAA,QAAQ,EAAG;AAAZ,OAAd;;AAEA,UAAI;AACA,aAAKO,OAAL,CAAaC,SAAb,GAAyBH,MAAzB;AACH,OAFD,CAEE,OAAOI,CAAP,EAAU;AACR,aAAKF,OAAL,CAAaG,GAAb,GAAmBC,GAAG,CAACC,eAAJ,CAAoBP,MAApB,CAAnB;AACH;;AACD,WAAKE,OAAL,CAAaM,IAAb;AACH,KAVD;AAWH;;AAEDC,EAAAA,YAAY,GAAG;AACX,UAAMC,OAAO,GAAG,KAAKC,MAAL,CAAYC,UAAZ,CAAuB,IAAvB,CAAhB;AACAF,IAAAA,OAAO,CAACG,SAAR,CAAkB,KAAKX,OAAvB,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,GAAtC,EAA2C,GAA3C;AACA,UAAMY,KAAK,GAAG,KAAKH,MAAL,CAAYI,SAAZ,CAAsB,YAAtB,EAAoC,GAApC,CAAd;AACA,WAAOD,KAAP;AACH;;AAEDE,EAAAA,MAAM,GAAG;AAEL,WACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAyB,MAAA,KAAK,EAAC,KAA/B;AAAqC,MAAA,GAAG,EAAGC,GAAD,IAAS;AAAC,aAAKf,OAAL,GAAee,GAAf;AAAoB,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAMH;;AAzCuC","sourcesContent":["import React, {Component} from 'react';\r\nimport MediaHandler from './MediaHandler';\r\n\r\n\r\nexport default class Scan extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            hasMedia: false\r\n        };\r\n\r\n        this.mediaHandler = new MediaHandler();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mediaHandler.getPermissions()\r\n        .then( (stream) => {\r\n            this.setState({hasMedia : true});\r\n\r\n            try {\r\n                this.myVideo.srcObject = stream;\r\n            } catch (e) {\r\n                this.myVideo.src = URL.createObjectURL(stream);\r\n            }\r\n            this.myVideo.play();\r\n        })\r\n    }\r\n\r\n    captureImage() {\r\n        const context = this.canvas.getContext('2d');\r\n        context.drawImage(this.myVideo, 0, 0, 800, 600);\r\n        const image = this.canvas.toDataURL('image/jpeg', 0.5);\r\n        return image;\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"video-container\">\r\n                <video className=\"video\" width=\"300\" ref={(ref) => {this.myVideo = ref;}}></video>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}