{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antwong\\\\Documents\\\\temp\\\\csc648-03-sp20-team102\\\\application\\\\team102\\\\UI\\\\src\\\\Component\\\\Home.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, NavLink, Table, TabPane, Nav, NavItem, TabContent, UncontrolledAlert, Button } from \"reactstrap\";\nimport Navi from \"./Navigation\";\nimport TopBar from \"./TopBar\";\nimport \"./Home.css\";\nimport classnames from 'classnames';\nimport axios from \"axios\";\nimport { Bar, Doughnut } from 'react-chartjs-2';\n\nconst Fooddata = props => React.createElement(Row, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, React.createElement(Col, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, props.food.mealName)), React.createElement(Col, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}), React.createElement(Col, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, \"Calories: \", props.food.planCalories), React.createElement(Col, {\n  xs: \"1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}));\n\nconst Recipedata = props => React.createElement(Row, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, React.createElement(Col, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, props.food.recipeName)), React.createElement(Col, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}), React.createElement(Col, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, \"Calories: \", props.food.recipeCalories), React.createElement(Col, {\n  xs: \"1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}));\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    this.deleteItems = this.deleteItems.bind(this);\n    this.state = {\n      userdata: [],\n      password: params.password,\n      username: params.id,\n      fooddata: [],\n      recipedata: [],\n      today: new Date(Date.now()),\n      date: \"\",\n      activeTab: '1',\n      labels: ['Fats', 'Protein', 'Sugar', 'Carbs', 'Sodium'],\n      datasets: [{\n        label: 'Nutrition',\n        backgroundColor: ['#B21F00', '#C9DE00', '#2FDE00', '#00A6B4', '#6800B4'],\n        hoverBackgroundColor: ['#501800', '#4B5000', '#175000', '#003350', '#35014F'],\n        data: [65, 59, 80, 81, 56]\n      }]\n    };\n    var date = (this.state.today.getMonth() + 1).toString() + \"/\" + this.state.today.getDate().toString() + \"/\" + this.state.today.getFullYear().toString();\n    this.state.date = date;\n    console.log(this.state.date);\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    axios.get(`http://localhost:8080/userdata/${params.id}`).then(response => {\n      this.setState({\n        userdata: response.data\n      });\n      console.log(this.state.userdata);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  deleteItems(id) {\n    axios.delete(\"http://localhost:8080/userdata/\" + id).then(res => console.log(res.data));\n    this.setState({\n      userdata: this.state.userdata.filter(el => el._id !== id)\n    });\n  }\n\n  notifications() {\n    //need to query for expiring food in inv\n    return React.createElement(React.Fragment, null, React.createElement(UncontrolledAlert, {\n      color: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Expiring Soon\"));\n  }\n\n  todaysMeals() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    axios.get(\"http://localhost:8080/mealplan/\").then(response => {\n      this.setState({\n        fooddata: response.data\n      });\n    });\n    return this.state.fooddata.map(currentfood => {\n      if (currentfood.creator === params.id && currentfood.date === this.state.date) {\n        return React.createElement(Fooddata, {\n          food: currentfood,\n          deleteItems: this.deleteItems,\n          key: currentfood._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        });\n      }\n    });\n  }\n\n  myRecipes() {\n    var count = 4;\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    axios.get(\"http://localhost:8080/recipedata/\").then(response => {\n      this.setState({\n        recipedata: response.data\n      });\n    });\n    return this.state.recipedata.map(currentfood => {\n      if (currentfood.creator === params.id) {\n        count = count - 1;\n        console.log(count);\n\n        if (count < 0) {\n          return null;\n        }\n\n        return React.createElement(Recipedata, {\n          food: currentfood,\n          deleteItems: this.deleteItems,\n          key: currentfood._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    var inv = \"/inventory/\" + params.id + \"/\" + params.password;\n    var stat = \"/Statistics/\" + params.id + \"/\" + params.password;\n    var meal = \"/mealplan/\" + params.id + \"/\" + params.password; //console.log(user);\n\n    /*\r\n    * homepage should load with user data\r\n    * there should be two tabs\r\n    *   one for current statistics of user\r\n    *   the other should have notifications of expiring items from inv\r\n    *     current meal plan and recent recipes\r\n    *     current meal plan should know the day and content\r\n    * stats chart and table should be grabbing user data and populating\r\n    */\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \" \", React.createElement(TopBar, {\n      username: this.state.username,\n      password: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(Container, {\n      className: \"HomePage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"  \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Welcome, \", this.state.username), this.notifications(), React.createElement(Nav, {\n      tabs: true,\n      justified: true,\n      className: \"plan\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeTab === '1'\n      }),\n      onClick: () => {\n        this.toggle('1');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Today\")), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeTab === '2'\n      }),\n      onClick: () => {\n        this.toggle('2');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Me\")), React.createElement(NavItem, {\n      style: {\n        right: '10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, this.state.date))), React.createElement(TabContent, {\n      activeTab: this.state.activeTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(TabPane, {\n      tabId: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Meal Plan For Today\"), React.createElement(Row, {\n      className: \"homeRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, this.todaysMeals())), React.createElement(Row, {\n      className: \"homeRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"homeSquare\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      href: \"/Recipes/:id/:password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, this.myRecipes())))), React.createElement(TabPane, {\n      tabId: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Statistics\", React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(Doughnut, {\n      data: this.state,\n      options: {\n        title: {\n          display: true,\n          text: 'Daily Nutrition',\n          fontSize: 20\n        },\n        legend: {\n          display: true,\n          position: 'right'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Calories\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }), \" \", React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"57,352\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"Fats\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), \" \", React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"768 g\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Sodium\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), \" \", React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"179 g\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Protien\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), \" \", React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"1,423 g\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Fluids\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), \" \", React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"15 gal\")))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(Bar, {\n      data: this.state,\n      options: {\n        title: {\n          display: true,\n          text: 'Weekly Calories',\n          fontSize: 20\n        },\n        legend: {\n          display: true,\n          position: 'right'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }))))), React.createElement(Navi, {\n      username: this.state.username,\n      password: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Antwong/Documents/temp/csc648-03-sp20-team102/application/team102/UI/src/Component/Home.js"],"names":["React","Component","Container","Row","Col","NavLink","Table","TabPane","Nav","NavItem","TabContent","UncontrolledAlert","Button","Navi","TopBar","classnames","axios","Bar","Doughnut","Fooddata","props","food","mealName","planCalories","Recipedata","recipeName","recipeCalories","Home","constructor","match","params","deleteItems","bind","state","userdata","password","username","id","fooddata","recipedata","today","Date","now","date","activeTab","labels","datasets","label","backgroundColor","hoverBackgroundColor","data","getMonth","toString","getDate","getFullYear","console","log","toggle","tab","setState","componentDidMount","get","then","response","catch","error","delete","res","filter","el","_id","notifications","todaysMeals","map","currentfood","creator","myRecipes","count","render","inv","stat","meal","active","right","title","display","text","fontSize","legend","position"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Row, Col, NavLink, Table, TabPane, Nav, NavItem, TabContent, UncontrolledAlert, Button } from \"reactstrap\";\r\nimport Navi from \"./Navigation\";\r\nimport TopBar from \"./TopBar\";\r\nimport \"./Home.css\";\r\nimport classnames from 'classnames';\r\nimport axios from \"axios\";\r\nimport { Bar, Doughnut } from 'react-chartjs-2';\r\n\r\nconst Fooddata = props => (\r\n  <Row>\r\n    <Col><p>{props.food.mealName}</p></Col><Col></Col><Col>Calories: {props.food.planCalories}</Col><Col xs='1' />\r\n  </Row>\r\n);\r\nconst Recipedata = props => (\r\n  <Row>\r\n    <Col><p>{props.food.recipeName}</p></Col><Col></Col><Col>Calories: {props.food.recipeCalories}</Col><Col xs='1' />\r\n  </Row>\r\n);\r\n\r\nexport default class Home extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const { match: { params } } = this.props;\r\n    this.deleteItems = this.deleteItems.bind(this);\r\n    this.state = {\r\n      userdata: [],\r\n      password: params.password,\r\n      username: params.id,\r\n      fooddata: [],\r\n      recipedata: [],\r\n      today: new Date(Date.now()),\r\n      date: \"\",\r\n      activeTab: '1',\r\n      labels: ['Fats', 'Protein', 'Sugar',\r\n        'Carbs', 'Sodium'],\r\n      datasets: [{\r\n        label: 'Nutrition',\r\n        backgroundColor: [\r\n          '#B21F00',\r\n          '#C9DE00',\r\n          '#2FDE00',\r\n          '#00A6B4',\r\n          '#6800B4'\r\n        ],\r\n        hoverBackgroundColor: [\r\n          '#501800',\r\n          '#4B5000',\r\n          '#175000',\r\n          '#003350',\r\n          '#35014F'\r\n        ],\r\n        data: [65, 59, 80, 81, 56]\r\n      }]\r\n    };\r\n    var date = (this.state.today.getMonth() + 1).toString() + \"/\" + (this.state.today.getDate()).toString() + \"/\" + (this.state.today.getFullYear()).toString();\r\n    this.state.date = date\r\n    console.log(this.state.date)\r\n  }\r\n  toggle(tab) {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({\r\n        activeTab: tab\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const { match: { params } } = this.props;\r\n    axios\r\n      .get(`http://localhost:8080/userdata/${params.id}`)\r\n      .then(response => {\r\n        this.setState({ userdata: response.data });\r\n        console.log(this.state.userdata)\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  deleteItems(id) {\r\n    axios\r\n      .delete(\"http://localhost:8080/userdata/\" + id)\r\n      .then(res => console.log(res.data));\r\n    this.setState({\r\n      userdata: this.state.userdata.filter(el => el._id !== id)\r\n    });\r\n  }\r\n  notifications() {//need to query for expiring food in inv\r\n    return (<>\r\n      <UncontrolledAlert color=\"info\">\r\n        Expiring Soon\r\n      </UncontrolledAlert>\r\n    </>\r\n    );\r\n  }\r\n  todaysMeals() {\r\n    const { match: { params } } = this.props;\r\n    axios\r\n      .get(\"http://localhost:8080/mealplan/\")\r\n      .then(response => {\r\n        this.setState({\r\n          fooddata: response.data,\r\n        });\r\n      })\r\n    return this.state.fooddata.map(currentfood => {\r\n      if (currentfood.creator === params.id && currentfood.date === this.state.date) {\r\n        return (\r\n          <Fooddata\r\n            food={currentfood}\r\n            deleteItems={this.deleteItems}\r\n            key={currentfood._id}\r\n          />\r\n        );\r\n      }\r\n    });\r\n  }\r\n  myRecipes() {\r\n    var count = 4;\r\n    const { match: { params } } = this.props;\r\n    axios\r\n      .get(\"http://localhost:8080/recipedata/\")\r\n      .then(response => {\r\n        this.setState({\r\n          recipedata: response.data,\r\n        });\r\n      })\r\n    return this.state.recipedata.map(currentfood => {\r\n      if (currentfood.creator === params.id) {\r\n        count = count - 1;\r\n        console.log(count);\r\n        if (count < 0) {\r\n          return (null);\r\n        }\r\n        return (\r\n          <Recipedata\r\n            food={currentfood}\r\n            deleteItems={this.deleteItems}\r\n            key={currentfood._id}\r\n          />\r\n        );\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    const { match: { params } } = this.props;\r\n\r\n    var inv = \"/inventory/\" + params.id + \"/\" + params.password;\r\n    var stat = \"/Statistics/\" + params.id + \"/\" + params.password;\r\n    var meal = \"/mealplan/\" + params.id + \"/\" + params.password;\r\n\r\n    //console.log(user);\r\n    /*\r\n    * homepage should load with user data\r\n    * there should be two tabs\r\n    *   one for current statistics of user\r\n    *   the other should have notifications of expiring items from inv\r\n    *     current meal plan and recent recipes\r\n    *     current meal plan should know the day and content\r\n    * stats chart and table should be grabbing user data and populating\r\n    */\r\n    return (\r\n      <div className=\"container\"> <TopBar username={this.state.username} password={this.state.password} />\r\n        <Container className=\"HomePage\">  <br />\r\n          <h2>Welcome, {this.state.username}</h2>\r\n          {this.notifications()}\r\n          <Nav tabs justified className=\"plan\">\r\n            <NavItem>\r\n              <NavLink className={classnames({ active: this.state.activeTab === '1' })}\r\n                onClick={() => { this.toggle('1'); }} >\r\n                Today\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={classnames({ active: this.state.activeTab === '2' })}\r\n                onClick={() => { this.toggle('2'); }} >\r\n                Me\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem style={{right: '10px'}}> \r\n              <NavLink>{this.state.date}</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n          <TabContent activeTab={this.state.activeTab}>\r\n            <TabPane tabId=\"1\">\r\n              <h3>Meal Plan For Today</h3>\r\n              <Row className=\"homeRow\">\r\n                <Col>{this.todaysMeals()}</Col>\r\n\r\n              </Row>\r\n              <Row className=\"homeRow\">\r\n                <Col className=\"homeSquare\">\r\n                  <NavLink href=\"/Recipes/:id/:password\">\r\n                    {this.myRecipes()}\r\n                  </NavLink>\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId=\"2\">\r\n              Statistics\r\n          <Row>\r\n                <Doughnut\r\n                  data={this.state}\r\n                  options={{\r\n                    title: {\r\n                      display: true,\r\n                      text: 'Daily Nutrition',\r\n                      fontSize: 20\r\n                    },\r\n                    legend: {\r\n                      display: true,\r\n                      position: 'right'\r\n                    }\r\n                  }}\r\n                />\r\n              </Row>\r\n              <Row><Col xs=\"1\"></Col>\r\n                <Col><Table striped>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th scope=\"row\">Calories</th>\r\n                      <td></td> <td>57,352</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">Fats</th>\r\n                      <td></td> <td>768 g</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">Sodium</th>\r\n                      <td></td> <td>179 g</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">Protien</th>\r\n                      <td></td> <td>1,423 g</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">Fluids</th>\r\n                      <td></td> <td>15 gal</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table></Col>\r\n              </Row>\r\n              <Row>\r\n                <Bar\r\n                  data={this.state}\r\n                  options={{\r\n                    title: {\r\n                      display: true,\r\n                      text: 'Weekly Calories',\r\n                      fontSize: 20\r\n                    },\r\n                    legend: {\r\n                      display: true,\r\n                      position: 'right'\r\n                    }\r\n                  }}\r\n                />\r\n              </Row>\r\n            </TabPane>\r\n          </TabContent>\r\n        </Container>\r\n        <Navi username={this.state.username} password={this.state.password} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}