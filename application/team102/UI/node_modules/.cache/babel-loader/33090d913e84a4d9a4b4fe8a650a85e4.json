{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mitya\\\\Documents\\\\GitHub\\\\csc648-03-sp20-team102\\\\application\\\\team102\\\\UI\\\\src\\\\Component\\\\Scan.js\";\nimport React, { Component } from 'react';\nimport MediaHandler from './MediaHandler';\nexport default class Scan extends Component {\n  constructor() {\n    super();\n    this.state = {\n      hasMedia: false\n    };\n    this.mediaHandler = new MediaHandler();\n  }\n\n  componentDidMount() {\n    this.mediaHandler.getPermissions().then(stream => {\n      this.setState({\n        hasMedia: true\n      });\n\n      try {\n        this.myVideo.srcObject = stream;\n      } catch (e) {\n        this.myVideo.src = URL.createObjectURL(stream);\n      }\n\n      this.myVideo.play();\n    });\n  }\n\n  render() {\n    const canvasEl = React.createElement(\"canvas\", {\n      id: \"canvas\",\n      width: \"640\",\n      height: \"480\",\n      className: \"photoCard\",\n      ref: input => this.canvasElement = canvas,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n    const context = this.canvasElement.getContext('2d');\n    context.drawImage(this.props.video, 0, 0, 640, 480);\n    return React.createElement(\"div\", {\n      className: \"video-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      className: \"video\",\n      width: \"100%\",\n      ref: ref => {\n        this.myVideo = ref;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, canvasEl));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/mitya/Documents/GitHub/csc648-03-sp20-team102/application/team102/UI/src/Component/Scan.js"],"names":["React","Component","MediaHandler","Scan","constructor","state","hasMedia","mediaHandler","componentDidMount","getPermissions","then","stream","setState","myVideo","srcObject","e","src","URL","createObjectURL","play","render","canvasEl","input","canvasElement","canvas","context","getContext","drawImage","props","video","ref"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAGA,eAAe,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAExCG,EAAAA,WAAW,GAAG;AACV;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAIA,SAAKC,YAAL,GAAoB,IAAIL,YAAJ,EAApB;AACH;;AAEDM,EAAAA,iBAAiB,GAAG;AAChB,SAAKD,YAAL,CAAkBE,cAAlB,GACCC,IADD,CACQC,MAAD,IAAY;AACf,WAAKC,QAAL,CAAc;AAACN,QAAAA,QAAQ,EAAG;AAAZ,OAAd;;AAEA,UAAI;AACA,aAAKO,OAAL,CAAaC,SAAb,GAAyBH,MAAzB;AACH,OAFD,CAEE,OAAOI,CAAP,EAAU;AACR,aAAKF,OAAL,CAAaG,GAAb,GAAmBC,GAAG,CAACC,eAAJ,CAAoBP,MAApB,CAAnB;AACH;;AACD,WAAKE,OAAL,CAAaM,IAAb;AACH,KAVD;AAWH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,UAAMC,QAAQ,GAAI;AAAQ,MAAA,EAAE,EAAC,QAAX;AAAoB,MAAA,KAAK,EAAC,KAA1B;AAAgC,MAAA,MAAM,EAAC,KAAvC;AAA6C,MAAA,SAAS,EAAC,WAAvD;AAAmE,MAAA,GAAG,EAAGC,KAAD,IAAW,KAAKC,aAAL,GAAqBC,MAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlB;AACA,UAAMC,OAAO,GAAG,KAAKF,aAAL,CAAmBG,UAAnB,CAA8B,IAA9B,CAAhB;AACAD,IAAAA,OAAO,CAACE,SAAR,CAAkB,KAAKC,KAAL,CAAWC,KAA7B,EAAoC,CAApC,EAAuC,CAAvC,EAA0C,GAA1C,EAA+C,GAA/C;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAyB,MAAA,KAAK,EAAC,MAA/B;AAAsC,MAAA,GAAG,EAAGC,GAAD,IAAS;AAAC,aAAKjB,OAAL,GAAeiB,GAAf;AAAoB,OAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCT,QADD,CAFJ,CADJ;AASH;;AAzCuC","sourcesContent":["import React, {Component} from 'react';\r\nimport MediaHandler from './MediaHandler';\r\n\r\n\r\nexport default class Scan extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            hasMedia: false\r\n        };\r\n\r\n        this.mediaHandler = new MediaHandler();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mediaHandler.getPermissions()\r\n        .then( (stream) => {\r\n            this.setState({hasMedia : true});\r\n\r\n            try {\r\n                this.myVideo.srcObject = stream;\r\n            } catch (e) {\r\n                this.myVideo.src = URL.createObjectURL(stream);\r\n            }\r\n            this.myVideo.play();\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const canvasEl = (<canvas id=\"canvas\" width=\"640\" height=\"480\" className=\"photoCard\" ref={(input) => this.canvasElement = canvas} />);\r\n        const context = this.canvasElement.getContext('2d');\r\n        context.drawImage(this.props.video, 0, 0, 640, 480);\r\n        \r\n        return (\r\n            <div className=\"video-container\">\r\n                <video className=\"video\" width=\"100%\" ref={(ref) => {this.myVideo = ref;}}></video>\r\n                <div className=\"content\">\r\n                {canvasEl}\r\n            </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}