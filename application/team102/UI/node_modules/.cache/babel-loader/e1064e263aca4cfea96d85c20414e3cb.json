{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antwong\\\\Documents\\\\temp\\\\csc648-03-sp20-team102\\\\application\\\\team102\\\\UI\\\\src\\\\Component\\\\Recipe.js\";\nimport React, { useState, Component } from 'react';\nimport { Container, Row, Col, Input, Button, ButtonGroup, Card, CardImg, Form, CardText, CardTitle, CardImgOverlay, FormGroup, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport Navi from \"./Navigation\";\nimport TopBar from \"./TopBar\";\nimport axios from \"axios\"; //grabs recipe information\n//displays as a rectangular picture with overlay text\n//when clicked with have a pop up with more info\n\nconst Recipedata = props => {\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return React.createElement(Card, {\n    className: \"bigdes\",\n    body: true,\n    inverse: \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(CardImg, {\n    alt: \"recipeItem\",\n    src: props.food.recipeImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, props.food.recipeName)), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Calories: \", Math.round(props.food.recipeCalories)), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Carbs: \", Math.round(props.food.recipeCarbs), \" g\"), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Protein: \", Math.round(props.food.recipeProtein), \" g\"), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Fat: \", Math.round(props.food.recipeFat), \" g\"), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Sugar: \", Math.round(props.food.recipeSugar), \" g\"), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Sodium: \", Math.round(props.food.recipeSodium), \" mg\")), React.createElement(\"img\", {\n    alt: props.food.recipeName,\n    src: props.food.recipeImage,\n    height: \"35%\",\n    width: \"50%\",\n    borderradius: \"30px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Ingredients\"), props.food.ingredients.map(item => {\n    return React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, item);\n  })), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    className: \"itemOptbtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Add to Meal Plan\")), React.createElement(Button, {\n    onClick: () => \"/create\" + props.food._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })))), React.createElement(CardImgOverlay, {\n    onClick: toggle,\n    style: {\n      backgroundColor: \"rgba(0, 0, 0, 0.375)\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(CardTitle, {\n    position: \"fixed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, props.food.recipeName)), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Calories: \", props.food.recipeCalories > 0 ? Math.round(props.food.recipeCalories) : 0)));\n};\n\nexport default class Recipe extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeSearch = this.onChangeSearch.bind(this);\n    this.onChangeCalories = this.onChangeCalories.bind(this);\n    this.onChangeCarbs = this.onChangeCarbs.bind(this);\n    this.onChangeFat = this.onChangeFat.bind(this);\n    this.onChangeSugar = this.onChangeSugar.bind(this);\n    this.onChangeSodium = this.onChangeSodium.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.deleteItems = this.deleteItems.bind(this);\n    this.searchRepClean = this.searchRepClean.bind(this);\n    this.sort = this.sort.bind(this);\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    this.state = {\n      creator: params.id,\n      password: params.password,\n      searches: \"\",\n      recipedata: [],\n      newrecipedata: [],\n      newRecipes: [],\n      recipename: \"\",\n      recipeCalories: \"\",\n      recipeCarbs: \"\",\n      recipeFat: \"\",\n      recipeProtein: \"\",\n      recipeSugar: \"\",\n      recipeSodium: \"\",\n      addedRecipe: \"\",\n      ingredients: [],\n      recipeImage: \"\",\n      fat: params.fat,\n      calories: params.calories,\n      carbs: params.carbs,\n      sugar: params.sugar\n    };\n  }\n\n  searchRepClean() {\n    this.setState({\n      newrecipedata: []\n    });\n  }\n\n  onChangeSearch(e) {\n    this.setState({\n      searches: e.target.value\n    });\n  }\n\n  onChangeCalories(e) {\n    this.setState({\n      recipeCalories: e.target.value.replace(/\\D/g, '')\n    });\n  }\n\n  onChangeCarbs(e) {\n    this.setState({\n      recipeCarbs: e.target.value.replace(/\\D/g, '')\n    });\n  }\n\n  onChangeSugar(e) {\n    this.setState({\n      recipeSugar: e.target.value.replace(/\\D/g, '')\n    });\n  }\n\n  onChangeSodium(e) {\n    this.setState({\n      recipeSodium: e.target.value.replace(/\\D/g, '')\n    });\n  }\n\n  onChangeProtein(e) {\n    this.setState({\n      protein: e.target.value\n    });\n  }\n\n  onChangeFat(e) {\n    this.setState({\n      recipeFat: e.target.value.replace(/\\D/g, '')\n    });\n  }\n  /**onSubmit sends a search request to edamam api with current params */\n\n\n  onSubmit(e) {\n    e.preventDefault();\n    axios.get(`https://api.edamam.com/search?q=${this.state.searches}&app_id=b53160ee&app_key=5d9984e95c5c6968d5edfb7d02c83b46&from=0&to=10&calories=0-${this.state.recipeCalories}${this.state.recipeFat}${this.state.recipeCarbs}${this.state.recipeSugar}${this.state.recipeSodium}`).then(response => {\n      this.setState({\n        newrecipedata: response.data.hits\n      });\n      this.sort();\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  /** sort will take the new recipe data and only grab what is needed\r\n   * and creates a new list of recipes for search results\r\n   * cleans up results data\r\n   */\n\n\n  sort() {\n    let newList = [];\n    this.state.newrecipedata.map(currentfood => {\n      let newR = {\n        ingredients: [],\n        recipeName: \"\",\n        recipeImage: \"\",\n        recipeCalories: \"\",\n        recipeProtein: \"\",\n        recipeFat: \"\",\n        recipeCarbs: \"\",\n        recipeSugar: \"\",\n        recipeSodium: \"\",\n        creator: this.state.creator\n      };\n      newR.ingredients = currentfood.recipe.ingredientLines;\n      newR.recipeName = currentfood.recipe.label;\n      newR.recipeImage = currentfood.recipe.image;\n      newR.recipeCalories = currentfood.recipe.calories;\n      newR.recipeProtein = currentfood.recipe.totalNutrients.PROCNT.quantity;\n      newR.recipeFat = currentfood.recipe.totalNutrients.FAT.quantity;\n      newR.recipeCarbs = currentfood.recipe.totalNutrients.CHOCDF.quantity;\n      newR.recipeSugar = currentfood.recipe.totalNutrients.SUGAR.quantity;\n      newR.recipeSodium = currentfood.recipe.totalNutrients.NA.quantity;\n      console.log(newR);\n      newList.push(newR);\n      return null;\n    });\n    this.setState({\n      newRecipes: newList\n    });\n    console.log(this.state.newRecipes);\n    this.searchRepClean();\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/recipedata/\").then(response => {\n      this.setState({\n        recipedata: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  deleteItems(id) {\n    axios.delete(\"http://localhost:8080/recipedata/\" + id).then(res => console.log(res.data));\n    this.setState({\n      recipedata: this.state.recipedata.filter(el => el._id !== id)\n    });\n  }\n\n  addRecipe(newR) {\n    axios.post(\"http://localhost:8080/recipedata/add\", newR).then(res => console.log(res.data));\n    this.onChangeSearch(\"\");\n  }\n\n  inventory() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    return this.state.recipedata.map(currentfood => {\n      if (currentfood.creator === params.id) {\n        return React.createElement(Recipedata, {\n          food: currentfood,\n          username: params.id,\n          password: params.password,\n          key: currentfood._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        });\n      }\n\n      return null;\n    });\n  }\n\n  searchedRecipes() {\n    //const { match: { params } } = this.props;\n    return this.state.newRecipes.map(currentfood => {\n      return React.createElement(Recipedata, {\n        food: currentfood,\n        addRecipe: this.addRecipe,\n        key: currentfood._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      });\n    });\n  }\n\n  restrictions() {\n    return React.createElement(Form, {\n      justified: true,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"Search\",\n      style: {\n        width: '70vw'\n      },\n      required: true,\n      className: \"form-control\",\n      value: this.state.searches,\n      onChange: this.onChangeSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), \" \", React.createElement(Input, {\n      type: \"submit\",\n      style: {\n        width: '30vw'\n      },\n      value: \"Find\",\n      className: \"btn btn-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      style: {\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      style: {\n        width: '24vw',\n        padding: '0'\n      },\n      onChange: this.onChangeCalories,\n      value: this.state.recipeCalories,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Calories\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"250  Cal\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"500  Cal\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"750  Cal\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"1000  Cal\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"1500  Cal\")), React.createElement(Input, {\n      type: \"select\",\n      style: {\n        width: '15vw',\n        padding: '0'\n      },\n      onChange: this.onChangeFat,\n      value: this.state.recipeFat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"Fat\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"5 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"10 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"15 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"20 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"25 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"30 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"35 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"40 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"45 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"50 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"55 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"60 g\")), React.createElement(Input, {\n      type: \"select\",\n      style: {\n        width: '19vw',\n        padding: '0'\n      },\n      value: this.state.recipeCarbs,\n      onChange: this.onChangeCarbs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Carbs\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"5 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"10 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \"15 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"20 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \"25 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"30 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"35 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"40 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"45 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"50 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"55 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, \"60 g\")), React.createElement(Input, {\n      type: \"select\",\n      style: {\n        width: '23vw',\n        padding: '0'\n      },\n      value: this.state.recipeSodium,\n      onChange: this.onChangeSodium,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"Sodium\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"5 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"10 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"15 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"20 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"25 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"30 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"35 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"40 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"45 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"50 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"55 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \"60 g\")), React.createElement(Input, {\n      type: \"select\",\n      style: {\n        width: '19vw',\n        padding: '0'\n      },\n      value: this.state.recipeSugar,\n      onChange: this.onChangeSugar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"Sugar\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"5 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"10 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"15 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"20 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"25 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"30 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \"35 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"40 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, \"45 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, \"50 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, \"55 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \"60 g\"))));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(TopBar, {\n      username: this.state.creator,\n      password: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }), React.createElement(Container, {\n      className: \"fit-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, \"Recipes\"))), this.restrictions(), this.state.searches !== \"\" ? this.searchedRecipes() : this.inventory(), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    })), React.createElement(Navi, {\n      username: this.state.creator,\n      password: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }));\n  }\n\n}\n/**var search = encodeURI(params.search);\r\n    var calories = \"\";\r\n    if (params.calories !== \"NA\") {\r\n      calories = encodeURI(`${params.calories}`);\r\n    }\r\n    var fat = \"\";\r\n    if (params.fat !== \"NA\") {\r\n      fat = encodeURI(`&nutrients[FAT]=${params.fat}`);\r\n    }\r\n    var sugar = \"\";\r\n    if (params.sugar !== \"NA\") {\r\n      sugar = encodeURI(`&nutrients[SUGAR]=${params.sugar}`);\r\n    }\r\n    var carbs = \"\";\r\n    if (params.carbs !== \"NA\") {\r\n      carbs = encodeURI(`&nutrients[CHOCDF]=${params.carbs}`);\r\n    }\r\n\r\n\r\n\r\n    let ingredients = [];\r\n          currentfood.recipe.ingredients.map(currentingredient => {\r\n            console.log(currentingredient.text);\r\n            ingredients.push(currentingredient.text);\r\n            return (null);\r\n          })\r\n\r\n\r\n          recipedata.recipe.ingredients.map(currentingredient => {\r\n      ingred = currentingredient.text;\r\n      newR.ingredients.push(ingred);\r\n      console.log(newR.ingredients);\r\n      return (null);\r\n    })\r\n     */","map":{"version":3,"sources":["C:/Users/Antwong/Documents/temp/csc648-03-sp20-team102/application/team102/UI/src/Component/Recipe.js"],"names":["React","useState","Component","Container","Row","Col","Input","Button","ButtonGroup","Card","CardImg","Form","CardText","CardTitle","CardImgOverlay","FormGroup","Modal","ModalHeader","ModalBody","ModalFooter","Navi","TopBar","axios","Recipedata","props","className","modal","setModal","toggle","food","recipeImage","recipeName","Math","round","recipeCalories","recipeCarbs","recipeProtein","recipeFat","recipeSugar","recipeSodium","ingredients","map","item","_id","backgroundColor","Recipe","constructor","onChangeSearch","bind","onChangeCalories","onChangeCarbs","onChangeFat","onChangeSugar","onChangeSodium","onSubmit","deleteItems","searchRepClean","sort","match","params","state","creator","id","password","searches","recipedata","newrecipedata","newRecipes","recipename","addedRecipe","fat","calories","carbs","sugar","setState","e","target","value","replace","onChangeProtein","protein","preventDefault","get","then","response","data","hits","catch","error","console","log","newList","currentfood","newR","recipe","ingredientLines","label","image","totalNutrients","PROCNT","quantity","FAT","CHOCDF","SUGAR","NA","push","componentDidMount","delete","res","filter","el","addRecipe","post","inventory","searchedRecipes","restrictions","width","display","padding","render"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react';\r\nimport {\r\n  Container, Row, Col, Input, Button, ButtonGroup,\r\n  Card, CardImg, Form, CardText, CardTitle, CardImgOverlay,\r\n  FormGroup, Modal, ModalHeader, ModalBody, ModalFooter,\r\n} from 'reactstrap';\r\nimport Navi from \"./Navigation\";\r\nimport TopBar from \"./TopBar\";\r\nimport axios from \"axios\";\r\n\r\n//grabs recipe information\r\n//displays as a rectangular picture with overlay text\r\n//when clicked with have a pop up with more info\r\nconst Recipedata = props => {\r\n  const { className } = props;\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  return (\r\n    <Card className=\"bigdes\" body inverse='true'>\r\n      <CardImg alt=\"recipeItem\" src={props.food.recipeImage} />\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}><h3>{props.food.recipeName}</h3></ModalHeader>\r\n        <ModalBody>\r\n          <Row>\r\n            <Col>\r\n              <h5>Calories: {Math.round(props.food.recipeCalories)}</h5>\r\n              <h5>Carbs: {Math.round(props.food.recipeCarbs)} g</h5>          \r\n              <h5>Protein: {Math.round(props.food.recipeProtein)} g</h5>\r\n              <h5>Fat: {Math.round(props.food.recipeFat)} g</h5>              \r\n              <h5>Sugar: {Math.round(props.food.recipeSugar)} g</h5>\r\n              <h5>Sodium: {Math.round(props.food.recipeSodium)} mg</h5>\r\n            </Col>\r\n            <img alt={props.food.recipeName} src={props.food.recipeImage} height=\"35%\" width=\"50%\" borderradius=\"30px\" />\r\n          </Row>         \r\n          <br/>\r\n          <h3>Ingredients</h3>\r\n          {props.food.ingredients.map(item=>{return(<h5>{item}</h5>);})}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <ButtonGroup className=\"itemOptbtn\">\r\n            <Button >\r\n\r\n            </Button>\r\n            <Button>\r\n              <CardText>Add to Meal Plan</CardText>\r\n            </Button>\r\n            <Button onClick={() => \"/create\" + props.food._id}>\r\n\r\n            </Button>\r\n          </ButtonGroup>\r\n        </ModalFooter>\r\n      </Modal>\r\n      <CardImgOverlay onClick={toggle} style={{ backgroundColor: \"rgba(0, 0, 0, 0.375)\" }}>\r\n        <CardTitle position='fixed'><h4>{props.food.recipeName}</h4></CardTitle>\r\n        <CardText>Calories: {props.food.recipeCalories > 0 ? Math.round(props.food.recipeCalories) : 0}</CardText>\r\n      </CardImgOverlay>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default class Recipe extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearch = this.onChangeSearch.bind(this);\r\n    this.onChangeCalories = this.onChangeCalories.bind(this);\r\n    this.onChangeCarbs = this.onChangeCarbs.bind(this);\r\n    this.onChangeFat = this.onChangeFat.bind(this);\r\n    this.onChangeSugar = this.onChangeSugar.bind(this);\r\n    this.onChangeSodium = this.onChangeSodium.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.deleteItems = this.deleteItems.bind(this);\r\n    this.searchRepClean = this.searchRepClean.bind(this);\r\n    this.sort = this.sort.bind(this);\r\n    const { match: { params } } = this.props;\r\n    this.state = {\r\n      creator: params.id,\r\n      password: params.password,\r\n      searches: \"\",\r\n      recipedata: [],\r\n      newrecipedata: [],\r\n      newRecipes: [],\r\n      recipename: \"\",\r\n      recipeCalories: \"\",\r\n      recipeCarbs: \"\",\r\n      recipeFat: \"\",\r\n      recipeProtein: \"\",\r\n      recipeSugar: \"\",\r\n      recipeSodium: \"\",\r\n      addedRecipe: \"\",\r\n      ingredients: [],\r\n      recipeImage: \"\",\r\n      fat: params.fat,\r\n      calories: params.calories,\r\n      carbs: params.carbs,\r\n      sugar: params.sugar\r\n    };\r\n  }\r\n  searchRepClean(){this.setState({ newrecipedata:[]});}\r\n  onChangeSearch(e) { this.setState({ searches: e.target.value }); }\r\n  onChangeCalories(e) { this.setState({ recipeCalories: e.target.value.replace(/\\D/g, '') }); }\r\n  onChangeCarbs(e) { this.setState({ recipeCarbs: e.target.value.replace(/\\D/g, '') }); }\r\n  onChangeSugar(e) { this.setState({ recipeSugar: e.target.value.replace(/\\D/g, '') }); }\r\n  onChangeSodium(e) { this.setState({ recipeSodium: e.target.value.replace(/\\D/g, '') }); }\r\n  onChangeProtein(e) { this.setState({ protein: e.target.value }); }\r\n  onChangeFat(e) { this.setState({ recipeFat: e.target.value.replace(/\\D/g, '') }); }\r\n  /**onSubmit sends a search request to edamam api with current params */\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    axios\r\n      .get(`https://api.edamam.com/search?q=${this.state.searches}&app_id=b53160ee&app_key=5d9984e95c5c6968d5edfb7d02c83b46&from=0&to=10&calories=0-${this.state.recipeCalories}${this.state.recipeFat}${this.state.recipeCarbs}${this.state.recipeSugar}${this.state.recipeSodium}`)\r\n      .then(response => {\r\n        this.setState({ newrecipedata: response.data.hits });\r\n        this.sort();\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  /** sort will take the new recipe data and only grab what is needed\r\n   * and creates a new list of recipes for search results\r\n   * cleans up results data\r\n   */\r\n  sort() {\r\n    let newList = [];\r\n    this.state.newrecipedata.map(currentfood => {\r\n      let newR = {\r\n        ingredients: [],\r\n        recipeName: \"\",\r\n        recipeImage: \"\",\r\n        recipeCalories: \"\",\r\n        recipeProtein: \"\",\r\n        recipeFat: \"\",\r\n        recipeCarbs: \"\",\r\n        recipeSugar: \"\",\r\n        recipeSodium: \"\",\r\n        creator: this.state.creator,\r\n      };\r\n      newR.ingredients= currentfood.recipe.ingredientLines;\r\n      newR.recipeName = currentfood.recipe.label;\r\n      newR.recipeImage = currentfood.recipe.image;\r\n      newR.recipeCalories = currentfood.recipe.calories;\r\n      newR.recipeProtein = currentfood.recipe.totalNutrients.PROCNT.quantity; \r\n      newR.recipeFat = currentfood.recipe.totalNutrients.FAT.quantity;\r\n      newR.recipeCarbs = currentfood.recipe.totalNutrients.CHOCDF.quantity;\r\n      newR.recipeSugar = currentfood.recipe.totalNutrients.SUGAR.quantity;\r\n      newR.recipeSodium = currentfood.recipe.totalNutrients.NA.quantity;    \r\n      console.log(newR);\r\n      newList.push(newR);\r\n      return (null);\r\n    })    \r\n    this.setState({\r\n      newRecipes: newList\r\n    })\r\n    console.log(this.state.newRecipes);\r\n    this.searchRepClean();\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:8080/recipedata/\")\r\n      .then(response => {\r\n        this.setState({ recipedata: response.data });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  deleteItems(id) {\r\n    axios\r\n      .delete(\"http://localhost:8080/recipedata/\" + id)\r\n      .then(res => console.log(res.data));\r\n    this.setState({\r\n      recipedata: this.state.recipedata.filter(el => el._id !== id)\r\n    });\r\n  }\r\n  addRecipe(newR) {    \r\n    axios\r\n      .post(\"http://localhost:8080/recipedata/add\", newR)\r\n      .then(res => console.log(res.data));\r\n    this.onChangeSearch(\"\");\r\n  };\r\n\r\n  inventory() {\r\n    const { match: { params } } = this.props;\r\n    return this.state.recipedata.map(currentfood => {\r\n      if (currentfood.creator === params.id) {\r\n        return (\r\n          <Recipedata\r\n            food={currentfood}\r\n            username={params.id}\r\n            password={params.password}\r\n            key={currentfood._id}\r\n          />\r\n        );\r\n      } return (null);\r\n    });\r\n  }\r\n\r\n  searchedRecipes() {\r\n    //const { match: { params } } = this.props;\r\n    return this.state.newRecipes.map(currentfood => {\r\n      return (\r\n        <Recipedata\r\n          food={currentfood}\r\n          addRecipe={this.addRecipe}\r\n          key={currentfood._id}\r\n        />\r\n      );\r\n    });\r\n  }\r\n  restrictions() {\r\n    return (\r\n      <Form justified onSubmit={this.onSubmit}>\r\n        <FormGroup>\r\n          <Row>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              style={{ width: '70vw' }}\r\n              required\r\n              className=\"form-control\"\r\n              value={this.state.searches}\r\n              onChange={this.onChangeSearch}\r\n            /> <Input\r\n              type=\"submit\"\r\n              style={{ width: '30vw' }}\r\n              value=\"Find\"\r\n              className=\"btn btn-secondary\"\r\n            /></Row>\r\n        </FormGroup>\r\n        <FormGroup style={{ display: \"flex\" }}>\r\n          <Input\r\n            type=\"select\"\r\n            style={{ width: '24vw', padding: '0' }}\r\n            onChange={this.onChangeCalories}\r\n            value={this.state.recipeCalories}>\r\n            <option>Calories</option>\r\n            <option>250  Cal</option>\r\n            <option>500  Cal</option>\r\n            <option>750  Cal</option>\r\n            <option>1000  Cal</option>\r\n            <option>1500  Cal</option>\r\n          </Input>\r\n          <Input\r\n            type=\"select\"\r\n            style={{ width: '15vw', padding: '0' }}\r\n            onChange={this.onChangeFat}\r\n            value={this.state.recipeFat}>\r\n            <option>Fat</option>\r\n            <option>5 g</option>\r\n            <option>10 g</option>\r\n            <option>15 g</option>\r\n            <option>20 g</option>\r\n            <option>25 g</option>\r\n            <option>30 g</option>\r\n            <option>35 g</option>\r\n            <option>40 g</option>\r\n            <option>45 g</option>\r\n            <option>50 g</option>\r\n            <option>55 g</option>\r\n            <option>60 g</option>\r\n          </Input>\r\n          <Input\r\n            type=\"select\"\r\n            style={{ width: '19vw', padding: '0' }}\r\n            value={this.state.recipeCarbs}\r\n            onChange={this.onChangeCarbs}>\r\n            <option>Carbs</option>\r\n            <option>5 g</option>\r\n            <option>10 g</option>\r\n            <option>15 g</option>\r\n            <option>20 g</option>\r\n            <option>25 g</option>\r\n            <option>30 g</option>\r\n            <option>35 g</option>\r\n            <option>40 g</option>\r\n            <option>45 g</option>\r\n            <option>50 g</option>\r\n            <option>55 g</option>\r\n            <option>60 g</option>\r\n          </Input>\r\n          <Input\r\n            type=\"select\"\r\n            style={{ width: '23vw', padding: '0' }}\r\n            value={this.state.recipeSodium}\r\n            onChange={this.onChangeSodium}>\r\n            <option>Sodium</option>\r\n            <option>5 g</option>\r\n            <option>10 g</option>\r\n            <option>15 g</option>\r\n            <option>20 g</option>\r\n            <option>25 g</option>\r\n            <option>30 g</option>\r\n            <option>35 g</option>\r\n            <option>40 g</option>\r\n            <option>45 g</option>\r\n            <option>50 g</option>\r\n            <option>55 g</option>\r\n            <option>60 g</option>\r\n          </Input>\r\n          <Input\r\n            type=\"select\"\r\n            style={{ width: '19vw', padding: '0' }}\r\n            value={this.state.recipeSugar}\r\n            onChange={this.onChangeSugar}>\r\n            <option>Sugar</option>\r\n            <option>5 g</option>\r\n            <option>10 g</option>\r\n            <option>15 g</option>\r\n            <option>20 g</option>\r\n            <option>25 g</option>\r\n            <option>30 g</option>\r\n            <option>35 g</option>\r\n            <option>40 g</option>\r\n            <option>45 g</option>\r\n            <option>50 g</option>\r\n            <option>55 g</option>\r\n            <option>60 g</option>\r\n          </Input>\r\n        </FormGroup>\r\n      </Form>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div><TopBar username={this.state.creator} password={this.state.password} />\r\n        <Container className=\"fit-content\">\r\n          <Row><Col><h1>Recipes</h1></Col></Row>\r\n          {this.restrictions()}\r\n          {this.state.searches !== \"\" ? this.searchedRecipes() : this.inventory()}\r\n          <br />\r\n        </Container>\r\n        <Navi username={this.state.creator} password={this.state.password} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/**var search = encodeURI(params.search);\r\n    var calories = \"\";\r\n    if (params.calories !== \"NA\") {\r\n      calories = encodeURI(`${params.calories}`);\r\n    }\r\n    var fat = \"\";\r\n    if (params.fat !== \"NA\") {\r\n      fat = encodeURI(`&nutrients[FAT]=${params.fat}`);\r\n    }\r\n    var sugar = \"\";\r\n    if (params.sugar !== \"NA\") {\r\n      sugar = encodeURI(`&nutrients[SUGAR]=${params.sugar}`);\r\n    }\r\n    var carbs = \"\";\r\n    if (params.carbs !== \"NA\") {\r\n      carbs = encodeURI(`&nutrients[CHOCDF]=${params.carbs}`);\r\n    }\r\n\r\n\r\n\r\n    let ingredients = [];\r\n          currentfood.recipe.ingredients.map(currentingredient => {\r\n            console.log(currentingredient.text);\r\n            ingredients.push(currentingredient.text);\r\n            return (null);\r\n          })\r\n\r\n\r\n          recipedata.recipe.ingredients.map(currentingredient => {\r\n      ingred = currentingredient.text;\r\n      newR.ingredients.push(ingred);\r\n      console.log(newR.ingredients);\r\n      return (null);\r\n    })\r\n     */"]},"metadata":{},"sourceType":"module"}