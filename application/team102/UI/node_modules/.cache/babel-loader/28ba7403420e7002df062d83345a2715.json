{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antwong\\\\Desktop\\\\csc648-03-sp20-team102\\\\application\\\\team102\\\\UI\\\\src\\\\Component\\\\Scan.js\";\nimport React, { Component } from 'react';\nimport MediaHandler from './MediaHandler';\nimport { Button } from 'reactstrap';\nimport axios from 'axios'; //import Example from './scanModal';\n\nconst gatewayUrl = process.env.gatewayUrl || 'http://localhost:3004';\nexport default class Scan extends Component {\n  constructor(props) {\n    super(props);\n\n    this.captureImage = () => {\n      console.log('inside captureImage function');\n      const context = this.canvas.getContext('2d');\n      context.drawImage(this.myVideo, 0, 0, 400, 350);\n      const image = this.canvas.toDataURL('image/jpeg', 0.5);\n      this.setState({\n        imageString: image\n      });\n      this.processImage();\n      return image;\n    };\n\n    this.processImage = () => {\n      console.log('inside processImage function');\n      const url = 'http://localhost:3010/api/image/save';\n      const img = this.state.imageString;\n\n      if (img !== \"\") {\n        let formData = new FormData();\n        formData.set('file', img);\n        axios.post(url, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }).then(res => {\n          console.log(res.data);\n          this.setState({\n            rawData: res.data\n          });\n          this.processData();\n        }).catch(e => {\n          console.log(e);\n        });\n      }\n    };\n\n    this.processData = () => {\n      // returns a array with description and qty\n      const processedData = [];\n      let hashKey = {};\n      this.state.rawData.forEach(item => {\n        if (hashKey.hasOwnProperty(item)) {\n          hashKey[item] += 1;\n        } else {\n          hashKey[item] = 1;\n        }\n      });\n      Object.keys(hashKey).forEach(k => {\n        let newItem = {\n          description: \"\",\n          quantity: 0\n        };\n        newItem.description = k;\n        newItem.quantity = hashKey[k];\n        processedData.push({\n          newItem\n        });\n        /*processedData.push({\r\n          description: k,\r\n          quantity: hashKey[k]\r\n        })*/\n      });\n      console.log(hashKey);\n      console.log(processedData);\n      this.onFoods(processedData);\n      this.onPop();\n    };\n\n    this.state = {\n      hasMedia: false,\n      imageString: \"\",\n      rawData: [],\n      foods: []\n    };\n    this.mediaHandler = new MediaHandler();\n  }\n  /*componentDidMount() {\r\n      this.mediaHandler.getPermissions()\r\n          .then((stream) => {\r\n              this.setState({ hasMedia: true });\r\n              try {\r\n                  this.myVideo.srcObject = stream;\r\n              } catch (e) {\r\n                  this.myVideo.src = URL.createObjectURL(stream);\r\n              }\r\n              this.myVideo.play();\r\n          })\r\n  }*/\n\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"video-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      className: \"video\",\n      width: \"100%\",\n      height: \"50%\",\n      ref: ref => {\n        this.myVideo = ref;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(Button, {\n      id: \"capture\",\n      onClick: this.captureImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Capture\"), React.createElement(\"div\", {\n      className: \"image-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      ref: canvas => {\n        this.canvas = canvas;\n      },\n      width: \"400\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })));\n  }\n\n} //<Button id=\"process\" onClick={this.processImage}>Process</Button>style={{ position: \"fixed\", bottom: \"0\", right: \"0\" }}","map":{"version":3,"sources":["C:/Users/Antwong/Desktop/csc648-03-sp20-team102/application/team102/UI/src/Component/Scan.js"],"names":["React","Component","MediaHandler","Button","axios","gatewayUrl","process","env","Scan","constructor","props","captureImage","console","log","context","canvas","getContext","drawImage","myVideo","image","toDataURL","setState","imageString","processImage","url","img","state","formData","FormData","set","post","headers","then","res","data","rawData","processData","catch","e","processedData","hashKey","forEach","item","hasOwnProperty","Object","keys","k","newItem","description","quantity","push","onFoods","onPop","hasMedia","foods","mediaHandler","render","ref"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,MAAMC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYF,UAAZ,IAA0B,uBAA7C;AAEA,eAAe,MAAMG,IAAN,SAAmBP,SAAnB,CAA6B;AACxCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAsBnBC,YAtBmB,GAsBJ,MAAM;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,YAAMC,OAAO,GAAG,KAAKC,MAAL,CAAYC,UAAZ,CAAuB,IAAvB,CAAhB;AACAF,MAAAA,OAAO,CAACG,SAAR,CAAkB,KAAKC,OAAvB,EAAgC,CAAhC,EAAmC,CAAnC,EAAsC,GAAtC,EAA2C,GAA3C;AACA,YAAMC,KAAK,GAAG,KAAKJ,MAAL,CAAYK,SAAZ,CAAsB,YAAtB,EAAoC,GAApC,CAAd;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEH;AAAf,OAAd;AACA,WAAKI,YAAL;AACA,aAAOJ,KAAP;AACH,KA9BkB;;AAAA,SA+BnBI,YA/BmB,GA+BJ,MAAM;AACjBX,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,YAAMW,GAAG,GAAG,sCAAZ;AACA,YAAMC,GAAG,GAAG,KAAKC,KAAL,CAAWJ,WAAvB;;AACA,UAAIG,GAAG,KAAK,EAAZ,EAAgB;AACZ,YAAIE,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAD,QAAAA,QAAQ,CAACE,GAAT,CAAa,MAAb,EAAqBJ,GAArB;AACArB,QAAAA,KAAK,CAAC0B,IAAN,CAAWN,GAAX,EAAgBG,QAAhB,EAA0B;AACtBI,UAAAA,OAAO,EAAE;AAAE,4BAAgB;AAAlB;AADa,SAA1B,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbrB,UAAAA,OAAO,CAACC,GAAR,CAAYoB,GAAG,CAACC,IAAhB;AACA,eAAKb,QAAL,CAAc;AAAEc,YAAAA,OAAO,EAAEF,GAAG,CAACC;AAAf,WAAd;AACA,eAAKE,WAAL;AACH,SAND,EAMGC,KANH,CAMUC,CAAD,IAAO;AACZ1B,UAAAA,OAAO,CAACC,GAAR,CAAYyB,CAAZ;AACH,SARD;AASH;AACJ,KAhDkB;;AAAA,SAiDnBF,WAjDmB,GAiDL,MAAM;AAAC;AACjB,YAAMG,aAAa,GAAG,EAAtB;AACA,UAAIC,OAAO,GAAG,EAAd;AACA,WAAKd,KAAL,CAAWS,OAAX,CAAmBM,OAAnB,CAA4BC,IAAD,IAAU;AACnC,YAAIF,OAAO,CAACG,cAAR,CAAuBD,IAAvB,CAAJ,EAAkC;AAChCF,UAAAA,OAAO,CAACE,IAAD,CAAP,IAAiB,CAAjB;AACD,SAFD,MAEO;AACLF,UAAAA,OAAO,CAACE,IAAD,CAAP,GAAgB,CAAhB;AACD;AACF,OAND;AAOAE,MAAAA,MAAM,CAACC,IAAP,CAAYL,OAAZ,EAAqBC,OAArB,CAA8BK,CAAD,IAAO;AAClC,YAAIC,OAAO,GAAG;AAAEC,UAAAA,WAAW,EAAE,EAAf;AAAmBC,UAAAA,QAAQ,EAAE;AAA7B,SAAd;AACAF,QAAAA,OAAO,CAACC,WAAR,GAAsBF,CAAtB;AACAC,QAAAA,OAAO,CAACE,QAAR,GAAmBT,OAAO,CAACM,CAAD,CAA1B;AACAP,QAAAA,aAAa,CAACW,IAAd,CAAmB;AAAEH,UAAAA;AAAF,SAAnB;AACA;;;;AAID,OATD;AAUAnC,MAAAA,OAAO,CAACC,GAAR,CAAY2B,OAAZ;AACA5B,MAAAA,OAAO,CAACC,GAAR,CAAY0B,aAAZ;AACA,WAAKY,OAAL,CAAaZ,aAAb;AACA,WAAKa,KAAL;AACD,KAzEgB;;AAEf,SAAK1B,KAAL,GAAa;AACT2B,MAAAA,QAAQ,EAAE,KADD;AAET/B,MAAAA,WAAW,EAAE,EAFJ;AAGTa,MAAAA,OAAO,EAAE,EAHA;AAITmB,MAAAA,KAAK,EAAE;AAJE,KAAb;AAMA,SAAKC,YAAL,GAAoB,IAAIrD,YAAJ,EAApB;AACH;AACD;;;;;;;;;;;;;;AAgEAsD,EAAAA,MAAM,GAAG;AACL,WACI,0CACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAyB,MAAA,KAAK,EAAC,MAA/B;AAAsC,MAAA,MAAM,EAAC,KAA7C;AAAmD,MAAA,GAAG,EAAGC,GAAD,IAAS;AAAE,aAAKvC,OAAL,GAAeuC,GAAf;AAAqB,OAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII,oBAAC,MAAD;AAAS,MAAA,EAAE,EAAC,SAAZ;AAAsB,MAAA,OAAO,EAAE,KAAK9C,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,EAMI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,GAAG,EAAGI,MAAD,IAAY;AAAE,aAAKA,MAAL,GAAcA,MAAd;AAAsB,OAAjD;AAAmD,MAAA,KAAK,EAAC,KAAzD;AAA+D,MAAA,MAAM,EAAC,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CANJ,CADJ;AAYH;;AAxFuC,C,CA2F5C","sourcesContent":["import React, { Component } from 'react';\r\nimport MediaHandler from './MediaHandler';\r\nimport { Button } from 'reactstrap';\r\nimport axios from 'axios';\r\n//import Example from './scanModal';\r\n\r\nconst gatewayUrl = process.env.gatewayUrl || 'http://localhost:3004';\r\n\r\nexport default class Scan extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasMedia: false,\r\n            imageString: \"\",\r\n            rawData: [],\r\n            foods: [],\r\n        };\r\n        this.mediaHandler = new MediaHandler();\r\n    }\r\n    /*componentDidMount() {\r\n        this.mediaHandler.getPermissions()\r\n            .then((stream) => {\r\n                this.setState({ hasMedia: true });\r\n                try {\r\n                    this.myVideo.srcObject = stream;\r\n                } catch (e) {\r\n                    this.myVideo.src = URL.createObjectURL(stream);\r\n                }\r\n                this.myVideo.play();\r\n            })\r\n    }*/\r\n    captureImage = () => {\r\n        console.log('inside captureImage function')\r\n        const context = this.canvas.getContext('2d');\r\n        context.drawImage(this.myVideo, 0, 0, 400, 350);\r\n        const image = this.canvas.toDataURL('image/jpeg', 0.5);\r\n        this.setState({ imageString: image });\r\n        this.processImage();\r\n        return image;\r\n    }\r\n    processImage = () => {\r\n        console.log('inside processImage function')\r\n        const url = 'http://localhost:3010/api/image/save';\r\n        const img = this.state.imageString;\r\n        if (img !== \"\") {\r\n            let formData = new FormData();\r\n            formData.set('file', img);\r\n            axios.post(url, formData, {\r\n                headers: { 'Content-Type': 'multipart/form-data' }\r\n            }).then((res) => {\r\n                console.log(res.data);\r\n                this.setState({ rawData: res.data });\r\n                this.processData();\r\n            }).catch((e) => {\r\n                console.log(e)\r\n            });\r\n        }\r\n    }\r\n    processData = () => {// returns a array with description and qty\r\n        const processedData = [];\r\n        let hashKey = {};\r\n        this.state.rawData.forEach((item) => {\r\n          if (hashKey.hasOwnProperty(item)) {\r\n            hashKey[item] += 1;\r\n          } else {\r\n            hashKey[item] = 1;\r\n          }\r\n        });\r\n        Object.keys(hashKey).forEach((k) => {\r\n          let newItem = { description: \"\", quantity: 0 };\r\n          newItem.description = k;\r\n          newItem.quantity = hashKey[k];\r\n          processedData.push({ newItem });\r\n          /*processedData.push({\r\n            description: k,\r\n            quantity: hashKey[k]\r\n          })*/\r\n        })\r\n        console.log(hashKey);\r\n        console.log(processedData);\r\n        this.onFoods(processedData);\r\n        this.onPop();\r\n      }\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"video-container\">\r\n                    <video className=\"video\" width=\"100%\" height=\"50%\" ref={(ref) => { this.myVideo = ref; }}></video>\r\n                </div>\r\n                <Button  id=\"capture\" onClick={this.captureImage}>Capture</Button>\r\n                \r\n                <div className=\"image-container\">\r\n                    <canvas ref={(canvas) => { this.canvas = canvas }} width='400' height='350' ></canvas>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n//<Button id=\"process\" onClick={this.processImage}>Process</Button>style={{ position: \"fixed\", bottom: \"0\", right: \"0\" }}"]},"metadata":{},"sourceType":"module"}