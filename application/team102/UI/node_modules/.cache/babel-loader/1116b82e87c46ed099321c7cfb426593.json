{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antwong\\\\Documents\\\\temp\\\\csc648-03-sp20-team102\\\\application\\\\team102\\\\UI\\\\src\\\\Component\\\\create-fooddata.component.js\";\nimport React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport MediaHandler from './MediaHandler';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"axios\";\nimport cam from \"./cameraIcon.svg\";\nimport { FormGroup, Label, Form, Input, Button, ButtonGroup, Row, Col } from \"reactstrap\";\nconst gatewayUrl = process.env.gatewayUrl || 'http://localhost:3004';\n\nconst fillForm = props => {\n  return React.createElement(Form, {\n    onSubmit: this.onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Input, {\n    value: props.foodname,\n    selected: props.newI.description,\n    onChange: props.onChangeFoodname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  })), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"ExpDate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Exp. Date:\"), React.createElement(DatePicker, {\n    required: true,\n    selected: props.expirationdate,\n    onChange: props.onChangeExpirationdate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }))), React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Label, {\n    for: \"qty\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Quantity:\"), React.createElement(Input, {\n    type: \"select\",\n    style: {\n      height: 'auto',\n      width: 'auto'\n    },\n    value: props.numberOfItems,\n    selected: props.newI.quantity,\n    onChange: props.onChangeNumberOfItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"1\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"2\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"3\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"3\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"5\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"6\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"7\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"8\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"9\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"10\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"11\"), React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"12\"))))), React.createElement(Button, {\n    className: \"form-control input\",\n    type: \"submit\",\n    value: \"Create food\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \" Add Item \"));\n};\n\nexport default class Create extends Component {\n  constructor(props) {\n    super(props);\n\n    this.captureImage = () => {\n      // takes picture\n      console.log('inside captureImage function');\n      const context = this.canvas.getContext('2d');\n      context.drawImage(this.myVideo, 0, 0, 400, 350);\n      const image = this.canvas.toDataURL('image/jpeg', 0.5);\n      this.setState({\n        imageString: image\n      });\n      this.processImage();\n    };\n\n    this.processImage = () => {\n      // sends and grabs data\n      console.log('inside processImage function');\n      const url = 'http://localhost:3010/api/image/save';\n      const img = this.state.imageString;\n\n      if (img !== \"\") {\n        let formData = new FormData();\n        formData.set('file', img);\n        axios.post(url, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }).then(res => {\n          console.log(res.data);\n          this.setState({\n            rawData: res.data\n          });\n          this.processData();\n        }).catch(e => {\n          console.log(e);\n        });\n      }\n    };\n\n    this.processData = () => {\n      // returns a array with description and qty\n      const processedData = [];\n      let hashKey = {};\n      this.state.rawData.forEach(item => {\n        if (hashKey.hasOwnProperty(item)) {\n          hashKey[item] += 1;\n        } else {\n          hashKey[item] = 1;\n        }\n      });\n      Object.keys(hashKey).forEach(k => {\n        let newItem = {\n          description: \"\",\n          quantity: 0\n        };\n        newItem.description = k;\n        newItem.quantity = hashKey[k];\n        processedData.push({\n          newItem\n        });\n        /*processedData.push({\r\n          description: k,\r\n          quantity: hashKey[k]\r\n        })*/\n      });\n      console.log(hashKey);\n      console.log(processedData);\n      this.setState({\n        foods: processedData\n      });\n    };\n\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    this.onChangeFoodname = this.onChangeFoodname.bind(this);\n    this.onChangeExpirationdate = this.onChangeExpirationdate.bind(this);\n    this.onChangeCalories = this.onChangeCalories.bind(this);\n    this.onChangeCarbs = this.onChangeCarbs.bind(this);\n    this.onChangeNumberOfItems = this.onChangeNumberOfItems.bind(this);\n    this.onChangeSugar = this.onChangeSugar.bind(this);\n    this.onChangeFat = this.onChangeFat.bind(this);\n    this.onChangeProtein = this.onChangeProtein.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.mediaHandler = new MediaHandler();\n    this.state = {\n      foodname: \"\",\n      expirationdate: new Date(),\n      calories: \"\",\n      numberOfItems: \"1\",\n      carbs: \"\",\n      sugar: \"\",\n      fat: \"\",\n      protein: \"\",\n      sodium: \"\",\n      foods: [],\n      userdata: [],\n      addList: [],\n      password: params.password,\n      username: params.id,\n      count: 0,\n      hasMedia: false,\n      imageString: \"\",\n      rawData: [],\n      pop: false\n    };\n  } // change activations for prop states\n\n\n  onChangeFoodname(e) {\n    this.setState({\n      foodname: e.target.value\n    });\n  }\n\n  onChangeExpirationdate(date) {\n    this.setState({\n      expirationdate: date\n    });\n  }\n\n  onChangeCalories(e) {\n    this.setState({\n      calories: e\n    });\n  }\n\n  onChangeNumberOfItems(e) {\n    this.setState({\n      numberOfItems: e.target.value\n    });\n  }\n\n  onChangeCarbs(e) {\n    this.setState({\n      carbs: e\n    });\n  }\n\n  onChangeSugar(e) {\n    this.setState({\n      sugar: e\n    });\n  }\n\n  onChangeFat(e) {\n    this.setState({\n      fat: e\n    });\n  }\n\n  onChangeProtein(e) {\n    this.setState({\n      protein: e\n    });\n  }\n\n  onChangeSodium(e) {\n    this.setState({\n      sodium: e\n    });\n  }\n\n  toInv() {\n    // only things passed to the final list is allowed\n    this.state.addList.map(item => {\n      axios\n      /* Searches food name param in Api returns all types matching\r\n       * foods -> array going to be loaded with first result info\r\n       * has all nutrition facts\r\n       */\n      .get(\"https://api.nal.usda.gov/fdc/v1/foods/search?api_key=ldLF1ky8NkwmcLnTDvqDoSjul1eanGZ1o6vZ2Q9u&query=\" + this.state.foodname).then(response => {\n        console.log(response.data.foods[0].foodNutrients[0]);\n        this.setState({\n          foods: response.data.foods[0].foodNutrients\n        });\n        /* Searches array for matching nutrient name, only exact \r\n         * calls funct to change value once found\r\n         */\n\n        this.state.foods.map(currentfood => {\n          console.log(currentfood.nutrientName, currentfood.value);\n          console.log(currentfood.value);\n\n          if (currentfood.nutrientName === 'Energy') {\n            this.onChangeCalories(Math.round(currentfood.value));\n          } else if (currentfood.nutrientName === 'Carbohydrate, by difference') {\n            this.onChangeCarbs(Math.round(currentfood.value));\n          } else if (currentfood.nutrientName === 'Total lipid (fat)') {\n            this.onChangeFat(Math.round(currentfood.value));\n          } else if (currentfood.nutrientName === 'Protein') {\n            this.onChangeProtein(Math.round(currentfood.value));\n          } else if (currentfood.nutrientName === 'Sugars, total including NLEA') {\n            this.onChangeSugar(Math.round(currentfood.value));\n          } else if (currentfood.nutrientName === 'Sodium, Na') {\n            this.onChangeSodium(Math.round(currentfood.value));\n          }\n\n          return null;\n        });\n        /* adds all values into a temp list\r\n         * sends to backend to be added to personal id food list\r\n         */\n\n        const food = {\n          foodName: item.foodname,\n          expirationDate: item.expdate,\n          calories: this.state.calories,\n          numOfItems: item.qty,\n          carbs: this.state.carbs,\n          protein: this.state.protein,\n          fat: this.state.fat,\n          sugar: this.state.sugar,\n          sodium: this.state.sodium\n        };\n        console.log(food);\n        this.onAddList();\n        axios.post(\"/fooddata/add\", food).then(res => console.log(res.data));\n      }).catch(error => {\n        console.log(error);\n      });\n    });\n    this.setState({\n      addList: []\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault(); //const date = (this.state.expirationdate.getMonth() + 1).toString() + \"/\" + (this.state.expirationdate.getDate()).toString() + \"/\" + (this.state.expirationdate.getFullYear()).toString();\n    //var list = this.state.addList.concat(this.state.foodname + \" \" + date+\" \"+ this.state.numberOfItems);\n    //console.log(this.state.expirationdate);\n\n    console.log(list);\n    var list = {\n      foodName: \"\",\n      expdate: new Date(),\n      qty: \"1\"\n    };\n    list.foodName = this.state.foodName;\n    list.expdate = this.state.expirationdate;\n    list.qty = this.state.numberOfItems;\n    console.log(list);\n    this.setState({\n      addList: [list, this.state.addList]\n    });\n  }\n  /*AddList() {//{(item.expdate.getMonth() + 1).toString() + \"/\" + (item.expdate.getDate()).toString() + \"/\" + (item.expdate.getFullYear()).toString()}\r\n    this.state.addList.map((item) => {\r\n        return (<Row>\r\n          <Col >{item.foodName}</Col> \r\n          <Col></Col>\r\n          <Col>{item.qty}</Col>\r\n        </Row>\r\n      )}\r\n    )\r\n  }*/\n\n  /*componentDidMount() {\r\n    this.mediaHandler.getPermissions()\r\n      .then((stream) => {\r\n        this.setState({ hasMedia: true });\r\n        try {\r\n          this.myVideo.srcObject = stream;\r\n        } catch (e) {\r\n          this.myVideo.src = URL.createObjectURL(stream);\r\n        }\r\n        this.myVideo.play();\r\n      })\r\n  }*/\n\n\n  scan() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"video-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      className: \"video\",\n      width: \"400\",\n      height: \"350\",\n      ref: ref => {\n        this.myVideo = ref;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    })), React.createElement(Button, {\n      id: \"capture\",\n      onClick: this.captureImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"Scan\"), React.createElement(\"div\", {\n      className: \"image-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      ref: canvas => {\n        this.canvas = canvas;\n      },\n      width: \"400\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    })));\n  }\n\n  onScan() {\n    // scanned submit form, name and qty should be filled in, expdate required\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    return this.state.foods.map(newI => {\n      return React.createElement(\"fillForm\", {\n        onSubmit: this.onSubmit,\n        newI: newI,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      });\n    });\n  }\n\n  manualSubmit() {\n    return React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"foodName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, \"Food Name:\"), React.createElement(Input, {\n      type: \"text\",\n      required: true,\n      placeholder: \"What Food Are You Looking For?\",\n      className: \"form-control\",\n      value: this.state.foodname,\n      onChange: this.onChangeFoodname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"ExpDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"Exp. Date:\"), React.createElement(DatePicker, {\n      required: true,\n      selected: this.state.expirationdate,\n      onChange: this.onChangeExpirationdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    })), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"qty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"Quantity:\"), React.createElement(Input, {\n      type: \"select\",\n      style: {\n        height: 'auto',\n        width: 'auto'\n      },\n      value: this.state.numberOfItems,\n      onChange: this.onChangeNumberOfItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"5\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"6\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"7\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"8\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"9\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"10\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"11\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"12\"))))), React.createElement(Button, {\n      size: \"lg\",\n      className: \"SignSpace form-control input\",\n      type: \"submit\",\n      value: \"Create food\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, \" Submit \"));\n  }\n\n  render() {\n    var inv = \"/inventory/\" + this.state.username + \"/\" + this.state.password;\n    return React.createElement(\"div\", {\n      style: {\n        height: \"100%\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, this.manualSubmit(), this.state.pop === true ? this.onScan() : \"\", React.createElement(ButtonGroup, {\n      size: \"lg\",\n      className: \"SignSpace\",\n      style: {\n        boxSizing: 'content-box',\n        position: \"fixed\",\n        right: \"-10vw\",\n        bottom: \"0px\",\n        display: \"flex\",\n        minWidth: \"100vw\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(Button, {\n      href: inv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, \"Back\"), React.createElement(Button, {\n      onClick: () => this.toInv(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \" Add List To Inventory\"), React.createElement(Button, {\n      href: \"/scan\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, \"Scan\")), React.createElement(\"div\", {\n      style: {\n        top: \"300px\",\n        height: \"100%\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }));\n  }\n\n}\n/**\r\n *{this.AddList()}\r\n *\r\n */","map":{"version":3,"sources":["C:/Users/Antwong/Documents/temp/csc648-03-sp20-team102/application/team102/UI/src/Component/create-fooddata.component.js"],"names":["React","Component","DatePicker","MediaHandler","axios","FormGroup","Label","Form","Input","Button","ButtonGroup","Row","Col","gatewayUrl","process","env","fillForm","props","onSubmit","foodname","newI","description","onChangeFoodname","expirationdate","onChangeExpirationdate","height","width","numberOfItems","quantity","onChangeNumberOfItems","Create","constructor","captureImage","console","log","context","canvas","getContext","drawImage","myVideo","image","toDataURL","setState","imageString","processImage","url","img","state","formData","FormData","set","post","headers","then","res","data","rawData","processData","catch","e","processedData","hashKey","forEach","item","hasOwnProperty","Object","keys","k","newItem","push","foods","match","params","bind","onChangeCalories","onChangeCarbs","onChangeSugar","onChangeFat","onChangeProtein","mediaHandler","Date","calories","carbs","sugar","fat","protein","sodium","userdata","addList","password","username","id","count","hasMedia","pop","target","value","date","onChangeSodium","toInv","map","get","response","foodNutrients","currentfood","nutrientName","Math","round","food","foodName","expirationDate","expdate","numOfItems","qty","onAddList","error","preventDefault","list","scan","ref","onScan","manualSubmit","render","inv","boxSizing","position","right","bottom","display","minWidth","top"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport MediaHandler from './MediaHandler';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from \"axios\";\r\nimport cam from \"./cameraIcon.svg\"\r\nimport { FormGroup, Label, Form, Input, Button, ButtonGroup, Row, Col } from \"reactstrap\";\r\nconst gatewayUrl = process.env.gatewayUrl || 'http://localhost:3004';\r\n\r\nconst fillForm = props => {\r\n  return (\r\n    <Form onSubmit={this.onSubmit}>\r\n      <FormGroup >\r\n        <Input\r\n          value={props.foodname}\r\n          selected={props.newI.description}\r\n          onChange={props.onChangeFoodname} />\r\n      </FormGroup>\r\n      <Row>\r\n        <Col >\r\n          <FormGroup>\r\n            <Label for=\"ExpDate\">Exp. Date:</Label>\r\n            <DatePicker\r\n              required\r\n              selected={props.expirationdate}\r\n              onChange={props.onChangeExpirationdate} />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col >\r\n          <FormGroup>\r\n            <Label for=\"qty\">Quantity:</Label>\r\n            <Input\r\n              type=\"select\"\r\n              style={{ height: 'auto', width: 'auto' }}\r\n              value={props.numberOfItems}\r\n              selected={props.newI.quantity}\r\n              onChange={props.onChangeNumberOfItems}>\r\n              <option>1</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>3</option>\r\n              <option>5</option>\r\n              <option>6</option>\r\n              <option>7</option>\r\n              <option>8</option>\r\n              <option>9</option>\r\n              <option>10</option>\r\n              <option>11</option>\r\n              <option>12</option>\r\n            </Input>\r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n      <Button className=\"form-control input\" type=\"submit\" value=\"Create food\"> Add Item </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default class Create extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { match: { params } } = this.props;\r\n    this.onChangeFoodname = this.onChangeFoodname.bind(this);\r\n    this.onChangeExpirationdate = this.onChangeExpirationdate.bind(this);\r\n    this.onChangeCalories = this.onChangeCalories.bind(this);\r\n    this.onChangeCarbs = this.onChangeCarbs.bind(this);\r\n    this.onChangeNumberOfItems = this.onChangeNumberOfItems.bind(this);\r\n    this.onChangeSugar = this.onChangeSugar.bind(this);\r\n    this.onChangeFat = this.onChangeFat.bind(this);\r\n    this.onChangeProtein = this.onChangeProtein.bind(this);\r\n\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.mediaHandler = new MediaHandler();\r\n    this.state = {\r\n      foodname: \"\",\r\n      expirationdate: new Date(),\r\n      calories: \"\",\r\n      numberOfItems: \"1\",\r\n      carbs: \"\",\r\n      sugar: \"\",\r\n      fat: \"\",\r\n      protein: \"\",\r\n      sodium: \"\",\r\n      foods: [],\r\n      userdata: [],\r\n      addList: [],\r\n      password: params.password,\r\n      username: params.id,\r\n      count: 0,\r\n      hasMedia: false,\r\n      imageString: \"\",\r\n      rawData: [],\r\n      pop: false,\r\n    };\r\n  }\r\n  // change activations for prop states\r\n  onChangeFoodname(e) { this.setState({ foodname: e.target.value }); }\r\n  onChangeExpirationdate(date) { this.setState({ expirationdate: date }); }\r\n  onChangeCalories(e) { this.setState({ calories: e }); }\r\n  onChangeNumberOfItems(e) { this.setState({ numberOfItems: e.target.value }); }\r\n  onChangeCarbs(e) { this.setState({ carbs: e }); }\r\n  onChangeSugar(e) { this.setState({ sugar: e }); }\r\n  onChangeFat(e) { this.setState({ fat: e }); }\r\n  onChangeProtein(e) { this.setState({ protein: e }); }\r\n  onChangeSodium(e) { this.setState({ sodium: e }); }\r\n\r\n  toInv() { // only things passed to the final list is allowed\r\n    this.state.addList.map(item => {\r\n      axios\r\n        /* Searches food name param in Api returns all types matching\r\n         * foods -> array going to be loaded with first result info\r\n         * has all nutrition facts\r\n         */\r\n        .get(\"https://api.nal.usda.gov/fdc/v1/foods/search?api_key=ldLF1ky8NkwmcLnTDvqDoSjul1eanGZ1o6vZ2Q9u&query=\" + this.state.foodname)\r\n        .then(response => {\r\n          console.log(response.data.foods[0].foodNutrients[0]);\r\n          this.setState({\r\n            foods: response.data.foods[0].foodNutrients\r\n          });\r\n          /* Searches array for matching nutrient name, only exact \r\n           * calls funct to change value once found\r\n           */\r\n          this.state.foods.map(currentfood => {\r\n            console.log(currentfood.nutrientName, currentfood.value);\r\n            console.log(currentfood.value);\r\n            if (currentfood.nutrientName === 'Energy') {\r\n              this.onChangeCalories(Math.round(currentfood.value));\r\n            } else if (currentfood.nutrientName === 'Carbohydrate, by difference') {\r\n              this.onChangeCarbs(Math.round(currentfood.value));\r\n            } else if (currentfood.nutrientName === 'Total lipid (fat)') {\r\n              this.onChangeFat(Math.round(currentfood.value));\r\n            } else if (currentfood.nutrientName === 'Protein') {\r\n              this.onChangeProtein(Math.round(currentfood.value));\r\n            } else if (currentfood.nutrientName === 'Sugars, total including NLEA') {\r\n              this.onChangeSugar(Math.round(currentfood.value));\r\n            } else if (currentfood.nutrientName === 'Sodium, Na') {\r\n              this.onChangeSodium(Math.round(currentfood.value));\r\n            } return (null);\r\n          })\r\n          /* adds all values into a temp list\r\n           * sends to backend to be added to personal id food list\r\n           */\r\n          const food = {\r\n            foodName: item.foodname,\r\n            expirationDate: item.expdate,\r\n            calories: this.state.calories,\r\n            numOfItems: item.qty,\r\n            carbs: this.state.carbs,\r\n            protein: this.state.protein,\r\n            fat: this.state.fat,\r\n            sugar: this.state.sugar,\r\n            sodium: this.state.sodium\r\n          };\r\n          console.log(food);\r\n          this.onAddList();\r\n          axios\r\n            .post(\"/fooddata/add\", food)\r\n            .then(res => console.log(res.data));\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    })\r\n    this.setState({ addList: [] });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    //const date = (this.state.expirationdate.getMonth() + 1).toString() + \"/\" + (this.state.expirationdate.getDate()).toString() + \"/\" + (this.state.expirationdate.getFullYear()).toString();\r\n    //var list = this.state.addList.concat(this.state.foodname + \" \" + date+\" \"+ this.state.numberOfItems);\r\n    //console.log(this.state.expirationdate);\r\n    console.log(list);\r\n    var list = { foodName: \"\", expdate: new Date(), qty: \"1\" };\r\n    list.foodName = this.state.foodName;\r\n    list.expdate = this.state.expirationdate;\r\n    list.qty = this.state.numberOfItems;\r\n    console.log(list);\r\n    this.setState({ addList: [list, this.state.addList] });\r\n  }\r\n  /*AddList() {//{(item.expdate.getMonth() + 1).toString() + \"/\" + (item.expdate.getDate()).toString() + \"/\" + (item.expdate.getFullYear()).toString()}\r\n    this.state.addList.map((item) => {\r\n        return (<Row>\r\n          <Col >{item.foodName}</Col> \r\n          <Col></Col>\r\n          <Col>{item.qty}</Col>\r\n        </Row>\r\n      )}\r\n    )\r\n  }*/\r\n  /*componentDidMount() {\r\n    this.mediaHandler.getPermissions()\r\n      .then((stream) => {\r\n        this.setState({ hasMedia: true });\r\n        try {\r\n          this.myVideo.srcObject = stream;\r\n        } catch (e) {\r\n          this.myVideo.src = URL.createObjectURL(stream);\r\n        }\r\n        this.myVideo.play();\r\n      })\r\n  }*/\r\n  captureImage = () => { // takes picture\r\n    console.log('inside captureImage function')\r\n    const context = this.canvas.getContext('2d');\r\n    context.drawImage(this.myVideo, 0, 0, 400, 350);\r\n    const image = this.canvas.toDataURL('image/jpeg', 0.5);\r\n    this.setState({ imageString: image });\r\n    this.processImage();\r\n  }\r\n  processImage = () => { // sends and grabs data\r\n    console.log('inside processImage function')\r\n    const url = 'http://localhost:3010/api/image/save';\r\n    const img = this.state.imageString;\r\n    if (img !== \"\") {\r\n      let formData = new FormData();\r\n      formData.set('file', img);\r\n      axios.post(url, formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' }\r\n      }).then((res) => {\r\n        console.log(res.data);\r\n        this.setState({ rawData: res.data });\r\n        this.processData();\r\n      }).catch((e) => {\r\n        console.log(e)\r\n      });\r\n    }\r\n  }\r\n  processData = () => {// returns a array with description and qty\r\n    const processedData = [];\r\n    let hashKey = {};\r\n    this.state.rawData.forEach((item) => {\r\n      if (hashKey.hasOwnProperty(item)) {\r\n        hashKey[item] += 1;\r\n      } else {\r\n        hashKey[item] = 1;\r\n      }\r\n    });\r\n    Object.keys(hashKey).forEach((k) => {\r\n      let newItem = { description: \"\", quantity: 0 };\r\n      newItem.description = k;\r\n      newItem.quantity = hashKey[k];\r\n      processedData.push({ newItem });\r\n      /*processedData.push({\r\n        description: k,\r\n        quantity: hashKey[k]\r\n      })*/\r\n    })\r\n    console.log(hashKey);\r\n    console.log(processedData);\r\n    this.setState({ foods: processedData });\r\n  }\r\n  scan() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"video-container\">\r\n          <video className=\"video\" width=\"400\" height=\"350\" ref={(ref) => { this.myVideo = ref; }}></video>\r\n        </div>\r\n        <Button id=\"capture\" onClick={this.captureImage}>Scan</Button>\r\n        <div className=\"image-container\">\r\n          <canvas ref={(canvas) => { this.canvas = canvas }} width='400' height='350' ></canvas>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  onScan() { // scanned submit form, name and qty should be filled in, expdate required\r\n    const { match: { params } } = this.props;\r\n    return this.state.foods.map(newI => {\r\n      return (\r\n        <fillForm onSubmit={this.onSubmit} newI={newI} />\r\n      );\r\n    })\r\n  }\r\n  manualSubmit() {\r\n    return (\r\n      <Form onSubmit={this.onSubmit}>\r\n        <FormGroup >\r\n          <Label for=\"foodName\">Food Name:</Label>\r\n          <Input\r\n            type=\"text\"\r\n            required\r\n            placeholder=\"What Food Are You Looking For?\"\r\n            className=\"form-control\"\r\n            value={this.state.foodname}\r\n            onChange={this.onChangeFoodname} />\r\n        </FormGroup>\r\n        <FormGroup><Row>\r\n          <Col >\r\n            <Label for=\"ExpDate\">Exp. Date:</Label>\r\n            <DatePicker\r\n              required\r\n              selected={this.state.expirationdate}\r\n              onChange={this.onChangeExpirationdate} />\r\n          </Col>\r\n          <Col >\r\n            <Label for=\"qty\">Quantity:</Label>\r\n            <Input\r\n              type=\"select\"\r\n              style={{ height: 'auto', width: 'auto' }}\r\n              value={this.state.numberOfItems}\r\n              onChange={this.onChangeNumberOfItems}>\r\n              <option>1</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>3</option>\r\n              <option>5</option>\r\n              <option>6</option>\r\n              <option>7</option>\r\n              <option>8</option>\r\n              <option>9</option>\r\n              <option>10</option>\r\n              <option>11</option>\r\n              <option>12</option>\r\n            </Input>\r\n          </Col>\r\n        </Row>\r\n        </FormGroup><Button size='lg' className=\"SignSpace form-control input\" type=\"submit\" value=\"Create food\"> Submit </Button>\r\n      </Form>\r\n    );\r\n  }\r\n  render() {\r\n    var inv = \"/inventory/\" + this.state.username + \"/\" + this.state.password\r\n    return (<div style={{ height: \"100%\", width: \"100%\" }}>\r\n      {this.manualSubmit()}\r\n      {this.state.pop === true ? this.onScan() : \"\"}\r\n      <ButtonGroup size='lg' className=\"SignSpace\" style={{ boxSizing: 'content-box', position: \"fixed\", right: \"-10vw\", bottom: \"0px\", display: \"flex\", minWidth: \"100vw\" }} >\r\n        <Button href={inv}>Back</Button>\r\n        <Button onClick={() => this.toInv()}> Add List To Inventory</Button>\r\n        <Button href=\"/scan\" >Scan</Button>\r\n      </ButtonGroup>\r\n\r\n      <div style={{ top: \"300px\", height: \"100%\", width: \"100%\" }}></div>\r\n\r\n    </div>\r\n    );\r\n  }\r\n}\r\n/**\r\n *{this.AddList()}\r\n *\r\n */"]},"metadata":{},"sourceType":"module"}