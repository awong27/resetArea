{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antwong\\\\Documents\\\\temp\\\\csc648-03-sp20-team102\\\\application\\\\team102\\\\UI\\\\src\\\\Component\\\\Recipe.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Input, Button, ButtonGroup, Card, CardImg, Form, CardText, CardFooter, CardHeader, FormGroup, NavLink, Modal, ModalHeader, ModalBody, ModalFooter, CardBody } from 'reactstrap';\nimport Navi from \"./Navigation\";\nimport TopBar from \"./TopBar\";\nimport axios from \"axios\";\n\nconst Fooddata = props => {\n  /*  <tr>\r\n      <td>{props.food.recipeName}</td>\r\n      <td>{props.food.recipeImage}</td>\r\n      <td>{props.food.recipeCarbs}</td>\r\n      <td>{props.food.recipeProtein}</td>\r\n      <td>\r\n        <Link to={\"/edit/\" + props.food._id}>edit</Link> |{\" \"}\r\n        <a\r\n          href=\"/create\"\r\n          onClick={() => {\r\n            props.deleteItems(props.food._id);\r\n          }}\r\n        >\r\n          delete\r\n        </a>\r\n      </td><NavLink to = {\"/inRep/\"+props.username+\"/\"+props.password+\"/\"+props.food.recipeName}></NavLink>\r\n    </tr>*/\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  React.createElement(Card, {\n    className: \"bigdes \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(CardImg, {\n    alt: \"recipeItem\",\n    onClick: toggle,\n    src: props.food.recipeImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, props.food.foodName), props.food.numOfItems), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Expires:\", props.food.expirationDate), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Calories:\", props.food.calories), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Carbs:\", props.food.carbs), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Sugar:\", props.food.sugar), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Protein:\", props.food.protein), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Fat:\", props.food.fat), React.createElement(\"img\", {\n    src: props.food.foodPic,\n    height: \"50%\",\n    width: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    className: \"itemOptions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {\n      props.deleteItems(props.food._id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, props.food.numOfItems)), React.createElement(Button, {\n    onClick: () => \"/create\" + props.food._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"eat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))))), React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    className: \"itemHead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, props.food.foodName)), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, props.food.expirationDate)))), React.createElement(CardBody, {\n    position: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(CardFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    className: \"itemOptions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {\n      props.deleteItems(props.food._id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, props.food.numOfItems)), React.createElement(Button, {\n    onClick: () => \"/create\" + props.food._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"eat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })))));\n}; //grabs search results\n\n\nconst Recipedata = props => React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93\n  },\n  __self: this\n}, props.food.recipe.label); //grabs recipe photo and name\n\n/*const RecipeData = (props) => (\r\n  <Row>\r\n    <Card className=\"bigdes \">\r\n      <CardImg alt=\"recipeItem\" src={Tphoto}/>            \r\n    </Card>  \r\n  </Row>*/\n\n\nexport default class Recipe extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeSearch = this.onChangeSearch.bind(this);\n    this.onChangeCalories = this.onChangeCalories.bind(this);\n    this.onChangeCarbs = this.onChangeCarbs.bind(this);\n    this.onChangeFat = this.onChangeFat.bind(this);\n    this.onChangeSugar = this.onChangeSugar.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.deleteItems = this.deleteItems.bind(this);\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    this.state = {\n      creator: params.id,\n      password: params.password,\n      searches: \"\",\n      recipedata: [],\n      newrecipedata: [],\n      newRecipes: [],\n      recipename: \"\",\n      recipeCalories: \"\",\n      recipeCarbs: \"\",\n      recipeFat: \"\",\n      recipeProtein: \"\",\n      recipeSugar: \"\"\n    };\n  }\n\n  onChangeSearch(e) {\n    this.setState({\n      searches: e.target.value\n    });\n  }\n\n  onChangeCalories(e) {\n    this.setState({\n      recipeCalories: e.target.value\n    });\n  }\n\n  onChangeCarbs(e) {\n    this.setState({\n      recipeCarbs: e.target.value\n    });\n  }\n\n  onChangeSugar(e) {\n    this.setState({\n      recipeSugar: e.target.value\n    });\n  }\n\n  onChangeProtein(e) {\n    this.setState({\n      protein: e.target.value\n    });\n  }\n\n  onChangeFat(e) {\n    this.setState({\n      recipeFat: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    axios.get(\"https://api.edamam.com/search?q=chicken&app_id=b53160ee&app_key=5d9984e95c5c6968d5edfb7d02c83b46&from=0&to=3&calories=591-722&health=alcohol-free\").then(response => {\n      let newrec = [];\n      var label; //console.log(response.data);\n\n      this.setState({\n        newrecipedata: response.data.hits\n      });\n      this.state.newrecipedata.map(currentfood => {\n        console.log(currentfood.recipe.label);\n        label = currentfood.recipe.label;\n        console.log(label);\n        newrec.push(label);\n        console.log(newrec);\n        currentfood.recipe.ingredients.map(currentingredient => {\n          console.log(currentingredient.text);\n          return null;\n        });\n        return null;\n      });\n      console.log(newrec);\n      this.setState({\n        newRecipes: newrec\n      });\n      console.log(this.state.newRecipes);\n    });\n    var addRec = \"/addRecipe/\" + this.state.creator + \"/\" + this.state.password + \"/\" + this.state.searches + \"/\" + this.state.recipeSugar + \"/\" + this.state.recipeFat + \"/\" + this.state.recipeCarbs + \"/\" + this.state.recipeCalories;\n    window.location = addRec;\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/recipedata/\").then(response => {\n      this.setState({\n        recipedata: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  deleteItems(id) {\n    axios.delete(\"http://localhost:8080/recipedata/\" + id).then(res => console.log(res.data));\n    this.setState({\n      recipedata: this.state.recipedata.filter(el => el._id !== id)\n    });\n  }\n  /*  addRecipe(id){\r\n      const ingredient = {\r\n        ingredientName : this.state.ingredients\r\n      }\r\n      const recipes = {\r\n        recipeName: this.state.recipename,\r\n        creator: this.state.creator,\r\n        recipeCalories: this.state.recipeCalories,\r\n        recipeCarbs: this.state.recipeCarbs,\r\n        recipeProtein: this.state.recipeProtein,\r\n        recipeFat: this.state.recipeFat,\r\n        ingredients: ingredient\r\n      }\r\n  \r\n      this.state.newrecipedata.map(currentfood=>{\r\n      console.log(currentfood.recipe.label);\r\n      label = currentfood.recipe.label;\r\n      console.log(label);\r\n      newrec.push(label);\r\n      console.log(newrec);\r\n      currentfood.recipe.ingredients.map(currentingredient=>{\r\n        console.log(currentingredient.text);\r\n  \r\n      })\r\n  \r\n  \r\n    })\r\n  \r\n  \r\n  \r\n      console.log(recipe);\r\n      axios\r\n        .post(\"http://localhost:8080/recipedata/add\", recipe)\r\n        .then(res => console.log(res.data));\r\n  \r\n  \r\n    }*/\n\n\n  inventory() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    return this.state.recipedata.map(currentfood => {\n      if (currentfood.creator === params.id) {\n        return React.createElement(Fooddata, {\n          food: currentfood,\n          username: params.id,\n          password: params.password,\n          deleteItems: this.deleteItems,\n          key: currentfood._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        });\n      }\n\n      return null;\n    });\n  }\n\n  searchedRecipes() {\n    return this.state.newrecipedata.map(currentfood => {\n      return React.createElement(Recipedata, {\n        food: currentfood,\n        deleteItems: this.deleteItems,\n        key: currentfood._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      });\n    });\n  }\n  /*  onSubmit(e){\r\n      e.preventDefault();\r\n  \r\n          axios\r\n            .get(\"https://api.edamam.com/search?q=chicken&app_id=b53160ee&app_key=5d9984e95c5c6968d5edfb7d02c83b46&from=0&to=3&calories=591-722&health=alcohol-free\")\r\n            .then(response => {\r\n            console.log(response.data);\r\n            //  this.setState({\r\n          //    foods:response.data.foods[0].foodNutrients});\r\n            /*  this.state.foods.map(currentfood=>{\r\n                console.log(currentfood);\r\n                if(currentfood.nutrientName==\"Protein\"){\r\n                  this.state.protein = currentfood.value.toString(10);\r\n                }\r\n                if(currentfood.nutrientName==\"Total lipid (fat)\"){\r\n                  this.state.fat= currentfood.value.toString(10);\r\n                }\r\n                if(currentfood.nutrientName==\"Carbohydrate, by difference\"){\r\n                  this.state.carbs= currentfood.value.toString(10);\r\n                }\r\n                if(currentfood.nutrientName==\"Energy\"){\r\n                  this.state.calories=currentfood.value.toString(10);\r\n                }\r\n                if(currentfood.nutrientName==\"Sugars, total including NLEA\"){\r\n                  this.state.sugar=currentfood.value.toString(10);\r\n                }\r\n  \r\n              })\r\n  \r\n            }*/\n\n\n  restrictions() {\n    return React.createElement(Form, {\n      inline: true,\n      justified: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \"Calories\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, \"250  Cal\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"500  Cal\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, \"750  Cal\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"1000  Cal\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, \"1500  Cal\"))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, \"Fat\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, \"Fat\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, \"Fat\"))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, \"Carbs\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, \"Carbs\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, \"Carbs\"))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, \"Sodium\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, \"Sodium\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, \"Sodium\"))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, \"Sugar\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, \"Sugar\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, \"Sugar\"))));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(TopBar, {\n      username: this.state.username,\n      password: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }), React.createElement(Container, {\n      className: \"fit-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }, \"Recipes\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"search\",\n      name: \"search\",\n      id: \"exampleSearch\",\n      placeholder: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    })), React.createElement(Col, {\n      xs: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    })), this.restrictions(), this.inventory()), React.createElement(Navi, {\n      username: this.state.password,\n      password: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }));\n  }\n\n} //<Navi username={this.state.username} password={this.state.password}/>","map":{"version":3,"sources":["C:/Users/Antwong/Documents/temp/csc648-03-sp20-team102/application/team102/UI/src/Component/Recipe.js"],"names":["React","Component","Container","Row","Col","Input","Button","ButtonGroup","Card","CardImg","Form","CardText","CardFooter","CardHeader","FormGroup","NavLink","Modal","ModalHeader","ModalBody","ModalFooter","CardBody","Navi","TopBar","axios","Fooddata","props","className","modal","setModal","useState","toggle","food","recipeImage","foodName","numOfItems","expirationDate","calories","carbs","sugar","protein","fat","foodPic","deleteItems","_id","Recipedata","recipe","label","Recipe","constructor","onChangeSearch","bind","onChangeCalories","onChangeCarbs","onChangeFat","onChangeSugar","onSubmit","match","params","state","creator","id","password","searches","recipedata","newrecipedata","newRecipes","recipename","recipeCalories","recipeCarbs","recipeFat","recipeProtein","recipeSugar","e","setState","target","value","onChangeProtein","preventDefault","get","then","response","newrec","data","hits","map","currentfood","console","log","push","ingredients","currentingredient","text","addRec","window","location","componentDidMount","catch","error","delete","res","filter","el","inventory","searchedRecipes","restrictions","render","username"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Container, Row, Col, Input, Button, ButtonGroup, Card, CardImg, Form, CardText, CardFooter, CardHeader, FormGroup, NavLink,  Modal, ModalHeader, ModalBody, ModalFooter, CardBody} from 'reactstrap';\r\nimport Navi from \"./Navigation\";\r\nimport TopBar from \"./TopBar\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst Fooddata = props => {\r\n/*  <tr>\r\n    <td>{props.food.recipeName}</td>\r\n    <td>{props.food.recipeImage}</td>\r\n    <td>{props.food.recipeCarbs}</td>\r\n    <td>{props.food.recipeProtein}</td>\r\n    <td>\r\n      <Link to={\"/edit/\" + props.food._id}>edit</Link> |{\" \"}\r\n      <a\r\n        href=\"/create\"\r\n        onClick={() => {\r\n          props.deleteItems(props.food._id);\r\n        }}\r\n      >\r\n        delete\r\n      </a>\r\n    </td><NavLink to = {\"/inRep/\"+props.username+\"/\"+props.password+\"/\"+props.food.recipeName}></NavLink>\r\n  </tr>*/\r\n  const {className} = props;\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n  <Card className=\"bigdes \">\r\n    <CardImg alt=\"recipeItem\" onClick={toggle} src={props.food.recipeImage}/>\r\n    <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}><h3>{props.food.foodName}</h3>{props.food.numOfItems}</ModalHeader>\r\n        <ModalBody>\r\n          <td>Expires:{props.food.expirationDate}</td>\r\n          <h4>Calories:{props.food.calories}</h4>\r\n          <h4>Carbs:{props.food.carbs}</h4>\r\n          <h4>Sugar:{props.food.sugar}</h4>\r\n          <h4>Protein:{props.food.protein}</h4>\r\n          <h4>Fat:{props.food.fat}</h4>\r\n          <img src={props.food.foodPic} height=\"50%\" width=\"100%\"/>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <ButtonGroup className=\"itemOptions\">\r\n            <Button onClick={() => {props.deleteItems(props.food._id);}}>\r\n              <img alt=\"delete\"  />\r\n            </Button>\r\n            <Button>\r\n              <CardText>{props.food.numOfItems}</CardText>\r\n            </Button>\r\n            <Button onClick={() => \"/create\" + props.food._id}>\r\n              <img alt=\"eat\"  />\r\n            </Button>\r\n          </ButtonGroup>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      <CardHeader>\r\n        <ButtonGroup className=\"itemHead\">\r\n          <Button>\r\n\r\n          </Button>\r\n          <Button>\r\n            <CardText>{props.food.foodName}</CardText>\r\n          </Button>\r\n          <Button>\r\n            <CardText>{props.food.expirationDate}</CardText>\r\n          </Button>\r\n        </ButtonGroup>\r\n      </CardHeader>\r\n      <CardBody position='center'>\r\n          \r\n      </CardBody>\r\n      <CardFooter>\r\n        <ButtonGroup className=\"itemOptions\">\r\n          <Button onClick={() => {props.deleteItems(props.food._id);}}>\r\n            <img alt=\"delete\"  />\r\n          </Button>\r\n          <Button>\r\n            <CardText>{props.food.numOfItems}</CardText>\r\n          </Button>\r\n          <Button onClick={() => \"/create\" + props.food._id}>\r\n            <img alt=\"eat\"  />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </CardFooter>\r\n  </Card>\r\n\r\n\r\n}\r\n//grabs search results\r\nconst Recipedata = props =>(\r\n  <tr>{props.food.recipe.label}</tr>\r\n);\r\n\r\n//grabs recipe photo and name\r\n/*const RecipeData = (props) => (\r\n  <Row>\r\n    <Card className=\"bigdes \">\r\n      <CardImg alt=\"recipeItem\" src={Tphoto}/>            \r\n    </Card>  \r\n  </Row>*/\r\nexport default class Recipe extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearch = this.onChangeSearch.bind(this);\r\n    this.onChangeCalories = this.onChangeCalories.bind(this);\r\n    this.onChangeCarbs = this.onChangeCarbs.bind(this);\r\n    this.onChangeFat = this.onChangeFat.bind(this);\r\n    this.onChangeSugar = this.onChangeSugar.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.deleteItems = this.deleteItems.bind(this);\r\n    const {match:{params}} = this.props;\r\n\r\n    this.state = {\r\n      creator: params.id,\r\n      password: params.password,\r\n      searches: \"\",\r\n      recipedata: [],\r\n      newrecipedata: [],\r\n      newRecipes: [],\r\n      recipename: \"\",\r\n      recipeCalories: \"\",\r\n      recipeCarbs: \"\",\r\n      recipeFat: \"\",\r\n      recipeProtein: \"\",\r\n      recipeSugar: \"\",\r\n\r\n\r\n    };\r\n  }\r\n\r\n  onChangeSearch(e) {\r\n    this.setState({\r\n      searches: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeCalories(e){\r\n    this.setState({\r\n      recipeCalories:e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeCarbs(e){\r\n    this.setState({\r\n      recipeCarbs:e.target.value\r\n    });\r\n  }\r\n  onChangeSugar(e){\r\n    this.setState({\r\n      recipeSugar:e.target.value\r\n    });\r\n  }\r\n  onChangeProtein(e){\r\n    this.setState({\r\n      protein:e.target.value\r\n    });\r\n  }\r\n  onChangeFat(e){\r\n    this.setState({\r\n      recipeFat:e.target.value\r\n    });\r\n  }\r\n\r\n\r\n  onSubmit(e){\r\n    e.preventDefault();\r\n        axios\r\n          .get(\"https://api.edamam.com/search?q=chicken&app_id=b53160ee&app_key=5d9984e95c5c6968d5edfb7d02c83b46&from=0&to=3&calories=591-722&health=alcohol-free\")\r\n          .then(response => {\r\n            let newrec = [];\r\n            var label;\r\n            //console.log(response.data);\r\n              this.setState({\r\n              newrecipedata:response.data.hits});\r\n              this.state.newrecipedata.map(currentfood=>{\r\n              console.log(currentfood.recipe.label);\r\n              label = currentfood.recipe.label;\r\n              console.log(label);\r\n              newrec.push(label);\r\n              console.log(newrec);\r\n              currentfood.recipe.ingredients.map(currentingredient=>{\r\n                console.log(currentingredient.text);\r\n                return (null);\r\n              })\r\n              return (null);\r\n\r\n            })\r\n            console.log(newrec);\r\n            this.setState({\r\n              newRecipes: newrec\r\n            })\r\n            console.log(this.state.newRecipes);\r\n          })\r\n    var addRec=\"/addRecipe/\"+this.state.creator+\"/\"+this.state.password+\"/\"+this.state.searches+\"/\"+this.state.recipeSugar+\"/\"+this.state.recipeFat+\"/\"+this.state.recipeCarbs+\"/\"+this.state.recipeCalories\r\n    window.location=addRec\r\n\r\n\r\n\r\n}\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:8080/recipedata/\")\r\n      .then(response => {\r\n        this.setState({ recipedata: response.data });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  deleteItems(id) {\r\n    axios\r\n      .delete(\"http://localhost:8080/recipedata/\" + id)\r\n      .then(res => console.log(res.data));\r\n    this.setState({\r\n      recipedata: this.state.recipedata.filter(el => el._id !== id)\r\n    });\r\n  }\r\n/*  addRecipe(id){\r\n    const ingredient = {\r\n      ingredientName : this.state.ingredients\r\n    }\r\n    const recipes = {\r\n      recipeName: this.state.recipename,\r\n      creator: this.state.creator,\r\n      recipeCalories: this.state.recipeCalories,\r\n      recipeCarbs: this.state.recipeCarbs,\r\n      recipeProtein: this.state.recipeProtein,\r\n      recipeFat: this.state.recipeFat,\r\n      ingredients: ingredient\r\n    }\r\n\r\n    this.state.newrecipedata.map(currentfood=>{\r\n    console.log(currentfood.recipe.label);\r\n    label = currentfood.recipe.label;\r\n    console.log(label);\r\n    newrec.push(label);\r\n    console.log(newrec);\r\n    currentfood.recipe.ingredients.map(currentingredient=>{\r\n      console.log(currentingredient.text);\r\n\r\n    })\r\n\r\n\r\n  })\r\n\r\n\r\n\r\n    console.log(recipe);\r\n    axios\r\n      .post(\"http://localhost:8080/recipedata/add\", recipe)\r\n      .then(res => console.log(res.data));\r\n\r\n\r\n  }*/\r\n\r\n  inventory() {\r\n    const {match:{params}} = this.props;\r\n    return this.state.recipedata.map(currentfood => {\r\n      if(currentfood.creator===params.id){\r\n        return (\r\n          <Fooddata\r\n            food={currentfood}\r\n            username={params.id}\r\n            password={params.password}\r\n\r\n            deleteItems={this.deleteItems}\r\n            key={currentfood._id}\r\n            />\r\n          );} return (null);\r\n    });\r\n  }\r\n\r\n  searchedRecipes() {\r\n\r\n    return this.state.newrecipedata.map(currentfood => {\r\n\r\n        return (\r\n          <Recipedata\r\n            food={currentfood}\r\n            deleteItems={this.deleteItems}\r\n            key={currentfood._id}\r\n            />\r\n          );\r\n    });\r\n  }\r\n\r\n/*  onSubmit(e){\r\n    e.preventDefault();\r\n\r\n        axios\r\n          .get(\"https://api.edamam.com/search?q=chicken&app_id=b53160ee&app_key=5d9984e95c5c6968d5edfb7d02c83b46&from=0&to=3&calories=591-722&health=alcohol-free\")\r\n          .then(response => {\r\n          console.log(response.data);\r\n          //  this.setState({\r\n        //    foods:response.data.foods[0].foodNutrients});\r\n          /*  this.state.foods.map(currentfood=>{\r\n              console.log(currentfood);\r\n              if(currentfood.nutrientName==\"Protein\"){\r\n                this.state.protein = currentfood.value.toString(10);\r\n              }\r\n              if(currentfood.nutrientName==\"Total lipid (fat)\"){\r\n                this.state.fat= currentfood.value.toString(10);\r\n              }\r\n              if(currentfood.nutrientName==\"Carbohydrate, by difference\"){\r\n                this.state.carbs= currentfood.value.toString(10);\r\n              }\r\n              if(currentfood.nutrientName==\"Energy\"){\r\n                this.state.calories=currentfood.value.toString(10);\r\n              }\r\n              if(currentfood.nutrientName==\"Sugars, total including NLEA\"){\r\n                this.state.sugar=currentfood.value.toString(10);\r\n              }\r\n\r\n            })\r\n\r\n          }*/\r\n\r\n  \r\n  restrictions() {\r\n    return (\r\n      <Form inline justified>\r\n        <FormGroup>\r\n          <Input type=\"select\">\r\n            <option>Calories</option>\r\n            <option>250  Cal</option>\r\n            <option>500  Cal</option>\r\n            <option>750  Cal</option>\r\n            <option>1000  Cal</option>\r\n            <option>1500  Cal</option>\r\n          </Input>\r\n        </FormGroup> \r\n        <FormGroup>\r\n          <Input type=\"select\">\r\n            <option>Fat</option>\r\n            <option>Fat</option>\r\n            <option>Fat</option>\r\n          </Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Input type=\"select\">\r\n            <option>Carbs</option>\r\n            <option>Carbs</option>\r\n            <option>Carbs</option>\r\n          </Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Input type=\"select\">\r\n            <option>Sodium</option>\r\n            <option>Sodium</option>\r\n            <option>Sodium</option>\r\n          </Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Input type=\"select\">\r\n            <option>Sugar</option>\r\n            <option>Sugar</option>\r\n            <option>Sugar</option>\r\n          </Input>\r\n        </FormGroup>\r\n      </Form>\r\n    );\r\n  }\r\n  render() {\r\n    return (        \r\n      <div><TopBar username={this.state.username} password={this.state.password}/> <br/><br/><br/>\r\n      <Container className=\"fit-content\"> \r\n        <Row><Col><h1>Recipes</h1></Col></Row>\r\n        <Row><Col xs='1'/><Col><Input type=\"search\" name=\"search\" id=\"exampleSearch\" placeholder=\"Search\" /></Col><Col xs='1'/></Row>\r\n        {this.restrictions()}\r\n\r\n        {this.inventory()}        \r\n      </Container>    \r\n        <Navi username={this.state.password} password={this.state.password}/>\r\n      </div>  \r\n    )\r\n  }\r\n}\r\n//<Navi username={this.state.username} password={this.state.password}/>"]},"metadata":{},"sourceType":"module"}