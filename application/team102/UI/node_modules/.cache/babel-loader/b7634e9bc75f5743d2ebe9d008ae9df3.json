{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antwong\\\\Documents\\\\temp\\\\csc648-03-sp20-team102\\\\application\\\\team102\\\\UI\\\\src\\\\Component\\\\create-fooddata.component.js\";\nimport React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport MediaHandler from './MediaHandler';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"axios\";\nimport cam from \"./cameraIcon.svg\";\nimport { FormGroup, Label, Form, Input, Button, ButtonGroup, Row, Col } from \"reactstrap\";\nconst gatewayUrl = process.env.gatewayUrl || 'http://localhost:3004';\nexport default class Create extends Component {\n  constructor(props) {\n    super(props);\n\n    this.captureImage = () => {\n      // takes picture\n      console.log('inside captureImage function');\n      const context = this.canvas.getContext('2d');\n      context.drawImage(this.myVideo, 0, 0, 400, 350);\n      const image = this.canvas.toDataURL('image/jpeg', 0.5);\n      this.setState({\n        imageString: image\n      });\n      this.processImage();\n    };\n\n    this.processImage = () => {\n      // sends and grabs data\n      console.log('inside processImage function');\n      const url = 'http://localhost:3010/api/image/save';\n      const img = this.state.imageString;\n\n      if (img !== \"\") {\n        let formData = new FormData();\n        formData.set('file', img);\n        axios.post(url, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        }).then(res => {\n          console.log(res.data);\n          this.setState({\n            rawData: res.data\n          });\n          this.processData();\n        }).catch(e => {\n          console.log(e);\n        });\n      }\n    };\n\n    this.processData = () => {\n      // returns a array with description and qty\n      const processedData = [];\n      let hashKey = {};\n      this.state.rawData.forEach(item => {\n        if (hashKey.hasOwnProperty(item)) {\n          hashKey[item] += 1;\n        } else {\n          hashKey[item] = 1;\n        }\n      });\n      Object.keys(hashKey).forEach(k => {\n        let newItem = {\n          description: \"\",\n          quantity: 0\n        };\n        newItem.description = k;\n        newItem.quantity = hashKey[k];\n        processedData.push({\n          newItem\n        });\n        /*processedData.push({\r\n          description: k,\r\n          quantity: hashKey[k]\r\n        })*/\n      });\n      console.log(hashKey);\n      console.log(processedData);\n    };\n\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    this.onChangeFoodname = this.onChangeFoodname.bind(this);\n    this.onChangeExpirationdate = this.onChangeExpirationdate.bind(this);\n    this.onChangeCalories = this.onChangeCalories.bind(this);\n    this.onChangeCarbs = this.onChangeCarbs.bind(this);\n    this.onChangeNumberOfItems = this.onChangeNumberOfItems.bind(this);\n    this.onChangeSugar = this.onChangeSugar.bind(this);\n    this.onChangeFat = this.onChangeFat.bind(this);\n    this.onChangeProtein = this.onChangeProtein.bind(this);\n    this.onAddList = this.onAddList.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.mediaHandler = new MediaHandler();\n    this.state = {\n      foodname: \"\",\n      expirationdate: new Date(),\n      calories: \"\",\n      numberOfItems: \"1\",\n      carbs: \"\",\n      sugar: \"\",\n      fat: \"\",\n      protein: \"\",\n      sodium: \"\",\n      foods: [],\n      userdata: [],\n      addList: [],\n      password: params.password,\n      username: params.id,\n      count: 0,\n      hasMedia: false,\n      imageString: \"\",\n      rawData: [],\n      pop: false\n    };\n  } // change activations for prop states\n\n\n  onChangeFoodname(e) {\n    this.setState({\n      foodname: e.target.value\n    });\n  }\n\n  onChangeExpirationdate(date) {\n    this.setState({\n      expirationdate: date\n    });\n  }\n\n  onChangeCalories(e) {\n    this.setState({\n      calories: e\n    });\n  }\n\n  onChangeNumberOfItems(e) {\n    this.setState({\n      numberOfItems: e.target.value\n    });\n  }\n\n  onChangeCarbs(e) {\n    this.setState({\n      carbs: e\n    });\n  }\n\n  onChangeSugar(e) {\n    this.setState({\n      sugar: e\n    });\n  }\n\n  onChangeFat(e) {\n    this.setState({\n      fat: e\n    });\n  }\n\n  onChangeProtein(e) {\n    this.setState({\n      protein: e\n    });\n  }\n\n  onChangeSodium(e) {\n    this.setState({\n      sodium: e\n    });\n  }\n\n  onAddList(name, experdate, quantity) {\n    //const date = (this.state.expirationdate.getMonth() + 1).toString() + \"/\" + (this.state.expirationdate.getDate()).toString() + \"/\" + (this.state.expirationdate.getFullYear()).toString();\n    //var list = this.state.addList.concat(this.state.foodname + \" \" + date+\" \"+ this.state.numberOfItems);\n    //console.log(this.state.expirationdate);\n    let list = {\n      foodName: \"\",\n      expdate: new Date(),\n      qty: \"1\"\n    };\n    list.foodname = name;\n    list.expdate = experdate;\n    list.qty = quantity;\n    this.setState({\n      addList: [list, this.addList]\n    });\n  }\n\n  toInv() {\n    // only things passed to the final list is allowed\n    this.state.addList.map(item => {\n      axios\n      /* Searches food name param in Api returns all types matching\r\n       * foods -> array going to be loaded with first result info\r\n       * has all nutrition facts\r\n       */\n      .get(\"https://api.nal.usda.gov/fdc/v1/foods/search?api_key=ldLF1ky8NkwmcLnTDvqDoSjul1eanGZ1o6vZ2Q9u&query=\" + this.state.foodname).then(response => {\n        console.log(response.data.foods[0].foodNutrients[0]);\n        this.setState({\n          foods: response.data.foods[0].foodNutrients\n        });\n        /* Searches array for matching nutrient name, only exact \r\n         * calls funct to change value once found\r\n         */\n\n        this.state.foods.map(currentfood => {\n          console.log(currentfood.nutrientName, currentfood.value);\n          console.log(currentfood.value);\n\n          if (currentfood.nutrientName === 'Energy') {\n            this.onChangeCalories(Math.round(currentfood.value));\n          } else if (currentfood.nutrientName === 'Carbohydrate, by difference') {\n            this.onChangeCarbs(Math.round(currentfood.value));\n          } else if (currentfood.nutrientName === 'Total lipid (fat)') {\n            this.onChangeFat(Math.round(currentfood.value));\n          } else if (currentfood.nutrientName === 'Protein') {\n            this.onChangeProtein(Math.round(currentfood.value));\n          } else if (currentfood.nutrientName === 'Sugars, total including NLEA') {\n            this.onChangeSugar(Math.round(currentfood.value));\n          } else if (currentfood.nutrientName === 'Sodium, Na') {\n            this.onChangeSodium(Math.round(currentfood.value));\n          }\n\n          return null;\n        });\n        /* adds all values into a temp list\r\n         * sends to backend to be added to personal id food list\r\n         */\n\n        const food = {\n          foodName: item.foodname,\n          expirationDate: item.expdate,\n          calories: this.state.calories,\n          numOfItems: item.qty,\n          carbs: this.state.carbs,\n          protein: this.state.protein,\n          fat: this.state.fat,\n          sugar: this.state.sugar,\n          sodium: this.state.sodium\n        };\n        console.log(food);\n        this.onAddList();\n        axios.post(\"/fooddata/add\", food).then(res => console.log(res.data));\n      }).catch(error => {\n        console.log(error);\n      });\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    this.onAddList(this.state.foodName, this.expirationdate, this.state.numberOfItems);\n  }\n\n  AddList() {\n    return React.createElement(React.Fragment, null, this.state.addList.map(item => React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, item))));\n  }\n  /*componentDidMount() {\r\n    this.mediaHandler.getPermissions()\r\n      .then((stream) => {\r\n        this.setState({ hasMedia: true });\r\n        try {\r\n          this.myVideo.srcObject = stream;\r\n        } catch (e) {\r\n          this.myVideo.src = URL.createObjectURL(stream);\r\n        }\r\n        this.myVideo.play();\r\n      })\r\n  }*/\n\n\n  scan() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"video-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      className: \"video\",\n      width: \"400\",\n      height: \"350\",\n      ref: ref => {\n        this.myVideo = ref;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    })), React.createElement(Button, {\n      id: \"capture\",\n      onClick: this.captureImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Scan\"), React.createElement(\"div\", {\n      className: \"image-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      ref: canvas => {\n        this.canvas = canvas;\n      },\n      width: \"400\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    })));\n  }\n\n  render() {\n    var inv = \"/inventory/\" + this.state.username + \"/\" + this.state.password;\n    return React.createElement(\"div\", {\n      style: {\n        height: \"100%\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      style: {\n        paddingRight: '5%',\n        paddingLeft: '5%',\n        top: \"5px\",\n        position: \"fixed\",\n        width: \"100vw\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"foodName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"New Food Items\")), React.createElement(Input, {\n      type: \"text\",\n      required: true,\n      placeholder: \"What Food Are You Looking For?\",\n      value: this.state.foodname,\n      onChange: this.onChangeFoodname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"ExpDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Exp. Date:\"), React.createElement(DatePicker, {\n      required: true,\n      selected: this.state.expirationdate,\n      onChange: this.onChangeExpirationdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"qty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Quantity:\"), React.createElement(Input, {\n      type: \"select\",\n      style: {\n        height: 'auto',\n        width: 'auto'\n      },\n      value: this.state.numberOfItems,\n      onChange: this.onChangeNumberOfItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"5\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"6\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"7\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"8\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"9\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \"10\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"11\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, \"12\"))))), React.createElement(ButtonGroup, {\n      size: \"lg\",\n      className: \"SignSpace\",\n      style: {\n        boxSizing: 'content-box',\n        position: \"fixed\",\n        right: \"-10vw\",\n        bottom: \"0px\",\n        display: \"flex\",\n        minWidth: \"100vw\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(Button, {\n      href: inv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"Back\"), React.createElement(Button, {\n      className: \"form-control input\",\n      type: \"submit\",\n      value: \"Create food\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \" Add Item \"), React.createElement(Button, {\n      href: \"/scan\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"Scan\"))), \" \", React.createElement(\"div\", {\n      style: {\n        top: \"300px\",\n        height: \"100%\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, this.AddList()));\n  }\n\n}\n/**\r\n *\r\n *\r\n */","map":{"version":3,"sources":["C:/Users/Antwong/Documents/temp/csc648-03-sp20-team102/application/team102/UI/src/Component/create-fooddata.component.js"],"names":["React","Component","DatePicker","MediaHandler","axios","FormGroup","Label","Form","Input","Button","ButtonGroup","Row","Col","gatewayUrl","process","env","Create","constructor","props","captureImage","console","log","context","canvas","getContext","drawImage","myVideo","image","toDataURL","setState","imageString","processImage","url","img","state","formData","FormData","set","post","headers","then","res","data","rawData","processData","catch","e","processedData","hashKey","forEach","item","hasOwnProperty","Object","keys","k","newItem","description","quantity","push","match","params","onChangeFoodname","bind","onChangeExpirationdate","onChangeCalories","onChangeCarbs","onChangeNumberOfItems","onChangeSugar","onChangeFat","onChangeProtein","onAddList","onSubmit","mediaHandler","foodname","expirationdate","Date","calories","numberOfItems","carbs","sugar","fat","protein","sodium","foods","userdata","addList","password","username","id","count","hasMedia","pop","target","value","date","onChangeSodium","name","experdate","list","foodName","expdate","qty","toInv","map","get","response","foodNutrients","currentfood","nutrientName","Math","round","food","expirationDate","numOfItems","error","preventDefault","AddList","scan","ref","render","inv","height","width","paddingRight","paddingLeft","top","position","boxSizing","right","bottom","display","minWidth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport MediaHandler from './MediaHandler';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from \"axios\";\r\nimport cam from \"./cameraIcon.svg\"\r\nimport { FormGroup, Label, Form, Input, Button, ButtonGroup, Row, Col } from \"reactstrap\";\r\nconst gatewayUrl = process.env.gatewayUrl || 'http://localhost:3004';\r\nexport default class Create extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { match: { params } } = this.props;\r\n    this.onChangeFoodname = this.onChangeFoodname.bind(this);\r\n    this.onChangeExpirationdate = this.onChangeExpirationdate.bind(this);\r\n    this.onChangeCalories = this.onChangeCalories.bind(this);\r\n    this.onChangeCarbs = this.onChangeCarbs.bind(this);\r\n    this.onChangeNumberOfItems = this.onChangeNumberOfItems.bind(this);\r\n    this.onChangeSugar = this.onChangeSugar.bind(this);\r\n    this.onChangeFat = this.onChangeFat.bind(this);\r\n    this.onChangeProtein = this.onChangeProtein.bind(this);\r\n    this.onAddList = this.onAddList.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.mediaHandler = new MediaHandler();\r\n    this.state = {\r\n      foodname: \"\",\r\n      expirationdate: new Date(),\r\n      calories: \"\",\r\n      numberOfItems: \"1\",\r\n      carbs: \"\",\r\n      sugar: \"\",\r\n      fat: \"\",\r\n      protein: \"\",\r\n      sodium: \"\",\r\n      foods: [],\r\n      userdata: [],\r\n      addList: [],\r\n      password: params.password,\r\n      username: params.id,\r\n      count: 0,\r\n      hasMedia: false,\r\n      imageString: \"\",\r\n      rawData: [],\r\n      pop: false,\r\n    };\r\n  }\r\n  // change activations for prop states\r\n  onChangeFoodname(e) { this.setState({ foodname: e.target.value }); }\r\n  onChangeExpirationdate(date) { this.setState({ expirationdate: date }); }\r\n  onChangeCalories(e) { this.setState({ calories: e }); }\r\n  onChangeNumberOfItems(e) { this.setState({ numberOfItems: e.target.value }); }\r\n  onChangeCarbs(e) { this.setState({ carbs: e }); }\r\n  onChangeSugar(e) { this.setState({ sugar: e }); }\r\n  onChangeFat(e) { this.setState({ fat: e }); }\r\n  onChangeProtein(e) { this.setState({ protein: e }); }\r\n  onChangeSodium(e) { this.setState({ sodium: e }); }\r\n  onAddList(name, experdate, quantity) {\r\n    //const date = (this.state.expirationdate.getMonth() + 1).toString() + \"/\" + (this.state.expirationdate.getDate()).toString() + \"/\" + (this.state.expirationdate.getFullYear()).toString();\r\n    //var list = this.state.addList.concat(this.state.foodname + \" \" + date+\" \"+ this.state.numberOfItems);\r\n    //console.log(this.state.expirationdate);\r\n    let list = { foodName: \"\", expdate: new Date(), qty: \"1\" };\r\n    list.foodname = name;\r\n    list.expdate = experdate;\r\n    list.qty = quantity;\r\n    this.setState({ addList: [list, this.addList] })\r\n  }\r\n  toInv() { // only things passed to the final list is allowed\r\n    this.state.addList.map(item => {\r\n      axios\r\n        /* Searches food name param in Api returns all types matching\r\n         * foods -> array going to be loaded with first result info\r\n         * has all nutrition facts\r\n         */\r\n        .get(\"https://api.nal.usda.gov/fdc/v1/foods/search?api_key=ldLF1ky8NkwmcLnTDvqDoSjul1eanGZ1o6vZ2Q9u&query=\" + this.state.foodname)\r\n        .then(response => {\r\n          console.log(response.data.foods[0].foodNutrients[0]);\r\n          this.setState({\r\n            foods: response.data.foods[0].foodNutrients\r\n          });\r\n          /* Searches array for matching nutrient name, only exact \r\n           * calls funct to change value once found\r\n           */\r\n          this.state.foods.map(currentfood => {\r\n            console.log(currentfood.nutrientName, currentfood.value);\r\n            console.log(currentfood.value);\r\n            if (currentfood.nutrientName === 'Energy') {\r\n              this.onChangeCalories(Math.round(currentfood.value));\r\n            } else if (currentfood.nutrientName === 'Carbohydrate, by difference') {\r\n              this.onChangeCarbs(Math.round(currentfood.value));\r\n            } else if (currentfood.nutrientName === 'Total lipid (fat)') {\r\n              this.onChangeFat(Math.round(currentfood.value));\r\n            } else if (currentfood.nutrientName === 'Protein') {\r\n              this.onChangeProtein(Math.round(currentfood.value));\r\n            } else if (currentfood.nutrientName === 'Sugars, total including NLEA') {\r\n              this.onChangeSugar(Math.round(currentfood.value));\r\n            } else if (currentfood.nutrientName === 'Sodium, Na') {\r\n              this.onChangeSodium(Math.round(currentfood.value));\r\n            } return (null);\r\n          })\r\n          /* adds all values into a temp list\r\n           * sends to backend to be added to personal id food list\r\n           */\r\n          const food = {\r\n            foodName: item.foodname,\r\n            expirationDate: item.expdate,\r\n            calories: this.state.calories,\r\n            numOfItems: item.qty,\r\n            carbs: this.state.carbs,\r\n            protein: this.state.protein,\r\n            fat: this.state.fat,\r\n            sugar: this.state.sugar,\r\n            sodium: this.state.sodium\r\n          };\r\n          console.log(food);\r\n          this.onAddList();\r\n          axios\r\n            .post(\"/fooddata/add\", food)\r\n            .then(res => console.log(res.data));\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    })\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    this.onAddList(this.state.foodName, this.expirationdate, this.state.numberOfItems);\r\n  }\r\n  AddList() {\r\n    return (<>\r\n      {this.state.addList.map((item) => (\r\n        <Row>\r\n          <Col>{item}</Col>\r\n        </Row>\r\n      ))}</>\r\n    );\r\n  }\r\n  /*componentDidMount() {\r\n    this.mediaHandler.getPermissions()\r\n      .then((stream) => {\r\n        this.setState({ hasMedia: true });\r\n        try {\r\n          this.myVideo.srcObject = stream;\r\n        } catch (e) {\r\n          this.myVideo.src = URL.createObjectURL(stream);\r\n        }\r\n        this.myVideo.play();\r\n      })\r\n  }*/\r\n  captureImage = () => { // takes picture\r\n    console.log('inside captureImage function')\r\n    const context = this.canvas.getContext('2d');\r\n    context.drawImage(this.myVideo, 0, 0, 400, 350);\r\n    const image = this.canvas.toDataURL('image/jpeg', 0.5);\r\n    this.setState({ imageString: image });\r\n    this.processImage();\r\n  }\r\n  processImage = () => { // sends and grabs data\r\n    console.log('inside processImage function')\r\n    const url = 'http://localhost:3010/api/image/save';\r\n    const img = this.state.imageString;\r\n    if (img !== \"\") {\r\n      let formData = new FormData();\r\n      formData.set('file', img);\r\n      axios.post(url, formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' }\r\n      }).then((res) => {\r\n        console.log(res.data);\r\n        this.setState({ rawData: res.data });\r\n        this.processData();\r\n      }).catch((e) => {\r\n        console.log(e)\r\n      });\r\n    }\r\n  }\r\n  processData = () => {// returns a array with description and qty\r\n    const processedData = [];\r\n    let hashKey = {};\r\n    this.state.rawData.forEach((item) => {\r\n      if (hashKey.hasOwnProperty(item)) {\r\n        hashKey[item] += 1;\r\n      } else {\r\n        hashKey[item] = 1;\r\n      }\r\n    });\r\n    Object.keys(hashKey).forEach((k) => {\r\n      let newItem = { description: \"\", quantity: 0 };\r\n      newItem.description = k;\r\n      newItem.quantity = hashKey[k];\r\n      processedData.push({ newItem });\r\n      /*processedData.push({\r\n        description: k,\r\n        quantity: hashKey[k]\r\n      })*/\r\n    })\r\n    console.log(hashKey);\r\n    console.log(processedData);\r\n  }\r\n  scan() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"video-container\">\r\n          <video className=\"video\" width=\"400\" height=\"350\" ref={(ref) => { this.myVideo = ref; }}></video>\r\n        </div>\r\n        <Button id=\"capture\" onClick={this.captureImage}>Scan</Button>\r\n        <div className=\"image-container\">\r\n          <canvas ref={(canvas) => { this.canvas = canvas }} width='400' height='350' ></canvas>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  render() {\r\n    var inv = \"/inventory/\" + this.state.username + \"/\" + this.state.password\r\n    return (<div style={{ height: \"100%\", width: \"100%\" }}>\r\n      <Form onSubmit={this.onSubmit} style={{ paddingRight: '5%', paddingLeft: '5%', top: \"5px\", position: \"fixed\", width: \"100vw\" }}>\r\n        <FormGroup >\r\n          <Label for=\"foodName\"><h3>New Food Items</h3></Label>\r\n          <Input\r\n            type=\"text\"\r\n            required\r\n            placeholder=\"What Food Are You Looking For?\"\r\n            value={this.state.foodname}\r\n            onChange={this.onChangeFoodname} />\r\n        </FormGroup>\r\n        <Row>\r\n          <Col >\r\n            <FormGroup>\r\n              <Label for=\"ExpDate\">Exp. Date:</Label>\r\n              <DatePicker\r\n                required\r\n                selected={this.state.expirationdate}\r\n                onChange={this.onChangeExpirationdate} />\r\n            </FormGroup>\r\n          </Col>\r\n          <Col >\r\n            <FormGroup>\r\n              <Label for=\"qty\">Quantity:</Label>\r\n              <Input\r\n                type=\"select\"\r\n                style={{ height: 'auto', width: 'auto' }}\r\n                value={this.state.numberOfItems}\r\n                onChange={this.onChangeNumberOfItems}>\r\n                <option>1</option>\r\n                <option>2</option>\r\n                <option>3</option>\r\n                <option>3</option>\r\n                <option>5</option>\r\n                <option>6</option>\r\n                <option>7</option>\r\n                <option>8</option>\r\n                <option>9</option>\r\n                <option>10</option>\r\n                <option>11</option>\r\n                <option>12</option>\r\n              </Input>\r\n            </FormGroup>\r\n          </Col>\r\n        </Row>\r\n\r\n        <ButtonGroup size='lg' className=\"SignSpace\" style={{ boxSizing: 'content-box', position: \"fixed\", right: \"-10vw\", bottom: \"0px\", display: \"flex\", minWidth: \"100vw\" }}>\r\n          <Button href={inv}>Back</Button>\r\n          <Button className=\"form-control input\" type=\"submit\" value=\"Create food\"> Add Item </Button>\r\n          <Button href=\"/scan\" >Scan</Button>\r\n        </ButtonGroup>\r\n\r\n      </Form> <div style={{ top: \"300px\", height: \"100%\", width: \"100%\" }}>{this.AddList()}</div>\r\n\r\n    </div>\r\n    );\r\n  }\r\n}\r\n/**\r\n *\r\n *\r\n */"]},"metadata":{},"sourceType":"module"}