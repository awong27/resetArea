{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antwong\\\\Documents\\\\temp\\\\csc648-03-sp20-team102\\\\application\\\\team102\\\\UI\\\\src\\\\Component\\\\create-fooddata.component.js\";\nimport React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"axios\"; //import Navi from \"./Navigation\";\n//import TopBar from \"./TopBar\";\n\nimport { NavLink, FormGroup, Label, Form, Input, Button, ButtonGroup, Row, Col } from \"reactstrap\";\nexport default class Create extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    this.onChangeFoodname = this.onChangeFoodname.bind(this);\n    this.onChangeExpirationdate = this.onChangeExpirationdate.bind(this);\n    this.onChangeCalories = this.onChangeCalories.bind(this);\n    this.onChangeCarbs = this.onChangeCarbs.bind(this);\n    this.onChangeNumberOfItems = this.onChangeNumberOfItems.bind(this);\n    this.onChangeSugar = this.onChangeSugar.bind(this);\n    this.onChangeFat = this.onChangeFat.bind(this);\n    this.onChangeProtein = this.onChangeProtein.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      foodname: \"\",\n      expirationdate: new Date(),\n      calories: \"\",\n      numberOfItems: \"\",\n      carbs: \"\",\n      sugar: \"\",\n      fat: \"\",\n      protein: \"\",\n      sodium: \"\",\n      foods: [],\n      userdata: [],\n      addList: [],\n      password: params.password,\n      username: params.id,\n      count: 0\n    };\n  } // change activations for prop states\n\n\n  onChangeFoodname(e) {\n    this.setState({\n      foodname: e.target.value\n    });\n  }\n\n  onChangeExpirationdate(date) {\n    this.setState({\n      expirationdate: date\n    });\n  }\n\n  onChangeCalories(e) {\n    this.setState({\n      calories: e.target.value\n    });\n  }\n\n  onChangeNumberOfItems(e) {\n    this.setState({\n      numberOfItems: e.target.value\n    });\n  }\n\n  onChangeCarbs(e) {\n    this.setState({\n      carbs: e.target.value\n    });\n  }\n\n  onChangeSugar(e) {\n    this.setState({\n      sugar: e.target.value\n    });\n  }\n\n  onChangeFat(e) {\n    this.setState({\n      fat: e.target.value\n    });\n  }\n\n  onChangeProtein(e) {\n    this.setState({\n      protein: e.target.value\n    });\n  }\n\n  onChangeSodium(e) {\n    this.setState({\n      sodium: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    axios\n    /* Searches food name param in Api returns all types matching\r\n     * foods -> array going to be loaded with first result info\r\n     * has all nutrition facts\r\n     */\n    .get(\"https://api.nal.usda.gov/fdc/v1/foods/search?api_key=ldLF1ky8NkwmcLnTDvqDoSjul1eanGZ1o6vZ2Q9u&query=\" + this.state.foodname).then(response => {\n      console.log(response.data.foods[0].foodNutrients[0]);\n      this.setState({\n        foods: response.data.foods[0].foodNutrients\n      });\n      /* Searches array for matching nutrient name, only exact \r\n       * calls funct to change value once found\r\n       */\n\n      this.state.foods.map(currentfood => {\n        console.log(currentfood.nutrientName, currentfood.value);\n        console.log(currentfood.value);\n\n        if (currentfood.nutrientName === 'Energy') {\n          this.onChangeCalories(Math.round(currentfood.value));\n        } else if (currentfood.nutrientName === 'Carbohydrate, by difference') {\n          this.onChangeCarbs(Math.round(currentfood.value));\n        } else if (currentfood.nutrientName === 'Total lipid (fat)') {\n          this.onChangeFat(Math.round(currentfood.value));\n        } else if (currentfood.nutrientName === 'Protein') {\n          this.onChangeProtein(Math.round(currentfood.value));\n        } else if (currentfood.nutrientName === 'Sugars, total including NLEA') {\n          this.onChangeSugar(Math.round(currentfood.value));\n        } else if (currentfood.nutrientName === 'Sodium, Na') {\n          this.onChangeSodium(Math.round(currentfood.value));\n        }\n      });\n      /* adds all values into a temp list\r\n       * sends to backend to be added to personal id food list\r\n       */\n\n      const food = {\n        foodName: this.state.foodname,\n        expirationDate: this.state.expirationdate,\n        calories: this.state.calories,\n        numOfItems: this.state.numberOfItems,\n        carbs: this.state.carbs,\n        protein: this.state.protein,\n        fat: this.state.fat,\n        sugar: this.state.sugar,\n        sodium: this.state.sodium\n      };\n      console.log(food);\n      axios.post(\"/fooddata/add\", food).then(res => console.log(res.data));\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  AddList() {\n    return this.state.addList;\n  }\n\n  render() {\n    var inv = \"/inventory/\" + this.state.username + \"/\" + this.state.password;\n    return React.createElement(\"div\", {\n      style: {\n        padding: '5%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Create New Food Items\"), this.AddList(), React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"foodName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Food Name:\"), React.createElement(Input, {\n      type: \"text\",\n      required: true,\n      placeholder: \"What Food Are You Looking For?\",\n      value: this.state.foodname,\n      onChange: this.onChangeFoodname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \" \", React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"ExpDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Exp. Date:\"), React.createElement(DatePicker, {\n      required: true,\n      selected: this.state.expirationdate,\n      onChange: this.onChangeExpirationdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }))), \" \", React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"qty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Quantity:\"), React.createElement(Input, {\n      type: \"select\",\n      style: {\n        height: 'auto'\n      },\n      value: this.state.numberOfItems,\n      onChange: this.onChangeNumberOfItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"5\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"6\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"7\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"8\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"9\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"10\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"11\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"12\")))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      size: \"lg\",\n      className: \"SignSpace form-control input\",\n      type: \"submit\",\n      value: \"Create food\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \" Submit \"), React.createElement(ButtonGroup, {\n      size: \"lg\",\n      className: \"SignSpace\",\n      style: {\n        boxSizing: 'content-box'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Button, {\n      href: inv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Go Back\"), React.createElement(Button, {\n      className: \"lightState\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Create\"), React.createElement(Button, {\n      href: \"/scan\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Scan\")));\n  }\n\n}\n/**\r\n *\r\n *\r\n */","map":{"version":3,"sources":["C:/Users/Antwong/Documents/temp/csc648-03-sp20-team102/application/team102/UI/src/Component/create-fooddata.component.js"],"names":["React","Component","DatePicker","axios","NavLink","FormGroup","Label","Form","Input","Button","ButtonGroup","Row","Col","Create","constructor","props","match","params","onChangeFoodname","bind","onChangeExpirationdate","onChangeCalories","onChangeCarbs","onChangeNumberOfItems","onChangeSugar","onChangeFat","onChangeProtein","onSubmit","state","foodname","expirationdate","Date","calories","numberOfItems","carbs","sugar","fat","protein","sodium","foods","userdata","addList","password","username","id","count","e","setState","target","value","date","onChangeSodium","preventDefault","get","then","response","console","log","data","foodNutrients","map","currentfood","nutrientName","Math","round","food","foodName","expirationDate","numOfItems","post","res","catch","error","AddList","render","inv","padding","height","boxSizing"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from \"axios\";\r\n//import Navi from \"./Navigation\";\r\n//import TopBar from \"./TopBar\";\r\nimport { NavLink, FormGroup, Label, Form, Input, Button, ButtonGroup, Row, Col } from \"reactstrap\";\r\n\r\nexport default class Create extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { match: { params } } = this.props;\r\n    this.onChangeFoodname = this.onChangeFoodname.bind(this);\r\n    this.onChangeExpirationdate = this.onChangeExpirationdate.bind(this);\r\n    this.onChangeCalories = this.onChangeCalories.bind(this);\r\n    this.onChangeCarbs = this.onChangeCarbs.bind(this);\r\n    this.onChangeNumberOfItems = this.onChangeNumberOfItems.bind(this);\r\n    this.onChangeSugar = this.onChangeSugar.bind(this);\r\n    this.onChangeFat = this.onChangeFat.bind(this);\r\n    this.onChangeProtein = this.onChangeProtein.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.state = {\r\n      foodname: \"\",\r\n      expirationdate: new Date(),\r\n      calories: \"\",\r\n      numberOfItems: \"\",\r\n      carbs: \"\",\r\n      sugar: \"\",\r\n      fat: \"\",\r\n      protein: \"\",\r\n      sodium: \"\",\r\n      foods: [],\r\n      userdata: [],\r\n      addList: [],\r\n      password: params.password,\r\n      username: params.id,\r\n      count: 0\r\n    };\r\n  }\r\n  // change activations for prop states\r\n  onChangeFoodname(e) { this.setState({ foodname: e.target.value }); }\r\n  onChangeExpirationdate(date) { this.setState({ expirationdate: date }); }\r\n  onChangeCalories(e) { this.setState({ calories: e.target.value }); }\r\n  onChangeNumberOfItems(e) { this.setState({ numberOfItems: e.target.value }); }\r\n  onChangeCarbs(e) { this.setState({ carbs: e.target.value }); }\r\n  onChangeSugar(e) { this.setState({ sugar: e.target.value }); }\r\n  onChangeFat(e) { this.setState({ fat: e.target.value }); }\r\n  onChangeProtein(e) { this.setState({ protein: e.target.value }); }\r\n  onChangeSodium(e) { this.setState({ sodium: e.target.value }); }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    axios\r\n      /* Searches food name param in Api returns all types matching\r\n       * foods -> array going to be loaded with first result info\r\n       * has all nutrition facts\r\n       */\r\n      .get(\"https://api.nal.usda.gov/fdc/v1/foods/search?api_key=ldLF1ky8NkwmcLnTDvqDoSjul1eanGZ1o6vZ2Q9u&query=\" + this.state.foodname)\r\n      .then(response => {\r\n        console.log(response.data.foods[0].foodNutrients[0]);\r\n        this.setState({\r\n          foods: response.data.foods[0].foodNutrients\r\n        });\r\n        /* Searches array for matching nutrient name, only exact \r\n         * calls funct to change value once found\r\n         */\r\n        this.state.foods.map(currentfood => {\r\n          console.log(currentfood.nutrientName, currentfood.value);\r\n          console.log(currentfood.value);\r\n          if (currentfood.nutrientName === 'Energy') {\r\n            this.onChangeCalories(Math.round(currentfood.value));\r\n          } else if (currentfood.nutrientName === 'Carbohydrate, by difference') {\r\n            this.onChangeCarbs(Math.round(currentfood.value));\r\n          } else if (currentfood.nutrientName === 'Total lipid (fat)') {\r\n            this.onChangeFat(Math.round(currentfood.value));\r\n          } else if (currentfood.nutrientName === 'Protein') {\r\n            this.onChangeProtein(Math.round(currentfood.value));\r\n          } else if (currentfood.nutrientName === 'Sugars, total including NLEA') {\r\n            this.onChangeSugar(Math.round(currentfood.value));\r\n          } else if (currentfood.nutrientName === 'Sodium, Na') {\r\n            this.onChangeSodium(Math.round(currentfood.value));\r\n          }\r\n        })\r\n        /* adds all values into a temp list\r\n         * sends to backend to be added to personal id food list\r\n         */\r\n        const food = {\r\n          foodName: this.state.foodname,\r\n          expirationDate: this.state.expirationdate,\r\n          calories: this.state.calories,\r\n          numOfItems: this.state.numberOfItems,\r\n          carbs: this.state.carbs,\r\n          protein: this.state.protein,\r\n          fat: this.state.fat,\r\n          sugar: this.state.sugar,\r\n          sodium: this.state.sodium\r\n        };\r\n        console.log(food);\r\n        axios\r\n          .post(\"/fooddata/add\", food)\r\n          .then(res => console.log(res.data));\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  AddList() {\r\n    return(\r\n      this.state.addList\r\n    );\r\n  }\r\n  render() {\r\n    var inv = \"/inventory/\" + this.state.username + \"/\" + this.state.password\r\n    return (<div style={{padding: '5%'}}><h3>Create New Food Items</h3> \r\n      {this.AddList()}\r\n      <Form onSubmit={this.onSubmit}>        \r\n        <FormGroup >\r\n          <Label for=\"foodName\">Food Name:</Label>\r\n          <Input\r\n            type=\"text\"\r\n            required\r\n            placeholder=\"What Food Are You Looking For?\"\r\n            value={this.state.foodname}\r\n            onChange={this.onChangeFoodname} />\r\n        </FormGroup>\r\n        <Row> <Col />\r\n          <Col >\r\n            <FormGroup>\r\n              <Label for=\"ExpDate\">Exp. Date:</Label>\r\n              <DatePicker\r\n                required\r\n                selected={this.state.expirationdate}\r\n                onChange={this.onChangeExpirationdate} />\r\n            </FormGroup>\r\n          </Col> <Col /> \r\n          <Col >\r\n            <FormGroup>\r\n              <Label for=\"qty\">Quantity:</Label>\r\n              <Input\r\n                type=\"select\"\r\n                style={{height: 'auto'}}\r\n                value={this.state.numberOfItems}\r\n                onChange={this.onChangeNumberOfItems}>\r\n                <option>1</option>\r\n                <option>2</option>\r\n                <option>3</option>\r\n                <option>3</option>\r\n                <option>5</option>\r\n                <option>6</option>\r\n                <option>7</option>\r\n                <option>8</option>\r\n                <option>9</option>\r\n                <option>10</option>\r\n                <option>11</option>\r\n                <option>12</option>\r\n              </Input>\r\n            </FormGroup>\r\n          </Col><Col />\r\n        </Row>\r\n      </Form>\r\n      <Button size='lg' className=\"SignSpace form-control input\" type=\"submit\" value=\"Create food\"> Submit </Button>\r\n      <ButtonGroup size='lg' className=\"SignSpace\" style={{boxSizing: 'content-box'}}>\r\n        <Button href={inv}>Go Back</Button>\r\n        <Button className=\"lightState\" >Create</Button>\r\n        <Button href=\"/scan\" >Scan</Button>\r\n      </ButtonGroup>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n/**\r\n *\r\n *\r\n */"]},"metadata":{},"sourceType":"module"}