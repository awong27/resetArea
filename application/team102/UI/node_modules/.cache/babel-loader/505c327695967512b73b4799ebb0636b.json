{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mitya\\\\Documents\\\\GitHub\\\\csc648-03-sp20-team102\\\\application\\\\team102\\\\UI\\\\src\\\\Component\\\\Scan.js\";\nimport React, { Component } from 'react';\nimport MediaHandler from './MediaHandler';\nimport { Button } from 'reactstrap';\n\nconst fs = require('browserify-fs');\n\nconst sys = require('sys');\n\nexport default class Scan extends Component {\n  constructor() {\n    super();\n\n    this.captureImage = () => {\n      const context = this.canvas.getContext('2d');\n      context.drawImage(this.myVideo, 0, 0, 400, 350);\n      const image = this.canvas.toDataURL('image/jpeg', 0.5);\n      return image;\n    };\n\n    this.fileSelectHandler = event => {\n      console.log(event);\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.fileUploadHandler = () => {\n      const fd = new FormData();\n      fd.append('image', this.state.selectedFile, this.state.selectedFile.name);\n      axios.post('api/image/save', fd, {\n        onUploadProgress: progressEvent => {\n          console.log('Upload Progress ' + Math.round(progressEvent.loaded / progressEvent.total * 100) + '%');\n        }\n      }).then(res => {\n        console.log(res);\n      });\n    };\n\n    this.state = {\n      hasMedia: false\n    };\n    this.mediaHandler = new MediaHandler();\n  }\n\n  componentDidMount() {\n    this.mediaHandler.getPermissions().then(stream => {\n      this.setState({\n        hasMedia: true\n      });\n\n      try {\n        this.myVideo.srcObject = stream;\n      } catch (e) {\n        this.myVideo.src = URL.createObjectURL(stream);\n      }\n\n      this.myVideo.play();\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"video-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"video\", {\n      className: \"video\",\n      width: \"400\",\n      height: \"350\",\n      ref: ref => {\n        this.myVideo = ref;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: this.captureImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Capture\"), React.createElement(\"div\", {\n      className: \"image-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"canvas\", {\n      ref: canvas => {\n        this.canvas = canvas;\n      },\n      width: \"400\",\n      height: \"350\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/mitya/Documents/GitHub/csc648-03-sp20-team102/application/team102/UI/src/Component/Scan.js"],"names":["React","Component","MediaHandler","Button","fs","require","sys","Scan","constructor","captureImage","context","canvas","getContext","drawImage","myVideo","image","toDataURL","fileSelectHandler","event","console","log","setState","selectedFile","target","files","fileUploadHandler","fd","FormData","append","state","name","axios","post","onUploadProgress","progressEvent","Math","round","loaded","total","then","res","hasMedia","mediaHandler","componentDidMount","getPermissions","stream","srcObject","e","src","URL","createObjectURL","play","render","ref"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport MediaHandler from './MediaHandler';\r\nimport { Button } from 'reactstrap';\r\nconst fs = require('browserify-fs');\r\nconst sys = require('sys');\r\n\r\n\r\nexport default class Scan extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            hasMedia: false\r\n        };\r\n\r\n        this.mediaHandler = new MediaHandler();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mediaHandler.getPermissions()\r\n        .then( (stream) => {\r\n            this.setState({hasMedia : true});\r\n\r\n            try {\r\n                this.myVideo.srcObject = stream;\r\n            } catch (e) {\r\n                this.myVideo.src = URL.createObjectURL(stream);\r\n            }\r\n            this.myVideo.play();\r\n        })\r\n    }\r\n\r\n    captureImage = () => {\r\n        const context = this.canvas.getContext('2d');\r\n        context.drawImage(this.myVideo, 0, 0, 400, 350);\r\n        const image = this.canvas.toDataURL('image/jpeg', 0.5);\r\n        return image;\r\n    }\r\n\r\n    //grabs target file from event and store in selectedFile\r\n    fileSelectHandler = event => {\r\n        console.log(event);\r\n        this.setState({\r\n            selectedFile: event.target.files[0]\r\n        })\r\n    }\r\n\r\n    fileUploadHandler = () => {\r\n        const fd = new FormData();\r\n        fd.append('image', this.state.selectedFile, this.state.selectedFile.name);\r\n        axios.post('api/image/save', fd, {\r\n            onUploadProgress: progressEvent => {\r\n                console.log('Upload Progress ' + Math.round(progressEvent.loaded/progressEvent.total *100) + '%')\r\n            } \r\n        })\r\n            .then(res => {\r\n                console.log(res);\r\n            });\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"video-container\">\r\n                    <video className=\"video\" width=\"400\" height=\"350\" ref={(ref) => {this.myVideo = ref;}}></video>\r\n                </div>\r\n                <Button onClick={this.captureImage}>Capture</Button>\r\n                <div className=\"image-container\">\r\n                    <canvas ref={ (canvas) => {this.canvas = canvas}} width='400' height= '350' ></canvas>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}