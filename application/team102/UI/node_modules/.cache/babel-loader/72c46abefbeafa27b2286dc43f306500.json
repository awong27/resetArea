{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mitya\\\\Documents\\\\GitHub\\\\csc648-03-sp20-team102\\\\application\\\\team102\\\\UI\\\\src\\\\Component\\\\Scan.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nexport default class Scan extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fileSelectHandler = event => {\n      console.log(event);\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.fileUploadHandler = () => {\n      const fd = new FormData();\n      fd.append('image', this.state.selectedFile, this.state.selectedFile.name);\n      axios.post('/api/scan', fd, {\n        onUploadProgress: progressEvent => {\n          console.log('Upload Progress ' + Math.round(progressEvent.loaded / progressEvent.total * 100) + '%');\n        }\n      }).then(res => {\n        console.log(res);\n      });\n    };\n\n    this.setTimeout = () => {\n      if (!this.props.isOpen) {\n        return;\n      }\n\n      this.context = this.canvasElement.getContext('2d');\n      this.context.drawImage(this.props.video, 0, 0, 640, 480);\n    };\n\n    this.state = {\n      selectedFile: null,\n      context: null\n    };\n  }\n\n  componentDidMount() {\n    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.oGetUserMedia;\n\n    if (navigator.getUserMedia) {\n      navigator.getUserMedia({\n        video: true\n      }, this.handleVideo, this.videoError);\n    }\n  }\n\n  handleVideo(stream) {\n    // Update the state, triggering the component to re-render with the correct stream\n    this.setState({\n      videoSrc: window.URL.createObjectURL(stream)\n    });\n    this.videoElement.play();\n  }\n\n  videoError() {\n    console.log(\"video error\");\n  } //grabs target file from event and store in selectedFile\n\n\n  render() {\n    const video = React.createElement(\"video\", {\n      id: \"video\",\n      width: \"640\",\n      height: \"480\",\n      className: \"cameraFrame\",\n      src: this.state.videoSrc,\n      autoPlay: true,\n      ref: input => {\n        this.videoElement = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    });\n    const canvasEl = React.createElement(\"canvas\", {\n      id: \"canvas\",\n      width: \"640\",\n      height: \"480\",\n      className: \"photoCard\",\n      ref: input => this.canvasElement = this.context,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, video, canvasEl, React.createElement(\"input\", {\n      style: {\n        display: 'none'\n      },\n      type: \"file\",\n      onChange: this.fileSelectedHandler,\n      ref: fileInput => this.fileInput = fileInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.fileInput.click(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Pick File\"), React.createElement(\"button\", {\n      onClick: this.fileUploadHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Upload\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/mitya/Documents/GitHub/csc648-03-sp20-team102/application/team102/UI/src/Component/Scan.js"],"names":["React","Component","axios","Scan","constructor","props","fileSelectHandler","event","console","log","setState","selectedFile","target","files","fileUploadHandler","fd","FormData","append","state","name","post","onUploadProgress","progressEvent","Math","round","loaded","total","then","res","setTimeout","isOpen","context","canvasElement","getContext","drawImage","video","componentDidMount","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","oGetUserMedia","handleVideo","videoError","stream","videoSrc","window","URL","createObjectURL","videoElement","play","render","input","canvasEl","display","fileSelectedHandler","fileInput","click"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nexport default class Scan extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedFile: null,\r\n            context: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.oGetUserMedia;\r\n        if (navigator.getUserMedia) {\r\n            navigator.getUserMedia({video: true}, this.handleVideo, this.videoError);\r\n        }\r\n        \r\n    }\r\n    handleVideo (stream) {\r\n        // Update the state, triggering the component to re-render with the correct stream\r\n        this.setState({ videoSrc: window.URL.createObjectURL(stream) });\r\n        this.videoElement.play();\r\n      }\r\n    videoError() {\r\n        console.log(\"video error\");\r\n    }\r\n    //grabs target file from event and store in selectedFile\r\n    fileSelectHandler = event => {\r\n        console.log(event);\r\n        this.setState({\r\n            selectedFile: event.target.files[0]\r\n        })\r\n    }\r\n    //grabs selectedFile -> stores in fd\r\n    //Post sends file fd -> '/api/scan' - backend point\r\n    //console log should show upload progress \r\n    fileUploadHandler = () => {\r\n        const fd = new FormData();\r\n        fd.append('image', this.state.selectedFile, this.state.selectedFile.name);\r\n        axios.post('/api/scan', fd, {\r\n            onUploadProgress: progressEvent => {\r\n                console.log('Upload Progress ' + Math.round(progressEvent.loaded/progressEvent.total *100) + '%')\r\n            } \r\n        })\r\n            .then(res => {\r\n                console.log(res);\r\n            });\r\n\r\n    }\r\n    setTimeout=() => {\r\n            if (!this.props.isOpen) {\r\n                return;\r\n            }\r\n            this.context = this.canvasElement.getContext('2d');\r\n            this.context.drawImage(this.props.video, 0, 0, 640, 480);\r\n        };\r\n    render() {\r\n        const video = (<video id=\"video\" width=\"640\" height=\"480\" className=\"cameraFrame\" src={this.state.videoSrc} autoPlay={true}\r\n        ref={(input) => { this.videoElement = input; }}></video>);\r\n        \r\n        const canvasEl = (<canvas id=\"canvas\" width=\"640\" height=\"480\" className=\"photoCard\" ref={(input) => this.canvasElement = this.context} />);\r\n        return (\r\n            <div>\r\n                {video}\r\n                {canvasEl}\r\n                <input style={{display: 'none'}} \r\n                    type=\"file\" \r\n                    onChange={this.fileSelectedHandler} \r\n                    ref={fileInput => this.fileInput = fileInput}/>\r\n                    <br/>\r\n                <button onClick={() => this.fileInput.click()}>Pick File</button>\r\n                <button onClick={this.fileUploadHandler}>Upload</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}