{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antwong\\\\Desktop\\\\csc648-03-sp20-team102\\\\application\\\\team102\\\\UI\\\\src\\\\Component\\\\ShoppingList.js\";\nimport React, { Component } from 'react';\nimport { Button, Row, Col, Input, NavLink, Form, FormGroup } from 'reactstrap';\nimport Navi from \"./Navigation\";\nimport TopBar from \"./TopBar\";\nimport \"./inv.css\";\nimport plusbtn from \"./plus.svg\";\nimport axios from \"axios\";\n\nconst Shoppingdata = props =>\n/*  <tr>\r\n  <td>\r\n    <Link to = {\"/user-item/\"+ props.food._id}>{props.food.foodName}</Link>\r\n    </td>\r\n    <td>{props.food.expirationDate}</td>\r\n    <td>{props.food.calories}</td>\r\n    <td>{props.food.numOfItems}</td>\r\n    <td>\r\n      <Link to={\"/edit/\" + props.food._id}>edit</Link> |{\" \"}\r\n      <a\r\n        href=\"/create\"\r\n        onClick={() => {\r\n          props.deleteItems(props.food._id);\r\n        }}\r\n      >\r\n        delete\r\n      </a>\r\n    </td>\r\n  </tr>*/\nReact.createElement(Button, {\n  className: \"invBar\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, React.createElement(Row, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, React.createElement(Col, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, props.food.itemName)), React.createElement(Col, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}), React.createElement(Col, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}), React.createElement(Button, {\n  onClick: () => {\n    props.toggleItems(props.food._id, props.food.itemAmount, props.food.itemName, props.food.status);\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, \"X\"), React.createElement(Col, {\n  xs: \"1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n})));\n\nconst ShoppingHist = props =>\n/*  <tr>\r\n  <td>\r\n    <Link to = {\"/user-item/\"+ props.food._id}>{props.food.foodName}</Link>\r\n    </td>\r\n    <td>{props.food.expirationDate}</td>\r\n    <td>{props.food.calories}</td>\r\n    <td>{props.food.numOfItems}</td>\r\n    <td>\r\n      <Link to={\"/edit/\" + props.food._id}>edit</Link> |{\" \"}\r\n      <a\r\n        href=\"/create\"\r\n        onClick={() => {\r\n          props.deleteItems(props.food._id);\r\n        }}\r\n      >\r\n        delete\r\n      </a>\r\n    </td>\r\n  </tr>*/\nReact.createElement(Button, {\n  className: \"invBar\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}, React.createElement(Row, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}, React.createElement(Col, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, props.food.itemName)), React.createElement(Col, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}), React.createElement(Col, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}), React.createElement(Button, {\n  onClick: () => {\n    props.toggleItems(props.food._id, props.food.itemAmount, props.food.itemName, props.food.status);\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, \"Add to List\"), React.createElement(Col, {\n  xs: \"1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n})));\n\nexport default class ShoppingList extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeItemName = this.onChangeItemName.bind(this);\n    this.onChangeItemAmount = this.onChangeItemAmount.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleItems = this.toggleItems.bind(this);\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    this.state = {\n      shopdata: [],\n      check: 1,\n      username: params.id,\n      password: params.password,\n      newItemName: \"\",\n      newItemAmount: \"\",\n      removedItem: {}\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/shoppinglist/\").then(response => {\n      this.setState({\n        shopdata: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  toggleItems(id, itemAmount, itemName, status) {\n    var stat;\n\n    if (status == \"past\") {\n      stat = \"current\";\n    } else {\n      stat = \"past\";\n    }\n\n    const removed = {\n      itemName: itemName,\n      status: stat,\n      creator: this.state.username\n    };\n    axios.post(\"http://localhost:8080/shoppinglist/update/\" + id, removed).then(res => {\n      console.log(res.data);\n      window.location.reload();\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  onChangeItemName(e) {\n    this.setState({\n      newItemName: e.target.value\n    });\n  }\n\n  onChangeItemAmount(e) {\n    this.setState({\n      newItemAmount: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const item = {\n      itemName: this.state.newItemName,\n      creator: this.state.username,\n      status: \"current\"\n    };\n    console.log(item);\n    axios.post(\"http://localhost:8080/shoppinglist/add\", item).then(res => console.log(res.data));\n  }\n\n  shopList() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    return this.state.shopdata.map(currentfood => {\n      if (currentfood.creator === params.id && currentfood.status == \"current\") {\n        return React.createElement(Shoppingdata, {\n          food: currentfood,\n          toggleItems: this.toggleItems,\n          key: currentfood._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        });\n      }\n\n      return null;\n    });\n  }\n\n  shopHist() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    return this.state.shopdata.map(currentfood => {\n      if (currentfood.creator === params.id && currentfood.status == \"past\") {\n        return React.createElement(ShoppingHist, {\n          food: currentfood,\n          toggleItems: this.toggleItems,\n          key: currentfood._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        });\n      }\n\n      return null;\n    });\n  }\n  /*\r\n    inventory() {\r\n      const { match: { params } } = this.props;\r\n      return this.state.fooddata.map(currentfood => {\r\n        if (currentfood.creator === params.id) {\r\n          return (\r\n            <Fooddata\r\n              food={currentfood}\r\n              deleteItems={this.deleteItems}\r\n              key={currentfood._id}\r\n            />\r\n          );\r\n        }\r\n        return (null);\r\n      });\r\n    }\r\n  */\n\n\n  render() {\n    return (\n      /*\r\n      * Shopping List Pulls info and displays as buttons\r\n      * should be able to see main list and sublist at the bottom\r\n      * need main user and sub users id\r\n      *\r\n      * needs to grab date when list is clear and send to shopping history\r\n      *\r\n      * scan to match list with what was bought and populate with values\r\n      * bring up things not grabbed by scan but on shopping list\r\n      */\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(TopBar, {\n        username: this.state.username,\n        password: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }), \" \", React.createElement(\"div\", {\n        className: \"midCon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Shopping List\")), React.createElement(Form, {\n        justified: true,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        required: true,\n        style: {\n          width: '60vw'\n        },\n        placeholder: \"New Item Name\",\n        value: this.state.newItemName,\n        onChange: this.onChangeItemName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }), React.createElement(Input, {\n        type: \"submit\",\n        style: {\n          width: '30vw'\n        },\n        value: \"Add\",\n        className: \"btn btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      })))), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"Current Items\"), React.createElement(\"div\", {\n        className: \"listItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, this.shopList()), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Past Shopping Items\"), React.createElement(\"div\", {\n        className: \"listItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, this.shopHist())), React.createElement(Navi, {\n        username: this.state.username,\n        password: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }))\n    );\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Antwong/Desktop/csc648-03-sp20-team102/application/team102/UI/src/Component/ShoppingList.js"],"names":["React","Component","Button","Row","Col","Input","NavLink","Form","FormGroup","Navi","TopBar","axios","Shoppingdata","props","food","itemName","toggleItems","_id","itemAmount","status","ShoppingHist","ShoppingList","constructor","onChangeItemName","bind","onChangeItemAmount","onSubmit","match","params","state","shopdata","check","username","id","password","newItemName","newItemAmount","removedItem","componentDidMount","get","then","response","setState","data","catch","error","console","log","stat","removed","creator","post","res","window","location","reload","e","target","value","preventDefault","item","shopList","map","currentfood","shopHist","render","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Row, Col, Input, NavLink,Form,FormGroup } from 'reactstrap';\r\nimport Navi from \"./Navigation\";\r\nimport TopBar from \"./TopBar\";\r\nimport \"./inv.css\";\r\nimport plusbtn from \"./plus.svg\"\r\nimport axios from \"axios\";\r\nconst Shoppingdata = props => (\r\n  /*  <tr>\r\n    <td>\r\n      <Link to = {\"/user-item/\"+ props.food._id}>{props.food.foodName}</Link>\r\n      </td>\r\n      <td>{props.food.expirationDate}</td>\r\n      <td>{props.food.calories}</td>\r\n      <td>{props.food.numOfItems}</td>\r\n      <td>\r\n        <Link to={\"/edit/\" + props.food._id}>edit</Link> |{\" \"}\r\n        <a\r\n          href=\"/create\"\r\n          onClick={() => {\r\n            props.deleteItems(props.food._id);\r\n          }}\r\n        >\r\n          delete\r\n        </a>\r\n      </td>\r\n    </tr>*/\r\n  <Button className=\"invBar\" ><Row>\r\n    <Col><p>{props.food.itemName}</p></Col><Col></Col><Col></Col><Button onClick={() => { props.toggleItems(props.food._id,props.food.itemAmount,props.food.itemName,props.food.status); }}>X</Button><Col xs='1' />\r\n  </Row></Button>\r\n\r\n);\r\n\r\nconst ShoppingHist = props => (\r\n  /*  <tr>\r\n    <td>\r\n      <Link to = {\"/user-item/\"+ props.food._id}>{props.food.foodName}</Link>\r\n      </td>\r\n      <td>{props.food.expirationDate}</td>\r\n      <td>{props.food.calories}</td>\r\n      <td>{props.food.numOfItems}</td>\r\n      <td>\r\n        <Link to={\"/edit/\" + props.food._id}>edit</Link> |{\" \"}\r\n        <a\r\n          href=\"/create\"\r\n          onClick={() => {\r\n            props.deleteItems(props.food._id);\r\n          }}\r\n        >\r\n          delete\r\n        </a>\r\n      </td>\r\n    </tr>*/\r\n  <Button className=\"invBar\" ><Row>\r\n    <Col><p>{props.food.itemName}</p></Col><Col></Col><Col></Col><Button onClick={() => { props.toggleItems(props.food._id,props.food.itemAmount,props.food.itemName,props.food.status); }}>Add to List</Button><Col xs='1' />\r\n  </Row></Button>\r\n\r\n);\r\n\r\nexport default class ShoppingList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeItemName = this.onChangeItemName.bind(this);\r\n    this.onChangeItemAmount = this.onChangeItemAmount.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.toggleItems = this.toggleItems.bind(this);\r\n    const { match: { params } } = this.props;\r\n    this.state = {\r\n      shopdata: [],\r\n      check:1,\r\n      username: params.id,\r\n      password: params.password,\r\n      newItemName:\"\",\r\n      newItemAmount:\"\",\r\n      removedItem:{}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:8080/shoppinglist/\")\r\n      .then(response => {\r\n        this.setState({ shopdata: response.data });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  toggleItems(id,itemAmount,itemName,status) {\r\n    var stat;\r\n    if(status==\"past\"){\r\n      stat=\"current\"\r\n    }else{\r\n      stat=\"past\"\r\n    }\r\n\r\n    const removed ={\r\n      itemName: itemName,\r\n\r\n      status: stat,\r\n      creator:this.state.username\r\n    }\r\n\r\n    axios\r\n      .post(\"http://localhost:8080/shoppinglist/update/\" + id,removed)\r\n      .then(res => {\r\n        console.log(res.data)\r\n        window.location.reload()\r\n        }\r\n    )\r\n\r\n\r\n      .catch(error => {\r\n      console.log(error);\r\n    });\r\n\r\n\r\n  }\r\n  onChangeItemName(e){\r\n    this.setState({\r\n      newItemName:e.target.value\r\n    })\r\n  }\r\n  onChangeItemAmount(e){\r\n    this.setState({\r\n      newItemAmount:e.target.value\r\n    })\r\n  }\r\n  onSubmit(e){\r\n    e.preventDefault();\r\n\r\n\r\n\r\n    const item = {\r\n      itemName:this.state.newItemName,\r\n\r\n      creator:this.state.username,\r\n      status:\"current\"\r\n    }\r\n    console.log(item)\r\n    axios\r\n      .post(\"http://localhost:8080/shoppinglist/add\", item)\r\n      .then(res => console.log(res.data));\r\n\r\n  }\r\n\r\n  shopList() {\r\n    const { match: { params } } = this.props;\r\n    return this.state.shopdata.map(currentfood => {\r\n      if (currentfood.creator === params.id && currentfood.status == \"current\") {\r\n        return (\r\n          <Shoppingdata\r\n            food={currentfood}\r\n            toggleItems={this.toggleItems}\r\n            key={currentfood._id}\r\n          />\r\n        );\r\n      }\r\n      return (null);\r\n    });\r\n  }\r\n\r\n  shopHist() {\r\n    const { match: { params } } = this.props;\r\n    return this.state.shopdata.map(currentfood => {\r\n      if (currentfood.creator === params.id && currentfood.status == \"past\") {\r\n        return (\r\n          <ShoppingHist\r\n            food={currentfood}\r\n            toggleItems={this.toggleItems}\r\n            key={currentfood._id}\r\n          />\r\n        );\r\n      }\r\n      return (null);\r\n    });\r\n  }\r\n/*\r\n  inventory() {\r\n    const { match: { params } } = this.props;\r\n    return this.state.fooddata.map(currentfood => {\r\n      if (currentfood.creator === params.id) {\r\n        return (\r\n          <Fooddata\r\n            food={currentfood}\r\n            deleteItems={this.deleteItems}\r\n            key={currentfood._id}\r\n          />\r\n        );\r\n      }\r\n      return (null);\r\n    });\r\n  }\r\n*/\r\n  render() {\r\n    return (\r\n      /*\r\n      * Shopping List Pulls info and displays as buttons\r\n      * should be able to see main list and sublist at the bottom\r\n      * need main user and sub users id\r\n      *\r\n      * needs to grab date when list is clear and send to shopping history\r\n      *\r\n      * scan to match list with what was bought and populate with values\r\n      * bring up things not grabbed by scan but on shopping list\r\n      */\r\n      <div><TopBar username={this.state.username} password={this.state.password} /><br /><br /><br /> <div className=\"midCon\">\r\n        <div><h1>Shopping List</h1></div>\r\n\r\n        <Form justified onSubmit={this.onSubmit}>\r\n        <FormGroup >\r\n          <Row>\r\n          <Input\r\n            type=\"text\"\r\n            required\r\n            style={{ width: '60vw' }}\r\n            placeholder=\"New Item Name\"\r\n            value={this.state.newItemName}\r\n            onChange={this.onChangeItemName} />\r\n\r\n          <Input\r\n          type=\"submit\"\r\n          style={{ width: '30vw' }}\r\n          value=\"Add\"\r\n          className=\"btn btn-secondary\"\r\n        /></Row></FormGroup></Form>\r\n\r\n        <h3>Current Items</h3>\r\n        <div className=\"listItem\">\r\n          {this.shopList()}\r\n        </div>\r\n        < h3>Past Shopping Items</h3>\r\n        <div className=\"listItem\">\r\n          {this.shopHist()}\r\n        </div>\r\n      </div>\r\n        <Navi username={this.state.username} password={this.state.password} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}