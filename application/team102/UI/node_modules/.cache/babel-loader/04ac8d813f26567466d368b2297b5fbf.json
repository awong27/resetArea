{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antwong\\\\Desktop\\\\csc648-03-sp20-team102\\\\application\\\\team102\\\\UI\\\\src\\\\Component\\\\RecipeData.js\";\nimport React, { useState } from 'react';\nimport { Row, Col, Button, ButtonGroup, Collapse, Card, CardImg, CardText, CardTitle, CardImgOverlay, Modal, ModalHeader, ModalBody, ModalFooter, CardBody } from 'reactstrap';\nimport \"./boxTabs.css\"; //grabs recipe information\n//displays as a rectangular picture with overlay text\n//when clicked with have a pop up with more info\n\nconst RecipeData = props => {\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const [pop, setPop] = useState(false);\n\n  const toggle2 = () => setPop(!pop);\n\n  return React.createElement(Card, {\n    className: \"bigdes\",\n    body: true,\n    inverse: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(CardImg, {\n    alt: \"recipeItem\",\n    src: props.food.recipeImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, props.food.recipeName)), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Calories: \", Math.round(props.food.recipeCalories)), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Carbs: \", Math.round(props.food.recipeCarbs), \" g\"), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Protein: \", Math.round(props.food.recipeProtein), \" g\"), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Fat: \", Math.round(props.food.recipeFat), \" g\"), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Sugar: \", Math.round(props.food.recipeSugar), \" g\"), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Sodium: \", Math.round(props.food.recipeSodium), \" mg\")), React.createElement(\"img\", {\n    alt: props.food.recipeName,\n    src: props.food.recipeImage,\n    height: \"35%\",\n    width: \"50%\",\n    style: {\n      borderRadius: \"30px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(Row, {\n    style: {\n      boxShadow: \"0px -2px rgba(36, 177, 153, 0.514)\",\n      height: \"7.5px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Ingredients\"), props.food.ingredients.map(item => {\n    return React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, item);\n  })), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    className: \"itemOptbtn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {\n      props.addRecipe(props.food);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Save\")), React.createElement(Button, {\n    onClick: toggle2,\n    style: {\n      paddingTo: \"5px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Add to Meal Plan\"), React.createElement(Collapse, {\n    isOpen: pop,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    addItems: (props.food, 'Sunday'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Sunday\"), React.createElement(CardBody, {\n    addItems: (props.food, 'Monday'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Monday\"), React.createElement(CardBody, {\n    addItems: (props.food, 'Tuesday'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Tuesday\"), React.createElement(CardBody, {\n    addItems: (props.food, 'Wednesday'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Wednesday\"), React.createElement(CardBody, {\n    addItems: (props.food, 'Thursday'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Thursday\"), React.createElement(CardBody, {\n    addItems: (props.food, 'Friday'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Friday\"), React.createElement(CardBody, {\n    addItems: (props.food, 'Saturday'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Saturday\"))))))), React.createElement(CardImgOverlay, {\n    onClick: toggle,\n    style: {\n      backgroundColor: \"rgba(0, 0, 0, 0.375)\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(CardTitle, {\n    position: \"fixed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, props.food.recipeName)), React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Calories: \", props.food.recipeCalories > 0 ? Math.round(props.food.recipeCalories) : 0)));\n};\n\nexport default RecipeData;","map":{"version":3,"sources":["C:/Users/Antwong/Desktop/csc648-03-sp20-team102/application/team102/UI/src/Component/RecipeData.js"],"names":["React","useState","Row","Col","Button","ButtonGroup","Collapse","Card","CardImg","CardText","CardTitle","CardImgOverlay","Modal","ModalHeader","ModalBody","ModalFooter","CardBody","RecipeData","props","className","modal","setModal","toggle","pop","setPop","toggle2","food","recipeImage","recipeName","Math","round","recipeCalories","recipeCarbs","recipeProtein","recipeFat","recipeSugar","recipeSodium","borderRadius","boxShadow","height","ingredients","map","item","addRecipe","paddingTo","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\r\nimport {\r\n    Row, Col, Button, ButtonGroup, Collapse,\r\n    Card, CardImg, CardText, CardTitle, CardImgOverlay,\r\n    Modal, ModalHeader, ModalBody, ModalFooter, CardBody,\r\n} from 'reactstrap';\r\n\r\nimport \"./boxTabs.css\"\r\n//grabs recipe information\r\n//displays as a rectangular picture with overlay text\r\n//when clicked with have a pop up with more info\r\nconst RecipeData = props => {\r\n    const { className } = props;\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    const [pop, setPop] = useState(false);\r\n    const toggle2 = () => setPop(!pop);\r\n    return (\r\n        <Card className=\"bigdes\" body inverse={true}>\r\n            <CardImg alt=\"recipeItem\" src={props.food.recipeImage} />\r\n            <Modal isOpen={modal} toggle={toggle} className={className}>\r\n                <ModalHeader toggle={toggle}><h3>{props.food.recipeName}</h3></ModalHeader>\r\n                <ModalBody>\r\n                    <Row>\r\n                        <Col>\r\n                            <h5>Calories: {Math.round(props.food.recipeCalories)}</h5>\r\n                            <h5>Carbs: {Math.round(props.food.recipeCarbs)} g</h5>\r\n                            <h5>Protein: {Math.round(props.food.recipeProtein)} g</h5>\r\n                            <h5>Fat: {Math.round(props.food.recipeFat)} g</h5>\r\n                            <h5>Sugar: {Math.round(props.food.recipeSugar)} g</h5>\r\n                            <h5>Sodium: {Math.round(props.food.recipeSodium)} mg</h5>\r\n                        </Col>\r\n                        <img alt={props.food.recipeName} src={props.food.recipeImage} height=\"35%\" width=\"50%\" style={{ borderRadius: \"30px\" }} />\r\n                    </Row>                    \r\n                    <Row style={{boxShadow: \"0px -2px rgba(36, 177, 153, 0.514)\", height: \"7.5px\"}}/>\r\n                    <h3>Ingredients</h3>\r\n                    {props.food.ingredients.map(item => { return (<h5>{item}</h5>); })}\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <ButtonGroup className=\"itemOptbtn\">\r\n                        <Button onClick={() => {props.addRecipe(props.food);}}>\r\n                            <CardText>Save</CardText>\r\n                        </Button>                        \r\n                        <Button onClick={toggle2} style={{ paddingTo:\"5px\" }}>\r\n                            <CardText>Add to Meal Plan</CardText>\r\n                            <Collapse isOpen={pop}>\r\n                                <Card>\r\n                                    <CardBody addItems={props.food, 'Sunday'}>Sunday</CardBody>\r\n                                    <CardBody addItems={props.food, 'Monday'}>Monday</CardBody>\r\n                                    <CardBody addItems={props.food, 'Tuesday'}>Tuesday</CardBody>\r\n                                    <CardBody addItems={props.food, 'Wednesday'}>Wednesday</CardBody>\r\n                                    <CardBody addItems={props.food, 'Thursday'}>Thursday</CardBody>\r\n                                    <CardBody addItems={props.food, 'Friday'}>Friday</CardBody>\r\n                                    <CardBody addItems={props.food, 'Saturday'}>Saturday</CardBody>\r\n                                </Card>\r\n                            </Collapse>\r\n                        </Button>\r\n                        \r\n                    </ButtonGroup>\r\n                </ModalFooter>\r\n            </Modal>\r\n            <CardImgOverlay onClick={toggle} style={{ backgroundColor: \"rgba(0, 0, 0, 0.375)\" }}>\r\n                <CardTitle position='fixed'><h4>{props.food.recipeName}</h4></CardTitle>\r\n                <CardText>Calories: {props.food.recipeCalories > 0 ? Math.round(props.food.recipeCalories) : 0}</CardText>\r\n            </CardImgOverlay>\r\n        </Card>\r\n    );\r\n}\r\nexport default RecipeData;"]},"metadata":{},"sourceType":"module"}