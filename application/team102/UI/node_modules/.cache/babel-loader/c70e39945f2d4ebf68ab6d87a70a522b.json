{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antwong\\\\Desktop\\\\csc648-03-sp20-team102\\\\application\\\\team102\\\\UI\\\\src\\\\Component\\\\create-fooddata.component.js\";\nimport React, { Component } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport MediaHandler from './MediaHandler';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"axios\";\nimport cam from \"./cameraIcon.svg\";\nimport Scan from \"./Scan.js\";\nimport { FormGroup, Label, Form, Input, Button, ButtonGroup, Row, Col } from \"reactstrap\";\nconst gatewayUrl = process.env.gatewayUrl || 'http://localhost:3004';\nexport default class Create extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    this.onChangeFoodname = this.onChangeFoodname.bind(this);\n    this.onChangeExpirationdate = this.onChangeExpirationdate.bind(this);\n    this.onChangeCalories = this.onChangeCalories.bind(this);\n    this.onChangeCarbs = this.onChangeCarbs.bind(this);\n    this.onChangeNumberOfItems = this.onChangeNumberOfItems.bind(this);\n    this.onChangeSugar = this.onChangeSugar.bind(this);\n    this.onChangeFat = this.onChangeFat.bind(this);\n    this.onChangeProtein = this.onChangeProtein.bind(this);\n    this.onFoods = this.onFoods.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.mediaHandler = new MediaHandler();\n    this.state = {\n      foodname: \"\",\n      expirationdate: new Date(),\n      calories: \"\",\n      numberOfItems: \"1\",\n      carbs: \"\",\n      sugar: \"\",\n      fat: \"\",\n      protein: \"\",\n      sodium: \"\",\n      foods: [],\n      userdata: [],\n      addList: [],\n      password: params.password,\n      username: params.id,\n      count: 0,\n      hasMedia: false,\n      imageString: \"\",\n      rawData: [],\n      pop: false,\n      show: false\n    };\n  } // change activations for prop states\n\n\n  onPop() {\n    this.setState({\n      pop: !this.state.pop\n    });\n  }\n\n  onChangeFoodname(e) {\n    this.setState({\n      foodname: e.target.value\n    });\n  }\n\n  onChangeExpirationdate(date) {\n    this.setState({\n      expirationdate: (date.getMonth() + 1).toString() + \"/\" + date.getDate().toString() + \"/\" + date.getFullYear().toString()\n    });\n  }\n\n  onChangeCalories(e) {\n    this.setState({\n      calories: e\n    });\n  }\n\n  onChangeNumberOfItems(e) {\n    this.setState({\n      numberOfItems: e.target.value\n    });\n  }\n\n  onChangeCarbs(e) {\n    this.setState({\n      carbs: e\n    });\n  }\n\n  onChangeSugar(e) {\n    this.setState({\n      sugar: e\n    });\n  }\n\n  onChangeFat(e) {\n    this.setState({\n      fat: e\n    });\n  }\n\n  onChangeProtein(e) {\n    this.setState({\n      protein: e\n    });\n  }\n\n  onChangeSodium(e) {\n    this.setState({\n      sodium: e\n    });\n  }\n\n  onFoods(e) {\n    this.setState({\n      foods: e\n    });\n  }\n\n  toInv() {\n    // only things passed to the final list is allowed\n    this.state.addList.map(item => {\n      axios\n      /* Searches food name param in Api returns all types matching\r\n       * foods -> array going to be loaded with first result info\r\n       * has all nutrition facts\r\n       */\n      .get(\"https://api.nal.usda.gov/fdc/v1/foods/search?api_key=ldLF1ky8NkwmcLnTDvqDoSjul1eanGZ1o6vZ2Q9u&query=\" + this.state.foodname).then(response => {\n        console.log(response.data.foods[0].foodNutrients[0]);\n        this.setState({\n          foods: response.data.foods[0].foodNutrients\n        });\n        /* Searches array for matching nutrient name, only exact\r\n         * calls funct to change value once found\r\n         */\n\n        this.state.foods.map(currentfood => {\n          console.log(currentfood.nutrientName, currentfood.value);\n          console.log(currentfood.value);\n\n          if (currentfood.nutrientName === 'Energy') {\n            this.onChangeCalories(Math.round(currentfood.value));\n          } else if (currentfood.nutrientName === 'Carbohydrate, by difference') {\n            this.onChangeCarbs(Math.round(currentfood.value));\n          } else if (currentfood.nutrientName === 'Total lipid (fat)') {\n            this.onChangeFat(Math.round(currentfood.value));\n          } else if (currentfood.nutrientName === 'Protein') {\n            this.onChangeProtein(Math.round(currentfood.value));\n          } else if (currentfood.nutrientName === 'Sugars, total including NLEA') {\n            this.onChangeSugar(Math.round(currentfood.value));\n          } else if (currentfood.nutrientName === 'Sodium, Na') {\n            this.onChangeSodium(Math.round(currentfood.value));\n          }\n\n          return null;\n        });\n        /* adds all values into a temp list\r\n         * sends to backend to be added to personal id food list\r\n         */\n\n        const food = {\n          foodName: item.foodname,\n          expirationDate: item.expdate,\n          calories: this.state.calories,\n          numOfItems: item.qty,\n          carbs: this.state.carbs,\n          protein: this.state.protein,\n          fat: this.state.fat,\n          sugar: this.state.sugar,\n          sodium: this.state.sodium,\n          creator: this.state.username\n        };\n        console.log(food);\n        axios.post(\"/fooddata/add\", food).then(res => console.log(res.data));\n      }).catch(error => {\n        console.log(error);\n      });\n    });\n    this.setState({\n      addList: []\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault(); //const date = (this.state.expirationdate.getMonth() + 1).toString() + \"/\" + (this.state.expirationdate.getDate()).toString() + \"/\" + (this.state.expirationdate.getFullYear()).toString();\n    //var list = this.state.addList.concat(this.state.foodname + \" \" + date+\" \"+ this.state.numberOfItems);\n    //console.log(this.state.expirationdate);\n\n    var list = {\n      foodname: \"\",\n      expdate: new Date(),\n      qty: \"1\"\n    };\n    list.foodname = this.state.foodname;\n    list.expdate = this.state.expirationdate;\n    list.qty = this.state.numberOfItems;\n    console.log(list);\n    let newList = this.state.addList;\n    newList.push(list);\n    this.setState({\n      addList: newList\n    });\n  }\n\n  AddList() {\n    //\n    return this.state.addList.map(item => {\n      return React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, item.foodname), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, (item.expdate.getMonth() + 1).toString() + \"/\" + item.expdate.getDate().toString() + \"/\" + item.expdate.getFullYear().toString()), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, item.qty));\n    });\n  }\n  /*\r\n  componentDidMount() {\r\n    this.mediaHandler.getPermissions()\r\n      .then((stream) => {\r\n        this.setState({ hasMedia: true });\r\n        try {\r\n          this.myVideo.srcObject = stream;\r\n        } catch (e) {\r\n          this.myVideo.src = URL.createObjectURL(stream);\r\n        }\r\n        this.myVideo.play();\r\n      })\r\n  }\r\n  captureImage = () => { // takes picture\r\n    console.log('inside captureImage function')\r\n    const context = this.canvas.getContext('2d');\r\n    context.drawImage(this.myVideo, 0, 0, 400, 350);\r\n    const image = this.canvas.toDataURL('image/jpeg', 0.5);\r\n    this.setState({ imageString: image });\r\n    this.processImage();\r\n  }\r\n  processImage = () => { // sends and grabs data\r\n    console.log('inside processImage function')\r\n    const url = 'http://localhost:3010/api/image/save';\r\n    const img = this.state.imageString;\r\n    if (img !== \"\") {\r\n      let formData = new FormData();\r\n      formData.set('file', img);\r\n      axios.post(url, formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' }\r\n      }).then((res) => {\r\n        console.log(res.data);\r\n        this.setState({ rawData: res.data });\r\n        this.processData();\r\n      }).catch((e) => {\r\n        console.log(e)\r\n      });\r\n    }\r\n  }\r\n  processData = () => {// returns a array with description and qty\r\n    const processedData = [];\r\n    let hashKey = {};\r\n    this.state.rawData.forEach((item) => {\r\n      if (hashKey.hasOwnProperty(item)) {\r\n        hashKey[item] += 1;\r\n      } else {\r\n        hashKey[item] = 1;\r\n      }\r\n    });\r\n    Object.keys(hashKey).forEach((k) => {\r\n      let newItem = { description: \"\", quantity: 0 };\r\n      newItem.description = k;\r\n      newItem.quantity = hashKey[k];\r\n      processedData.push({ newItem });\r\n      /*processedData.push({\r\n        description: k,\r\n        quantity: hashKey[k]\r\n      })\r\n    })\r\n    console.log(hashKey);\r\n    console.log(processedData);\r\n    this.setState({ foods: processedData });\r\n  }\r\n  scan() { // shows scanner pop up\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"video-container\">\r\n          <video className=\"video\" width=\"400\" height=\"350\" ref={(ref) => { this.myVideo = ref; }}></video>\r\n        </div>\r\n        <Button id=\"capture\" onClick={this.captureImage}>Scan</Button>\r\n        <Button onClick={() => this.setState({show: !this.state.show})} >Back</Button>\r\n        <div className=\"image-container\">\r\n          <canvas ref={(canvas) => { this.canvas = canvas }} width='400' height='350' ></canvas>\r\n        </div>\r\n      </div>\r\n    );\r\n  }*/\n\n\n  onScan() {\n    // scanned submit form, name and qty should be filled in, expdate required\n    return this.state.foods.map(newI => {\n      return React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.foodname,\n        selected: newI.description,\n        onChange: this.onChangeFoodname,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"ExpDate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Exp. Date:\"), React.createElement(DatePicker, {\n        required: true,\n        selected: this.state.expirationdate,\n        onChange: this.onChangeExpirationdate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"qty\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Quantity:\"), React.createElement(Input, {\n        type: \"select\",\n        style: {\n          height: 'auto',\n          width: 'auto'\n        },\n        value: this.state.numberOfItems,\n        selected: newI.quantity,\n        onChange: this.onChangeNumberOfItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"1\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"2\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"3\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"3\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, \"5\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"6\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"7\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"8\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"9\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"10\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"11\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"12\"))))), React.createElement(Button, {\n        size: \"lg\",\n        style: {\n          position: \"fixed\",\n          bottom: \"0\",\n          right: \"0\"\n        },\n        className: \"form-control input\",\n        type: \"submit\",\n        value: \"Create food\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \" Check \"));\n    });\n  }\n\n  manualSubmit() {\n    return React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"foodName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"Food Name:\"), React.createElement(Input, {\n      type: \"text\",\n      required: true,\n      placeholder: \"What Food Are You Looking For?\",\n      className: \"form-control\",\n      value: this.state.foodname,\n      onChange: this.onChangeFoodname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"ExpDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"Exp. Date:\"), React.createElement(DatePicker, {\n      required: true,\n      selected: this.state.expirationdate,\n      onChange: this.onChangeExpirationdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    })), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"qty\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"Quantity:\"), React.createElement(Input, {\n      type: \"select\",\n      style: {\n        height: 'auto',\n        width: 'auto'\n      },\n      value: this.state.numberOfItems,\n      onChange: this.onChangeNumberOfItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"1\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"2\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"3\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"5\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"6\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"7\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"8\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"9\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"10\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"11\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"12\"))))), React.createElement(Button, {\n      size: \"lg\",\n      style: {\n        position: \"fixed\",\n        bottom: \"0\",\n        right: \"0\"\n      },\n      className: \"form-control input\",\n      type: \"submit\",\n      value: \"Create food\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, \" Add Item \"));\n  }\n\n  render() {\n    var inv = \"/inventory/\" + this.state.username + \"/\" + this.state.password;\n    return React.createElement(\"div\", {\n      style: {\n        width: '90vw'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, this.state.pop === true ? this.onScan() : \"\", this.state.show === true ? React.createElement(Scan, {\n      onFoods: this.onFoods,\n      onPop: this.onPop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }) : this.manualSubmit(), React.createElement(ButtonGroup, {\n      size: \"lg\",\n      style: {\n        boxSizing: 'content-box',\n        position: \"fixed\",\n        right: \"0\",\n        top: \"0\",\n        display: \"flex\",\n        minWidth: \"100vw\",\n        minHeight: \"54px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(Button, {\n      href: inv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, \"Back\"), React.createElement(Button, {\n      onClick: () => this.toInv(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \" + Inventory\"), React.createElement(Button, {\n      onClick: () => this.setState({\n        show: !this.state.show\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      alt: \"camera\",\n      src: cam,\n      className: \"nav-pic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        top: \"300px\",\n        height: \"100%\",\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, this.AddList()));\n  }\n\n}\n/**\r\n *{this.AddList()} className=\"SignSpace\"\r\n *\r\n */","map":{"version":3,"sources":["C:/Users/Antwong/Desktop/csc648-03-sp20-team102/application/team102/UI/src/Component/create-fooddata.component.js"],"names":["React","Component","DatePicker","MediaHandler","axios","Scan","FormGroup","Label","Form","Input","Button","ButtonGroup","Row","Col","gatewayUrl","process","env","Create","constructor","props","match","params","onChangeFoodname","bind","onChangeExpirationdate","onChangeCalories","onChangeCarbs","onChangeNumberOfItems","onChangeSugar","onChangeFat","onChangeProtein","onFoods","onSubmit","mediaHandler","state","foodname","expirationdate","Date","calories","numberOfItems","carbs","sugar","fat","protein","sodium","foods","userdata","addList","password","username","id","count","hasMedia","imageString","rawData","pop","show","onPop","setState","e","target","value","date","getMonth","toString","getDate","getFullYear","onChangeSodium","toInv","map","item","get","then","response","console","log","data","foodNutrients","currentfood","nutrientName","Math","round","food","foodName","expirationDate","expdate","numOfItems","qty","creator","post","res","catch","error","preventDefault","list","newList","push","AddList","onScan","newI","description","height","width","quantity","position","bottom","right","manualSubmit","render","inv","boxSizing","top","display","minWidth","minHeight","cam"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport MediaHandler from './MediaHandler';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from \"axios\";\r\nimport cam from \"./cameraIcon.svg\"\r\nimport Scan from \"./Scan.js\"\r\nimport { FormGroup, Label, Form, Input, Button, ButtonGroup, Row, Col } from \"reactstrap\";\r\nconst gatewayUrl = process.env.gatewayUrl || 'http://localhost:3004';\r\n\r\nexport default class Create extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { match: { params } } = this.props;\r\n    this.onChangeFoodname = this.onChangeFoodname.bind(this);\r\n    this.onChangeExpirationdate = this.onChangeExpirationdate.bind(this);\r\n    this.onChangeCalories = this.onChangeCalories.bind(this);\r\n    this.onChangeCarbs = this.onChangeCarbs.bind(this);\r\n    this.onChangeNumberOfItems = this.onChangeNumberOfItems.bind(this);\r\n    this.onChangeSugar = this.onChangeSugar.bind(this);\r\n    this.onChangeFat = this.onChangeFat.bind(this);\r\n    this.onChangeProtein = this.onChangeProtein.bind(this);\r\n    this.onFoods = this.onFoods.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.mediaHandler = new MediaHandler();\r\n    this.state = {\r\n      foodname: \"\",\r\n      expirationdate: new Date(),\r\n      calories: \"\",\r\n      numberOfItems: \"1\",\r\n      carbs: \"\",\r\n      sugar: \"\",\r\n      fat: \"\",\r\n      protein: \"\",\r\n      sodium: \"\",\r\n      foods: [],\r\n      userdata: [],\r\n      addList: [],\r\n      password: params.password,\r\n      username: params.id,\r\n      count: 0,\r\n      hasMedia: false,\r\n      imageString: \"\",\r\n      rawData: [],\r\n      pop: false,\r\n      show: false,\r\n    };\r\n  }\r\n  // change activations for prop states\r\n  onPop() { this.setState({ pop: !this.state.pop }) }\r\n  onChangeFoodname(e) { this.setState({ foodname: e.target.value }); }\r\n  onChangeExpirationdate(date) { this.setState({ expirationdate: (date.getMonth() + 1).toString() + \"/\" + (date.getDate()).toString() + \"/\" + (date.getFullYear()).toString() }); }\r\n  onChangeCalories(e) { this.setState({ calories: e }); }\r\n  onChangeNumberOfItems(e) { this.setState({ numberOfItems: e.target.value }); }\r\n  onChangeCarbs(e) { this.setState({ carbs: e }); }\r\n  onChangeSugar(e) { this.setState({ sugar: e }); }\r\n  onChangeFat(e) { this.setState({ fat: e }); }\r\n  onChangeProtein(e) { this.setState({ protein: e }); }\r\n  onChangeSodium(e) { this.setState({ sodium: e }); }\r\n  onFoods(e) { this.setState({ foods: e }) }\r\n  toInv() { // only things passed to the final list is allowed\r\n    this.state.addList.map(item => {\r\n      axios\r\n        /* Searches food name param in Api returns all types matching\r\n         * foods -> array going to be loaded with first result info\r\n         * has all nutrition facts\r\n         */\r\n        .get(\"https://api.nal.usda.gov/fdc/v1/foods/search?api_key=ldLF1ky8NkwmcLnTDvqDoSjul1eanGZ1o6vZ2Q9u&query=\" + this.state.foodname)\r\n        .then(response => {\r\n          console.log(response.data.foods[0].foodNutrients[0]);\r\n          this.setState({\r\n            foods: response.data.foods[0].foodNutrients\r\n          });\r\n          /* Searches array for matching nutrient name, only exact\r\n           * calls funct to change value once found\r\n           */\r\n          this.state.foods.map(currentfood => {\r\n            console.log(currentfood.nutrientName, currentfood.value);\r\n            console.log(currentfood.value);\r\n            if (currentfood.nutrientName === 'Energy') {\r\n              this.onChangeCalories(Math.round(currentfood.value));\r\n            } else if (currentfood.nutrientName === 'Carbohydrate, by difference') {\r\n              this.onChangeCarbs(Math.round(currentfood.value));\r\n            } else if (currentfood.nutrientName === 'Total lipid (fat)') {\r\n              this.onChangeFat(Math.round(currentfood.value));\r\n            } else if (currentfood.nutrientName === 'Protein') {\r\n              this.onChangeProtein(Math.round(currentfood.value));\r\n            } else if (currentfood.nutrientName === 'Sugars, total including NLEA') {\r\n              this.onChangeSugar(Math.round(currentfood.value));\r\n            } else if (currentfood.nutrientName === 'Sodium, Na') {\r\n              this.onChangeSodium(Math.round(currentfood.value));\r\n            } return (null);\r\n          })\r\n          /* adds all values into a temp list\r\n           * sends to backend to be added to personal id food list\r\n           */\r\n          const food = {\r\n            foodName: item.foodname,\r\n            expirationDate: item.expdate,\r\n            calories: this.state.calories,\r\n            numOfItems: item.qty,\r\n            carbs: this.state.carbs,\r\n            protein: this.state.protein,\r\n            fat: this.state.fat,\r\n            sugar: this.state.sugar,\r\n            sodium: this.state.sodium,\r\n            creator:this.state.username\r\n          };\r\n          console.log(food);\r\n          axios\r\n            .post(\"/fooddata/add\", food)\r\n            .then(res => console.log(res.data));\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    })\r\n    this.setState({ addList: [] });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    //const date = (this.state.expirationdate.getMonth() + 1).toString() + \"/\" + (this.state.expirationdate.getDate()).toString() + \"/\" + (this.state.expirationdate.getFullYear()).toString();\r\n    //var list = this.state.addList.concat(this.state.foodname + \" \" + date+\" \"+ this.state.numberOfItems);\r\n    //console.log(this.state.expirationdate);\r\n    var list = { foodname: \"\", expdate: new Date(), qty: \"1\" };\r\n    list.foodname = this.state.foodname;\r\n    list.expdate = this.state.expirationdate;\r\n    list.qty = this.state.numberOfItems;    \r\n    console.log(list);\r\n    let newList = this.state.addList;\r\n    newList.push(list);\r\n    this.setState({ addList: newList });\r\n  }\r\n  AddList() {//\r\n    \r\n    return this.state.addList.map((item) => {\r\n      return (<Row >\r\n        <Col >{item.foodname}</Col>\r\n        <Col>{(item.expdate.getMonth() + 1).toString() + \"/\" + (item.expdate.getDate()).toString() + \"/\" + (item.expdate.getFullYear()).toString()}</Col>\r\n        <Col>{item.qty}</Col>\r\n      </Row>\r\n      )\r\n    }\r\n    )\r\n  }\r\n  /*\r\n  componentDidMount() {\r\n    this.mediaHandler.getPermissions()\r\n      .then((stream) => {\r\n        this.setState({ hasMedia: true });\r\n        try {\r\n          this.myVideo.srcObject = stream;\r\n        } catch (e) {\r\n          this.myVideo.src = URL.createObjectURL(stream);\r\n        }\r\n        this.myVideo.play();\r\n      })\r\n  }\r\n  captureImage = () => { // takes picture\r\n    console.log('inside captureImage function')\r\n    const context = this.canvas.getContext('2d');\r\n    context.drawImage(this.myVideo, 0, 0, 400, 350);\r\n    const image = this.canvas.toDataURL('image/jpeg', 0.5);\r\n    this.setState({ imageString: image });\r\n    this.processImage();\r\n  }\r\n  processImage = () => { // sends and grabs data\r\n    console.log('inside processImage function')\r\n    const url = 'http://localhost:3010/api/image/save';\r\n    const img = this.state.imageString;\r\n    if (img !== \"\") {\r\n      let formData = new FormData();\r\n      formData.set('file', img);\r\n      axios.post(url, formData, {\r\n        headers: { 'Content-Type': 'multipart/form-data' }\r\n      }).then((res) => {\r\n        console.log(res.data);\r\n        this.setState({ rawData: res.data });\r\n        this.processData();\r\n      }).catch((e) => {\r\n        console.log(e)\r\n      });\r\n    }\r\n  }\r\n  processData = () => {// returns a array with description and qty\r\n    const processedData = [];\r\n    let hashKey = {};\r\n    this.state.rawData.forEach((item) => {\r\n      if (hashKey.hasOwnProperty(item)) {\r\n        hashKey[item] += 1;\r\n      } else {\r\n        hashKey[item] = 1;\r\n      }\r\n    });\r\n    Object.keys(hashKey).forEach((k) => {\r\n      let newItem = { description: \"\", quantity: 0 };\r\n      newItem.description = k;\r\n      newItem.quantity = hashKey[k];\r\n      processedData.push({ newItem });\r\n      /*processedData.push({\r\n        description: k,\r\n        quantity: hashKey[k]\r\n      })\r\n    })\r\n    console.log(hashKey);\r\n    console.log(processedData);\r\n    this.setState({ foods: processedData });\r\n  }\r\n  scan() { // shows scanner pop up\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"video-container\">\r\n          <video className=\"video\" width=\"400\" height=\"350\" ref={(ref) => { this.myVideo = ref; }}></video>\r\n        </div>\r\n        <Button id=\"capture\" onClick={this.captureImage}>Scan</Button>\r\n        <Button onClick={() => this.setState({show: !this.state.show})} >Back</Button>\r\n        <div className=\"image-container\">\r\n          <canvas ref={(canvas) => { this.canvas = canvas }} width='400' height='350' ></canvas>\r\n        </div>\r\n      </div>\r\n    );\r\n  }*/\r\n  onScan() { // scanned submit form, name and qty should be filled in, expdate required\r\n    return this.state.foods.map(newI => {\r\n      return (\r\n        <Form onSubmit={this.onSubmit}>\r\n          <FormGroup >\r\n            <Input\r\n              value={this.state.foodname}\r\n              selected={newI.description}\r\n              onChange={this.onChangeFoodname} />\r\n          </FormGroup>\r\n          <Row>\r\n            <Col >\r\n              <FormGroup>\r\n                <Label for=\"ExpDate\">Exp. Date:</Label>\r\n                <DatePicker\r\n                  required\r\n                  selected={this.state.expirationdate}\r\n                  onChange={this.onChangeExpirationdate} />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col >\r\n              <FormGroup>\r\n                <Label for=\"qty\">Quantity:</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  style={{ height: 'auto', width: 'auto' }}\r\n                  value={this.state.numberOfItems}\r\n                  selected={newI.quantity}\r\n                  onChange={this.onChangeNumberOfItems}>\r\n                  <option>1</option>\r\n                  <option>2</option>\r\n                  <option>3</option>\r\n                  <option>3</option>\r\n                  <option>5</option>\r\n                  <option>6</option>\r\n                  <option>7</option>\r\n                  <option>8</option>\r\n                  <option>9</option>\r\n                  <option>10</option>\r\n                  <option>11</option>\r\n                  <option>12</option>\r\n                </Input>\r\n              </FormGroup>\r\n            </Col>\r\n          </Row>\r\n          <Button size='lg' style={{ position: \"fixed\", bottom: \"0\", right: \"0\" }} className=\"form-control input\" type=\"submit\" value=\"Create food\"> Check </Button>\r\n        </Form>\r\n      );\r\n    })\r\n  }\r\n  manualSubmit() {\r\n    return (\r\n      <Form onSubmit={this.onSubmit}>\r\n        <FormGroup >\r\n          <Label for=\"foodName\">Food Name:</Label>\r\n          <Input\r\n            type=\"text\"\r\n            required\r\n            placeholder=\"What Food Are You Looking For?\"\r\n            className=\"form-control\"\r\n            value={this.state.foodname}\r\n            onChange={this.onChangeFoodname} />\r\n        </FormGroup>\r\n        <FormGroup><Row>\r\n          <Col>\r\n            <Label for=\"ExpDate\">Exp. Date:</Label>\r\n            <DatePicker\r\n              required\r\n              selected={this.state.expirationdate}\r\n              onChange={this.onChangeExpirationdate} />\r\n          </Col>\r\n          <Col >\r\n            <Label for=\"qty\">Quantity:</Label>\r\n            <Input\r\n              type=\"select\"\r\n              style={{ height: 'auto', width: 'auto' }}\r\n              value={this.state.numberOfItems}\r\n              onChange={this.onChangeNumberOfItems}>\r\n              <option>1</option>\r\n              <option>2</option>\r\n              <option>3</option>\r\n              <option>3</option>\r\n              <option>5</option>\r\n              <option>6</option>\r\n              <option>7</option>\r\n              <option>8</option>\r\n              <option>9</option>\r\n              <option>10</option>\r\n              <option>11</option>\r\n              <option>12</option>\r\n            </Input>\r\n          </Col>\r\n        </Row>\r\n        </FormGroup><Button size='lg' style={{ position: \"fixed\", bottom: \"0\", right: \"0\" }} className=\"form-control input\" type=\"submit\" value=\"Create food\"> Add Item </Button>\r\n      </Form>\r\n    );\r\n  }\r\n  render() {\r\n    var inv = \"/inventory/\" + this.state.username + \"/\" + this.state.password\r\n\r\n    return (<div style={{width: '90vw'}}>\r\n\r\n      {this.state.pop === true ? this.onScan() : \"\"}\r\n      {this.state.show === true ? <Scan onFoods={this.onFoods} onPop={this.onPop} /> : this.manualSubmit()}\r\n      <ButtonGroup size='lg'  style={{ boxSizing: 'content-box', position: \"fixed\", right: \"0\", top: \"0\", display: \"flex\", minWidth: \"100vw\", minHeight: \"54px\" }} >\r\n        <Button href={inv}>Back</Button>\r\n        <Button onClick={() => this.toInv()}> + Inventory</Button>\r\n        <Button onClick={() => this.setState({ show: !this.state.show })} ><img alt=\"camera\" src={cam} className=\"nav-pic\" /></Button>\r\n      </ButtonGroup>\r\n      <div style={{ top: \"300px\", height: \"100%\", width: \"100%\" }}>{this.AddList()}</div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n/**\r\n *{this.AddList()} className=\"SignSpace\"\r\n *\r\n */\r\n"]},"metadata":{},"sourceType":"module"}