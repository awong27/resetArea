{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antwong\\\\Documents\\\\temp\\\\csc648-03-sp20-team102\\\\application\\\\team102\\\\UI\\\\src\\\\Component\\\\ShoppingList.js\";\nimport React, { useState, Component } from 'react';\nimport { Button, Row, Col, Input, NavLink, Modal, ModalHeader, ModalBody, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport Navi from \"./Navigation\";\nimport TopBar from \"./TopBar\";\nimport \"./inv.css\";\nimport plusbtn from \"./plus.svg\";\nimport axios from \"axios\";\nimport classnames from 'classnames';\n\nconst Fooddata = props => React.createElement(Button, {\n  className: \"invBar\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(Row, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(NavLink, {\n  to: \"/user-item/\" + props.food._id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, props.food.foodName), React.createElement(Button, {\n  onClick: () => {\n    props.deleteItems(props.food._id);\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, \"X\")));\n\nconst HList = props => React.createElement(Button, {\n  className: \"invBar\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(Row, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, React.createElement(NavLink, {\n  to: \"/user-item/\" + props.food._id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, props.food.foodName), React.createElement(Button, {\n  onClick: () => {\n    props.deleteItems(props.food._id);\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"+\")));\n\nexport default class ShoppingList extends Component {\n  constructor(props) {\n    super(props);\n    this.onAddHist = this.onAddHist.bind(this);\n    this.deleteItems = this.deleteItems.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.pop = this.pop.bind(this);\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    this.state = {\n      fooddata: [],\n      histData: [],\n      username: params.id,\n      password: params.password,\n      modal: false,\n      dropdown: false\n    };\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  pop() {\n    this.setState({\n      dropdown: !this.state.dropdown\n    });\n  } // addHist should add current Shopping List to history and empty fooddata list\n\n\n  onAddHist() {\n    this.setState({\n      histData: [this.state.fooddata, this.state.histData],\n      fooddata: []\n    });\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/fooddata/\").then(response => {\n      this.setState({\n        fooddata: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  deleteItems(id) {\n    axios.delete(\"http://localhost:8080/fooddata/\" + id).then(res => console.log(res.data));\n    this.setState({\n      histData: [id, this.state.histData],\n      fooddata: this.state.fooddata.filter(el => el._id !== id)\n    });\n  }\n\n  inventory() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    return this.state.fooddata.map(currentfood => {\n      if (currentfood.creator === params.id) {\n        return React.createElement(Fooddata, {\n          food: currentfood,\n          deleteItems: this.deleteItems,\n          key: currentfood._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        });\n      }\n\n      return null;\n    });\n  }\n\n  History() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    return this.state.fooddata.map(currentfood => {\n      if (currentfood.creator === params.id) {\n        return React.createElement(HList, {\n          food: currentfood,\n          key: currentfood._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        });\n      }\n\n      return null;\n    });\n  }\n\n  render() {\n    return (\n      /*\r\n      * Shopping List Pulls info and displays as buttons\r\n      * should be able to see main list and sublist at the bottom\r\n      * need main user and sub users id\r\n      * \r\n      * needs to grab date when list is clear and send to shopping history\r\n      * \r\n      * scan to match list with what was bought and populate with values\r\n      * bring up things not grabbed by scan but on shopping list\r\n      */\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(TopBar, {\n        username: this.state.username,\n        password: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), \" \", React.createElement(\"div\", {\n        className: \"midCon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Shopping List\")), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(Col, {\n        align: \"centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"search\",\n        name: \"search\",\n        id: \"exampleSearch\",\n        placeholder: \"Search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })), React.createElement(Col, {\n        xs: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Main\"), React.createElement(\"div\", {\n        className: \"listItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, this.inventory(), this.subInventory()), React.createElement(ButtonDropdown, {\n        direction: \"up\",\n        isOpen: this.state.dropdown,\n        toggle: () => this.pop(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        className: \"addbtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"add\",\n        src: plusbtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })), React.createElement(DropdownMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        onClick: () => this.toggle(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"History\"), React.createElement(DropdownItem, {\n        onClick: () => this.onAddHist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"New List\"))), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: () => this.toggle(),\n        className: classnames,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: () => this.toggle(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"History\")), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, this.History())), React.createElement(Navi, {\n        username: this.state.username,\n        password: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }))\n    );\n  }\n\n  subInventory() {\n    return React.createElement(React.Fragment, null, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Hatchet\"), React.createElement(Button, {\n      className: \"subBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Ducks\"))), React.createElement(Row, {\n      className: \"subBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Candy\"), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"X\"), React.createElement(Col, {\n      xs: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(Button, {\n      className: \"subBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Ducks\"), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"X\"), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"+\"))));\n  }\n\n}\n/*<ButtonGroup size='lg' >\r\n        <Button href=\"/SHist\">History</Button>\r\n        <Button href=\"/create\">New Item</Button>\r\n        <Button href=\"/inventory\">+ Inventory</Button>\r\n      </ButtonGroup>\r\n      */","map":{"version":3,"sources":["C:/Users/Antwong/Documents/temp/csc648-03-sp20-team102/application/team102/UI/src/Component/ShoppingList.js"],"names":["React","useState","Component","Button","Row","Col","Input","NavLink","Modal","ModalHeader","ModalBody","ButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","Navi","TopBar","axios","classnames","Fooddata","props","food","_id","foodName","deleteItems","HList","ShoppingList","constructor","onAddHist","bind","toggle","pop","match","params","state","fooddata","histData","username","id","password","modal","dropdown","setState","componentDidMount","get","then","response","data","catch","error","console","log","delete","res","filter","el","inventory","map","currentfood","creator","History","render","subInventory","plusbtn"],"mappings":"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","sourcesContent":["import React, { useState, Component } from 'react';\r\nimport {\r\n  Button, Row, Col, Input, NavLink,\r\n  Modal, ModalHeader, ModalBody,\r\n  ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem\r\n} from 'reactstrap';\r\nimport Navi from \"./Navigation\";\r\nimport TopBar from \"./TopBar\";\r\nimport \"./inv.css\";\r\nimport plusbtn from \"./plus.svg\"\r\nimport axios from \"axios\";\r\nimport classnames from 'classnames';\r\nconst Fooddata = props => (\r\n  <Button className=\"invBar\" ><Row>\r\n    <NavLink to={\"/user-item/\" + props.food._id}>{props.food.foodName}</NavLink>\r\n    <Button onClick={() => { props.deleteItems(props.food._id); }}>X</Button>\r\n  </Row></Button>\r\n);\r\nconst HList = props => (\r\n  <Button className=\"invBar\" ><Row>\r\n    <NavLink to={\"/user-item/\" + props.food._id}>{props.food.foodName}</NavLink>\r\n    <Button onClick={() => { props.deleteItems(props.food._id); }}>+</Button>\r\n  </Row></Button>\r\n);\r\n\r\nexport default class ShoppingList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onAddHist = this.onAddHist.bind(this);\r\n    this.deleteItems = this.deleteItems.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.pop = this.pop.bind(this);\r\n    const { match: { params } } = this.props;\r\n    this.state = {\r\n      fooddata: [],\r\n      histData: [],\r\n      username: params.id,\r\n      password: params.password,\r\n      modal: false,\r\n      dropdown: false,\r\n    };\r\n  }\r\n  toggle() { this.setState({ modal: !this.state.modal }) }\r\n  pop() { this.setState({ dropdown: !this.state.dropdown }) }\r\n  // addHist should add current Shopping List to history and empty fooddata list\r\n  onAddHist() {\r\n    this.setState({\r\n      histData: [this.state.fooddata, this.state.histData],\r\n      fooddata: []\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:8080/fooddata/\")\r\n      .then(response => {\r\n        this.setState({ fooddata: response.data });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  deleteItems(id) {\r\n    axios\r\n      .delete(\"http://localhost:8080/fooddata/\" + id)\r\n      .then(res => console.log(res.data));\r\n    this.setState({\r\n      histData: [id, this.state.histData],\r\n      fooddata: this.state.fooddata.filter(el => el._id !== id)\r\n    });\r\n  }\r\n\r\n  inventory() {\r\n    const { match: { params } } = this.props;\r\n    return this.state.fooddata.map(currentfood => {\r\n      if (currentfood.creator === params.id) {\r\n        return (\r\n          <Fooddata\r\n            food={currentfood}\r\n            deleteItems={this.deleteItems}\r\n            key={currentfood._id}\r\n          />\r\n        );\r\n      }\r\n      return (null);\r\n    });\r\n  }\r\n  History() {\r\n    const { match: { params } } = this.props;\r\n    return this.state.fooddata.map(currentfood => {\r\n      if (currentfood.creator === params.id) {\r\n        return (\r\n          <HList\r\n            food={currentfood}\r\n            key={currentfood._id}\r\n          />\r\n        );\r\n      }\r\n      return (null);\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      /*\r\n      * Shopping List Pulls info and displays as buttons\r\n      * should be able to see main list and sublist at the bottom\r\n      * need main user and sub users id\r\n      * \r\n      * needs to grab date when list is clear and send to shopping history\r\n      * \r\n      * scan to match list with what was bought and populate with values\r\n      * bring up things not grabbed by scan but on shopping list\r\n      */\r\n      <div><TopBar username={this.state.username} password={this.state.password} /><br /><br /><br /> <div className=\"midCon\">\r\n        <h1>Shopping List</h1></div> \r\n        <Row><Col xs='1' /><Col align=\"centered\"><Input type=\"search\" name=\"search\" id=\"exampleSearch\" placeholder=\"Search\" /></Col><Col xs='1' /></Row>\r\n        <h3>Main</h3>\r\n        <div className=\"listItem\">\r\n          {this.inventory()}\r\n          {this.subInventory()}\r\n        </div>\r\n        <ButtonDropdown direction=\"up\" isOpen={this.state.dropdown} toggle={() => this.pop()}>\r\n          <DropdownToggle className=\"addbtn\">\r\n            <img alt=\"add\" src={plusbtn} />\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem onClick={() => this.toggle()}>History</DropdownItem>\r\n            <DropdownItem onClick={() => this.onAddHist}>New List</DropdownItem>\r\n          </DropdownMenu>\r\n        </ButtonDropdown>\r\n  \r\n        <Modal isOpen={this.state.modal} toggle={() => this.toggle()} className={classnames}>\r\n          <ModalHeader toggle={() => this.toggle()}><h3>History</h3></ModalHeader>\r\n          <ModalBody>\r\n            {this.History()}\r\n          </ModalBody>\r\n        </Modal>\r\n        <Navi username={this.state.username} password={this.state.password} />\r\n      </div>\r\n    )\r\n  }\r\n  subInventory() {\r\n    return (<>\r\n      <h3>Hatchet</h3>\r\n      <Button className=\"subBar\" ><Row>\r\n        <NavLink>Ducks</NavLink>\r\n        \r\n      </Row></Button>\r\n      <Row className=\"subBar\">\r\n        <Col>Candy</Col><Button>X</Button><Col xs='1'/>\r\n      </Row>\r\n      <Button className=\"subBar\" ><Row>\r\n        <NavLink>Ducks</NavLink>\r\n        <Button>X</Button>\r\n        <Button>+</Button>\r\n      </Row></Button>\r\n      \r\n    </>\r\n    );\r\n  }\r\n}\r\n/*<ButtonGroup size='lg' >\r\n        <Button href=\"/SHist\">History</Button>\r\n        <Button href=\"/create\">New Item</Button>\r\n        <Button href=\"/inventory\">+ Inventory</Button>\r\n      </ButtonGroup>\r\n      */\r\n"]},"metadata":{},"sourceType":"module"}