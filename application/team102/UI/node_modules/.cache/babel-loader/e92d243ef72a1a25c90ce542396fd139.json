{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antwong\\\\Desktop\\\\csc648-03-sp20-team102\\\\application\\\\team102\\\\UI\\\\src\\\\Component\\\\ShoppingList.js\";\nimport React, { Component } from 'react';\nimport { Button, Row, Col, Input, NavLink, Form, FormGroup } from 'reactstrap';\nimport Navi from \"./Navigation\";\nimport TopBar from \"./TopBar\";\nimport \"./inv.css\";\nimport plusbtn from \"./plus.svg\";\nimport axios from \"axios\";\n\nconst Shoppingdata = props =>\n/*  <tr>\r\n  <td>\r\n    <Link to = {\"/user-item/\"+ props.food._id}>{props.food.foodName}</Link>\r\n    </td>\r\n    <td>{props.food.expirationDate}</td>\r\n    <td>{props.food.calories}</td>\r\n    <td>{props.food.numOfItems}</td>\r\n    <td>\r\n      <Link to={\"/edit/\" + props.food._id}>edit</Link> |{\" \"}\r\n      <a\r\n        href=\"/create\"\r\n        onClick={() => {\r\n          props.deleteItems(props.food._id);\r\n        }}\r\n      >\r\n        delete\r\n      </a>\r\n    </td>\r\n  </tr>*/\nReact.createElement(Row, {\n  className: \"invBar histlist\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, React.createElement(Col, {\n  xs: \"1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}), React.createElement(Col, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, props.food.itemName), \" \"), React.createElement(Button, {\n  className: \"S-btn\",\n  onClick: () => {\n    props.toggleItems(props.food._id, props.food.itemAmount, props.food.itemName, props.food.status);\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, \"X\"), React.createElement(Col, {\n  xs: \"1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}));\n\nconst ShoppingHist = props => React.createElement(Row, {\n  className: \"invBar histlist\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, React.createElement(Col, {\n  xs: \"1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}), React.createElement(Col, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, React.createElement(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, props.food.itemName), \" \"), React.createElement(Button, {\n  className: \"S-btn\",\n  onClick: () => {\n    props.toggleItems(props.food._id, props.food.itemAmount, props.food.itemName, props.food.status);\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, \"+\"), React.createElement(Col, {\n  xs: \"1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}));\n\nexport default class ShoppingList extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeItemName = this.onChangeItemName.bind(this);\n    this.onChangeItemAmount = this.onChangeItemAmount.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleItems = this.toggleItems.bind(this);\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    this.state = {\n      shopdata: [],\n      check: 1,\n      username: params.id,\n      password: params.password,\n      newItemName: \"\",\n      newItemAmount: \"\",\n      removedItem: {}\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/shoppinglist/\").then(response => {\n      this.setState({\n        shopdata: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  toggleItems(id, itemAmount, itemName, status) {\n    var stat;\n\n    if (status == \"past\") {\n      stat = \"current\";\n    } else {\n      stat = \"past\";\n    }\n\n    const removed = {\n      itemName: itemName,\n      status: stat,\n      creator: this.state.username\n    };\n    axios.post(\"http://localhost:8080/shoppinglist/update/\" + id, removed).then(res => {\n      console.log(res.data);\n      window.location.reload();\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  onChangeItemName(e) {\n    this.setState({\n      newItemName: e.target.value\n    });\n  }\n\n  onChangeItemAmount(e) {\n    this.setState({\n      newItemAmount: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const item = {\n      itemName: this.state.newItemName,\n      creator: this.state.username,\n      status: \"current\"\n    };\n    var flag = false;\n    console.log(item);\n    this.state.shopdata.map(curr => {\n      if (item.itemName === curr && item.creator === curr.creator) {\n        return flag = true;\n      }\n    });\n\n    if (flag === false) {\n      axios.post(\"http://localhost:8080/shoppinglist/add\", item).then(res => console.log(res.data));\n      var list = this.state.shopdata;\n      list.push(item);\n      this.setState({\n        shopdata: list\n      });\n    }\n  }\n\n  shopList() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    return this.state.shopdata.map(currentfood => {\n      if (currentfood.creator === params.id && currentfood.status == \"current\") {\n        return React.createElement(Shoppingdata, {\n          food: currentfood,\n          toggleItems: this.toggleItems,\n          key: currentfood._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        });\n      }\n\n      return null;\n    });\n  }\n\n  shopHist() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    return this.state.shopdata.map(currentfood => {\n      if (currentfood.creator === params.id && currentfood.status == \"past\") {\n        return React.createElement(ShoppingHist, {\n          food: currentfood,\n          toggleItems: this.toggleItems,\n          key: currentfood._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        });\n      }\n\n      return null;\n    });\n  }\n  /*\r\n    inventory() {\r\n      const { match: { params } } = this.props;\r\n      return this.state.fooddata.map(currentfood => {\r\n        if (currentfood.creator === params.id) {\r\n          return (\r\n            <Fooddata\r\n              food={currentfood}\r\n              deleteItems={this.deleteItems}\r\n              key={currentfood._id}\r\n            />\r\n          );\r\n        }\r\n        return (null);\r\n      });\r\n    }\r\n  */\n\n\n  render() {\n    return (\n      /*\r\n      * Shopping List Pulls info and displays as buttons\r\n      * should be able to see main list and sublist at the bottom\r\n      * need main user and sub users id\r\n      *\r\n      * needs to grab date when list is clear and send to shopping history\r\n      *\r\n      * scan to match list with what was bought and populate with values\r\n      * bring up things not grabbed by scan but on shopping list\r\n      */\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(TopBar, {\n        username: this.state.username,\n        password: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), \" \", React.createElement(\"div\", {\n        className: \"midCon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Shopping List\")), React.createElement(Form, {\n        justified: true,\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        required: true,\n        style: {\n          width: '70vw'\n        },\n        placeholder: \"New Item Name\",\n        value: this.state.newItemName,\n        onChange: this.onChangeItemName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(Input, {\n        type: \"submit\",\n        style: {\n          width: '30vw'\n        },\n        value: \"Add\",\n        className: \"btn btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      })))), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"Current Items\"), React.createElement(\"div\", {\n        className: \"listItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, this.shopList()), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"Past Shopping Items\"), React.createElement(\"div\", {\n        className: \"listItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, this.shopHist())), React.createElement(Navi, {\n        username: this.state.username,\n        password: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }))\n    );\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Antwong/Desktop/csc648-03-sp20-team102/application/team102/UI/src/Component/ShoppingList.js"],"names":["React","Component","Button","Row","Col","Input","NavLink","Form","FormGroup","Navi","TopBar","axios","Shoppingdata","props","food","itemName","toggleItems","_id","itemAmount","status","ShoppingHist","ShoppingList","constructor","onChangeItemName","bind","onChangeItemAmount","onSubmit","match","params","state","shopdata","check","username","id","password","newItemName","newItemAmount","removedItem","componentDidMount","get","then","response","setState","data","catch","error","console","log","stat","removed","creator","post","res","window","location","reload","e","target","value","preventDefault","item","flag","map","curr","list","push","shopList","currentfood","shopHist","render","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Row, Col, Input, NavLink, Form, FormGroup } from 'reactstrap';\r\nimport Navi from \"./Navigation\";\r\nimport TopBar from \"./TopBar\";\r\nimport \"./inv.css\";\r\nimport plusbtn from \"./plus.svg\"\r\nimport axios from \"axios\";\r\nconst Shoppingdata = props => (\r\n  /*  <tr>\r\n    <td>\r\n      <Link to = {\"/user-item/\"+ props.food._id}>{props.food.foodName}</Link>\r\n      </td>\r\n      <td>{props.food.expirationDate}</td>\r\n      <td>{props.food.calories}</td>\r\n      <td>{props.food.numOfItems}</td>\r\n      <td>\r\n        <Link to={\"/edit/\" + props.food._id}>edit</Link> |{\" \"}\r\n        <a\r\n          href=\"/create\"\r\n          onClick={() => {\r\n            props.deleteItems(props.food._id);\r\n          }}\r\n        >\r\n          delete\r\n        </a>\r\n      </td>\r\n    </tr>*/\r\n  <Row className='invBar histlist' >\r\n    <Col xs='1' /><Col ><h4>{props.food.itemName}</h4> </Col>\r\n    <Button className=\"S-btn\" onClick={() => { props.toggleItems(props.food._id, props.food.itemAmount, props.food.itemName, props.food.status); }}>X</Button><Col xs='1' />\r\n  </Row>\r\n\r\n);\r\n\r\nconst ShoppingHist = props => (\r\n  <Row className='invBar histlist' >\r\n    <Col xs='1' /><Col ><h4>{props.food.itemName}</h4> </Col>\r\n    <Button className=\"S-btn\" onClick={() => { props.toggleItems(props.food._id, props.food.itemAmount, props.food.itemName, props.food.status); }}>+</Button><Col xs='1' />\r\n  </Row>\r\n\r\n);\r\n\r\nexport default class ShoppingList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChangeItemName = this.onChangeItemName.bind(this);\r\n    this.onChangeItemAmount = this.onChangeItemAmount.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.toggleItems = this.toggleItems.bind(this);\r\n    const { match: { params } } = this.props;\r\n    this.state = {\r\n      shopdata: [],\r\n      check: 1,\r\n      username: params.id,\r\n      password: params.password,\r\n      newItemName: \"\",\r\n      newItemAmount: \"\",\r\n      removedItem: {}\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:8080/shoppinglist/\")\r\n      .then(response => {\r\n        this.setState({ shopdata: response.data });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  toggleItems(id, itemAmount, itemName, status) {\r\n    var stat;\r\n    if (status == \"past\") {\r\n      stat = \"current\"\r\n    } else {\r\n      stat = \"past\"\r\n    }\r\n    const removed = {\r\n      itemName: itemName,\r\n\r\n      status: stat,\r\n      creator: this.state.username\r\n    }\r\n    axios\r\n      .post(\"http://localhost:8080/shoppinglist/update/\" + id, removed)\r\n      .then(res => {\r\n        console.log(res.data)\r\n        window.location.reload()\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  onChangeItemName(e) {\r\n    this.setState({\r\n      newItemName: e.target.value\r\n    })\r\n  }\r\n  onChangeItemAmount(e) {\r\n    this.setState({\r\n      newItemAmount: e.target.value\r\n    })\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const item = {\r\n      itemName: this.state.newItemName,\r\n      creator: this.state.username,\r\n      status: \"current\"\r\n    }; \r\n    var flag = false;\r\n    console.log(item)\r\n    this.state.shopdata.map(curr => {\r\n      if (item.itemName === curr && item.creator === curr.creator) { return flag = true; }\r\n    })\r\n    if (flag === false) {\r\n      axios\r\n        .post(\"http://localhost:8080/shoppinglist/add\", item)\r\n        .then(res => console.log(res.data));\r\n      var list = this.state.shopdata;\r\n      list.push(item);\r\n      this.setState({ shopdata: list });\r\n    }\r\n  }\r\n\r\n  shopList() {\r\n    const { match: { params } } = this.props;\r\n    return this.state.shopdata.map(currentfood => {\r\n      if (currentfood.creator === params.id && currentfood.status == \"current\") {\r\n        return (\r\n          <Shoppingdata\r\n            food={currentfood}\r\n            toggleItems={this.toggleItems}\r\n            key={currentfood._id}\r\n          />\r\n        );\r\n      }\r\n      return (null);\r\n    });\r\n  }\r\n\r\n  shopHist() {\r\n    const { match: { params } } = this.props;\r\n    return this.state.shopdata.map(currentfood => {\r\n      if (currentfood.creator === params.id && currentfood.status == \"past\") {\r\n        return (\r\n          <ShoppingHist\r\n            food={currentfood}\r\n            toggleItems={this.toggleItems}\r\n            key={currentfood._id}\r\n          />\r\n        );\r\n      }\r\n      return (null);\r\n    });\r\n  }\r\n  /*\r\n    inventory() {\r\n      const { match: { params } } = this.props;\r\n      return this.state.fooddata.map(currentfood => {\r\n        if (currentfood.creator === params.id) {\r\n          return (\r\n            <Fooddata\r\n              food={currentfood}\r\n              deleteItems={this.deleteItems}\r\n              key={currentfood._id}\r\n            />\r\n          );\r\n        }\r\n        return (null);\r\n      });\r\n    }\r\n  */\r\n  render() {\r\n    return (\r\n      /*\r\n      * Shopping List Pulls info and displays as buttons\r\n      * should be able to see main list and sublist at the bottom\r\n      * need main user and sub users id\r\n      *\r\n      * needs to grab date when list is clear and send to shopping history\r\n      *\r\n      * scan to match list with what was bought and populate with values\r\n      * bring up things not grabbed by scan but on shopping list\r\n      */\r\n      <div><TopBar username={this.state.username} password={this.state.password} /> <div className=\"midCon\">\r\n        <div><h1>Shopping List</h1></div>\r\n\r\n        <Form justified onSubmit={this.onSubmit}>\r\n          <FormGroup >\r\n            <Row>\r\n              <Input\r\n                type=\"text\"\r\n                required\r\n                style={{ width: '70vw' }}\r\n                placeholder=\"New Item Name\"\r\n                value={this.state.newItemName}\r\n                onChange={this.onChangeItemName} />\r\n\r\n              <Input\r\n                type=\"submit\"\r\n                style={{ width: '30vw' }}\r\n                value=\"Add\"\r\n                className=\"btn btn-secondary\"\r\n              /></Row></FormGroup></Form>\r\n\r\n        <h3>Current Items</h3>\r\n        <div className=\"listItem\">\r\n          {this.shopList()}\r\n        </div>\r\n        < h3>Past Shopping Items</h3>\r\n        <div className=\"listItem\">\r\n          {this.shopHist()}\r\n        </div>\r\n      </div>\r\n        <Navi username={this.state.username} password={this.state.password} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}