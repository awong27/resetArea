{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antwong\\\\Documents\\\\temp\\\\csc648-03-sp20-team102\\\\application\\\\team102\\\\UI\\\\src\\\\Component\\\\ShoppingList.js\";\nimport React, { Component } from 'react';\nimport { Button, Row, Col, Input, Modal, ModalHeader, ModalBody, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport Navi from \"./Navigation\";\nimport TopBar from \"./TopBar\";\nimport \"./inv.css\";\nimport plusbtn from \"./plus.svg\";\nimport axios from \"axios\";\nimport classnames from 'classnames';\n\nconst Fooddata = props => React.createElement(Row, {\n  className: \"invBar\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(Col, {\n  xs: \"1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}), React.createElement(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, props.food.foodName), \" \", React.createElement(Col, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}), React.createElement(Button, {\n  className: \"S-btn\",\n  onClick: () => {\n    props.deleteItems(props.food._id);\n    props.addItems(props.food._id);\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, \"X\"), React.createElement(Col, {\n  xs: \"1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}));\n\nconst HList = props => React.createElement(Row, {\n  className: \"histlist\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, React.createElement(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, props.food.foodName), \" \", React.createElement(Col, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}), React.createElement(Button, {\n  className: \"S-btn\",\n  onClick: () => {\n    props.addItems(props.food._id);\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, \"+\"));\n\nexport default class ShoppingList extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeSearch = this.onChangeSearch.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onAddHist = this.onAddHist.bind(this);\n    this.deleteItems = this.deleteItems.bind(this);\n    this.addItems = this.addItems.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.pop = this.pop.bind(this);\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    this.state = {\n      fooddata: [],\n      histData: [],\n      username: params.id,\n      password: params.password,\n      modal: false,\n      dropdown: false,\n      searches: \"\"\n    };\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n\n  pop() {\n    this.setState({\n      dropdown: !this.state.dropdown\n    });\n  }\n\n  onChangeSearch(e) {\n    this.setState({\n      searches: e.target.value\n    });\n  } // addHist should add current Shopping List to history and empty fooddata list\n\n\n  onAddHist() {\n    this.setState({\n      histData: [this.state.fooddata, this.state.histData],\n      fooddata: []\n    });\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/fooddata/\").then(response => {\n      this.setState({\n        fooddata: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  deleteItems(id) {\n    axios.delete(\"http://localhost:8080/fooddata/\" + id).then(res => console.log(res.data));\n    this.setState({\n      histData: [id, this.state.histData],\n      fooddata: this.state.fooddata.filter(el => el._id !== id)\n    });\n  }\n\n  addItems(id) {\n    axios.add(\"http://localhost:8080/fooddata/add\" + id).then(res => console.log(res.data));\n    this.setState({\n      fooddata: [id, this.state.fooddata]\n    });\n  }\n\n  inventory() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    return this.state.fooddata.map(currentfood => {\n      if (currentfood.creator === params.id) {\n        return React.createElement(Fooddata, {\n          food: currentfood,\n          deleteItems: this.deleteItems,\n          addItems: this.addItems,\n          key: currentfood._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        });\n      }\n\n      return null;\n    });\n  }\n\n  History() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    return this.state.fooddata.map(currentfood => {\n      if (currentfood.creator === params.id) {\n        return React.createElement(HList, {\n          food: currentfood,\n          addItems: this.addItems,\n          key: currentfood._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        });\n      }\n\n      return null;\n    });\n  }\n\n  Add() {\n    return React.createElement(Form, {\n      justified: true,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"Search\",\n      style: {\n        width: '70vw'\n      },\n      required: true,\n      className: \"form-control\",\n      value: this.state.searches,\n      onChange: this.onChangeSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), \" \", React.createElement(Input, {\n      type: \"submit\",\n      style: {\n        width: '30vw'\n      },\n      value: \"Add Item\",\n      className: \"btn btn-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }))));\n  }\n\n  render() {\n    return (\n      /*\r\n      * Shopping List Pulls info and displays as buttons\r\n      * should be able to see main list and sublist at the bottom\r\n      * need main user and sub users id\r\n      * \r\n      * needs to grab date when list is clear and send to shopping history\r\n      * \r\n      * scan to match list with what was bought and populate with values\r\n      * bring up things not grabbed by scan but on shopping list\r\n      */\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(TopBar, {\n        username: this.state.username,\n        password: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"midCon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Shopping List\")), this.Add(), React.createElement(\"div\", {\n        className: \"listItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, this.inventory()), React.createElement(ButtonDropdown, {\n        direction: \"up\",\n        isOpen: this.state.dropdown,\n        toggle: () => this.pop(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        className: \"addbtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"add\",\n        src: plusbtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(DropdownMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        onClick: () => this.toggle(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"History\"), React.createElement(DropdownItem, {\n        onClick: () => this.onAddHist(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"New List\"))), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        toggle: () => this.toggle(),\n        className: classnames,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: () => this.toggle(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"History\")), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, this.History())), React.createElement(Navi, {\n        username: this.state.username,\n        password: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }))\n    );\n  }\n\n}\n/*<ButtonGroup size='lg' > onClick={() => { props.deleteItems(props.food._id); }}\r\n        <Button href=\"/SHist\">History</Button>\r\n        <Button href=\"/create\">New Item</Button>\r\n        <Button href=\"/inventory\">+ Inventory</Button>\r\n      </ButtonGroup>\r\n\r\n\r\n      {this.subInventory()}\r\n      subInventory() {\r\n    return (<>\r\n      <h3>Hatchet</h3>\r\n      <Row className=\"subBar\">\r\n        <Col xs='1'/><h3>Candy</h3><Col/><Button className=\"S-btn\" >X</Button><Col xs='1'/>\r\n      </Row>\r\n    </>\r\n    );\r\n  }\r\n      */","map":{"version":3,"sources":["C:/Users/Antwong/Documents/temp/csc648-03-sp20-team102/application/team102/UI/src/Component/ShoppingList.js"],"names":["React","Component","Button","Row","Col","Input","Modal","ModalHeader","ModalBody","ButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","Navi","TopBar","axios","classnames","Fooddata","props","food","foodName","deleteItems","_id","addItems","HList","ShoppingList","constructor","onChangeSearch","bind","onSubmit","onAddHist","toggle","pop","match","params","state","fooddata","histData","username","id","password","modal","dropdown","searches","setState","e","target","value","componentDidMount","get","then","response","data","catch","error","console","log","delete","res","filter","el","add","inventory","map","currentfood","creator","History","Add","width","render","plusbtn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, Row, Col, Input,\r\n  Modal, ModalHeader, ModalBody,\r\n  ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem\r\n} from 'reactstrap';\r\nimport Navi from \"./Navigation\";\r\nimport TopBar from \"./TopBar\";\r\nimport \"./inv.css\";\r\nimport plusbtn from \"./plus.svg\"\r\nimport axios from \"axios\";\r\nimport classnames from 'classnames';\r\nconst Fooddata = props => (\r\n  <Row className=\"invBar\" >\r\n    <Col xs='1' /><h4>{props.food.foodName}</h4> <Col></Col>\r\n    <Button className=\"S-btn\" onClick={() => { props.deleteItems(props.food._id); props.addItems(props.food._id); }}>X</Button><Col xs='1' />\r\n  </Row>\r\n);\r\nconst HList = props => (\r\n  <Row className='histlist' >\r\n    <h4>{props.food.foodName}</h4> <Col></Col>\r\n    <Button className=\"S-btn\" onClick={() => { props.addItems(props.food._id); }}>+</Button>\r\n  </Row>\r\n);\r\n\r\nexport default class ShoppingList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearch = this.onChangeSearch.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onAddHist = this.onAddHist.bind(this);\r\n    this.deleteItems = this.deleteItems.bind(this);\r\n    this.addItems = this.addItems.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.pop = this.pop.bind(this);\r\n    const { match: { params } } = this.props;\r\n    this.state = {\r\n      fooddata: [],\r\n      histData: [],\r\n      username: params.id,\r\n      password: params.password,\r\n      modal: false,\r\n      dropdown: false,\r\n      searches: \"\",\r\n    };\r\n  }\r\n  toggle() { this.setState({ modal: !this.state.modal }) }\r\n  pop() { this.setState({ dropdown: !this.state.dropdown }) }\r\n  onChangeSearch(e) { this.setState({ searches: e.target.value }); }\r\n  // addHist should add current Shopping List to history and empty fooddata list\r\n  onAddHist() {\r\n    this.setState({\r\n      histData: [this.state.fooddata, this.state.histData],\r\n      fooddata: []\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:8080/fooddata/\")\r\n      .then(response => {\r\n        this.setState({ fooddata: response.data });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  deleteItems(id) {\r\n    axios\r\n      .delete(\"http://localhost:8080/fooddata/\" + id)\r\n      .then(res => console.log(res.data));\r\n    this.setState({\r\n      histData: [id, this.state.histData],\r\n      fooddata: this.state.fooddata.filter(el => el._id !== id)\r\n    });\r\n  }\r\n  addItems(id) {\r\n    axios\r\n      .add(\"http://localhost:8080/fooddata/add\" + id)\r\n      .then(res => console.log(res.data));\r\n    this.setState({\r\n      fooddata: [id, this.state.fooddata]\r\n    });\r\n  }\r\n  inventory() {\r\n    const { match: { params } } = this.props;\r\n    return this.state.fooddata.map(currentfood => {\r\n      if (currentfood.creator === params.id) {\r\n        return (\r\n          <Fooddata\r\n            food={currentfood}\r\n            deleteItems={this.deleteItems}\r\n            addItems={this.addItems}\r\n            key={currentfood._id}\r\n          />\r\n        );\r\n      }\r\n      return (null);\r\n    });\r\n  }\r\n  History() {\r\n    const { match: { params } } = this.props;\r\n    return this.state.fooddata.map(currentfood => {\r\n      if (currentfood.creator === params.id) {\r\n        return (\r\n          <HList\r\n            food={currentfood}\r\n            addItems={this.addItems}\r\n            key={currentfood._id}\r\n          />\r\n        );\r\n      }\r\n      return (null);\r\n    });\r\n  }\r\n  Add() {\r\n    return (\r\n      <Form justified onSubmit={this.onSubmit}>\r\n        <FormGroup>\r\n          <Row>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              style={{ width: '70vw' }}\r\n              required\r\n              className=\"form-control\"\r\n              value={this.state.searches}\r\n              onChange={this.onChangeSearch}\r\n            /> <Input\r\n              type=\"submit\"\r\n              style={{ width: '30vw' }}\r\n              value=\"Add Item\"\r\n              className=\"btn btn-secondary\"\r\n            /></Row>\r\n        </FormGroup>\r\n      </Form>\r\n    )\r\n  }\r\n  render() {\r\n    return (\r\n      /*\r\n      * Shopping List Pulls info and displays as buttons\r\n      * should be able to see main list and sublist at the bottom\r\n      * need main user and sub users id\r\n      * \r\n      * needs to grab date when list is clear and send to shopping history\r\n      * \r\n      * scan to match list with what was bought and populate with values\r\n      * bring up things not grabbed by scan but on shopping list\r\n      */\r\n      <div><TopBar username={this.state.username} password={this.state.password} /><div className=\"midCon\">\r\n        <h1>Shopping List</h1></div>\r\n        {this.Add()}\r\n        <div className=\"listItem\">\r\n          {this.inventory()}\r\n        </div>\r\n        <ButtonDropdown direction=\"up\" isOpen={this.state.dropdown} toggle={() => this.pop()}>\r\n          <DropdownToggle className=\"addbtn\">\r\n            <img alt=\"add\" src={plusbtn} />\r\n          </DropdownToggle>\r\n          <DropdownMenu>\r\n            <DropdownItem onClick={() => this.toggle()}>History</DropdownItem>\r\n            <DropdownItem onClick={() => this.onAddHist()}>New List</DropdownItem>\r\n          </DropdownMenu>\r\n        </ButtonDropdown>\r\n\r\n        <Modal isOpen={this.state.modal} toggle={() => this.toggle()} className={classnames}>\r\n          <ModalHeader toggle={() => this.toggle()}><h3>History</h3></ModalHeader>\r\n          <ModalBody>\r\n            {this.History()}\r\n          </ModalBody>\r\n        </Modal>\r\n        <Navi username={this.state.username} password={this.state.password} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n/*<ButtonGroup size='lg' > onClick={() => { props.deleteItems(props.food._id); }}\r\n        <Button href=\"/SHist\">History</Button>\r\n        <Button href=\"/create\">New Item</Button>\r\n        <Button href=\"/inventory\">+ Inventory</Button>\r\n      </ButtonGroup>\r\n\r\n\r\n      {this.subInventory()}\r\n      subInventory() {\r\n    return (<>\r\n      <h3>Hatchet</h3>\r\n      <Row className=\"subBar\">\r\n        <Col xs='1'/><h3>Candy</h3><Col/><Button className=\"S-btn\" >X</Button><Col xs='1'/>\r\n      </Row>\r\n    </>\r\n    );\r\n  }\r\n      */\r\n"]},"metadata":{},"sourceType":"module"}