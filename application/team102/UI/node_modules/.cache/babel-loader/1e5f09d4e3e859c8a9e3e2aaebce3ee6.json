{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antwong\\\\Documents\\\\temp\\\\csc648-03-sp20-team102\\\\application\\\\team102\\\\UI\\\\src\\\\Component\\\\Recipe.js\";\nimport React, { useState, Component } from 'react';\nimport { Container, Row, Col, Input, Button, ButtonGroup, Card, CardImg, Form, CardText, CardFooter, CardHeader, FormGroup, NavLink, Modal, ModalHeader, ModalBody, ModalFooter, CardBody } from 'reactstrap';\nimport Navi from \"./Navigation\";\nimport TopBar from \"./TopBar\";\nimport axios from \"axios\"; //grabs recipe information\n//displays as a rectangular picture with overlay text\n//when clicked with have a pop up with more info\n\nconst Fooddata = props => {\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return React.createElement(Card, {\n    className: \"bigdes \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(CardImg, {\n    alt: \"recipeItem\",\n    onClick: toggle,\n    src: props.food.recipeImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, props.food.recipeName)), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Calories:\", props.food.recipeCalories), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Carbs:\", props.food.recipeCarbs), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Sugar:\", props.food.recipeSugar), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Protein:\", props.food.recipeProtein), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Fat:\", props.food.recipeFat), React.createElement(\"img\", {\n    src: props.food.recipeImage,\n    height: \"50%\",\n    width: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    className: \"itemOptions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {\n      props.deleteItems(props.food.recipe_id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(Button, {\n    onClick: () => \"/create\" + props.food.recipe_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"eat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }))))), React.createElement(CardHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    className: \"itemHead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, props.food.recipeName)), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, props.food.recipeCalories !== 'null' ? Math.round(props.food.recipeCalories) : 0)))), React.createElement(CardBody, {\n    position: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(CardFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    className: \"itemOptions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {\n      props.deleteItems(props.food.recipe_id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  })), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(Button, {\n    onClick: () => \"/create\" + props.food.recipe_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"eat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })))));\n}; //grabs search results\n\n\nconst Recipedata = props => React.createElement(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77\n  },\n  __self: this\n}, props.food.recipe.label);\n\nexport default class Recipe extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeSearch = this.onChangeSearch.bind(this);\n    this.onChangeCalories = this.onChangeCalories.bind(this);\n    this.onChangeCarbs = this.onChangeCarbs.bind(this);\n    this.onChangeFat = this.onChangeFat.bind(this);\n    this.onChangeSugar = this.onChangeSugar.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.deleteItems = this.deleteItems.bind(this);\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    this.state = {\n      creator: params.id,\n      password: params.password,\n      searches: \"\",\n      recipedata: [],\n      newrecipedata: [],\n      newRecipes: [],\n      recipename: \"\",\n      recipeCalories: \"\",\n      recipeCarbs: \"\",\n      recipeFat: \"\",\n      recipeProtein: \"\",\n      recipeSugar: \"\"\n    };\n  }\n\n  onChangeSearch(e) {\n    this.setState({\n      searches: e.target.value\n    });\n  }\n\n  onChangeCalories(e) {\n    this.setState({\n      recipeCalories: e.target.value\n    });\n  }\n\n  onChangeCarbs(e) {\n    this.setState({\n      recipeCarbs: e.target.value\n    });\n  }\n\n  onChangeSugar(e) {\n    this.setState({\n      recipeSugar: e.target.value\n    });\n  }\n\n  onChangeProtein(e) {\n    this.setState({\n      protein: e.target.value\n    });\n  }\n\n  onChangeFat(e) {\n    this.setState({\n      recipeFat: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    axios.get(\"https://api.edamam.com/search?q=chicken&app_id=b53160ee&app_key=5d9984e95c5c6968d5edfb7d02c83b46&from=0&to=3&calories=591-722&health=alcohol-free\").then(response => {\n      let newrec = [];\n      var label; //console.log(response.data);\n\n      this.setState({\n        newrecipedata: response.data.hits\n      });\n      this.state.newrecipedata.map(currentfood => {\n        console.log(currentfood.recipe.label);\n        label = currentfood.recipe.label;\n        console.log(label);\n        newrec.push(label);\n        console.log(newrec);\n        currentfood.recipe.ingredients.map(currentingredient => {\n          console.log(currentingredient.text);\n          return null;\n        });\n        return null;\n      });\n      console.log(newrec);\n      this.setState({\n        newRecipes: newrec\n      });\n      console.log(this.state.newRecipes);\n    });\n    var addRec = \"/addRecipe/\" + this.state.creator + \"/\" + this.state.password + \"/\" + this.state.searches + \"/\" + this.state.recipeSugar + \"/\" + this.state.recipeFat + \"/\" + this.state.recipeCarbs + \"/\" + this.state.recipeCalories;\n    window.location = addRec;\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/recipedata/\").then(response => {\n      this.setState({\n        recipedata: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  deleteItems(id) {\n    axios.delete(\"http://localhost:8080/recipedata/\" + id).then(res => console.log(res.data));\n    this.setState({\n      recipedata: this.state.recipedata.filter(el => el._id !== id)\n    });\n  }\n  /*  addRecipe(id){\r\n      const ingredient = {\r\n        ingredientName : this.state.ingredients\r\n      }\r\n      const recipes = {\r\n        recipeName: this.state.recipename,\r\n        creator: this.state.creator,\r\n        recipeCalories: this.state.recipeCalories,\r\n        recipeCarbs: this.state.recipeCarbs,\r\n        recipeProtein: this.state.recipeProtein,\r\n        recipeFat: this.state.recipeFat,\r\n        ingredients: ingredient\r\n      }\r\n  \r\n      this.state.newrecipedata.map(currentfood=>{\r\n      console.log(currentfood.recipe.label);\r\n      label = currentfood.recipe.label;\r\n      console.log(label);\r\n      newrec.push(label);\r\n      console.log(newrec);\r\n      currentfood.recipe.ingredients.map(currentingredient=>{\r\n        console.log(currentingredient.text);\r\n  \r\n      })\r\n  \r\n  \r\n    })\r\n  \r\n  \r\n  \r\n      console.log(recipe);\r\n      axios\r\n        .post(\"http://localhost:8080/recipedata/add\", recipe)\r\n        .then(res => console.log(res.data));\r\n  \r\n  \r\n    }*/\n\n\n  inventory() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    return this.state.recipedata.map(currentfood => {\n      if (currentfood.creator === params.id) {\n        return React.createElement(Fooddata, {\n          food: currentfood,\n          username: params.id,\n          password: params.password,\n          deleteItems: this.deleteItems,\n          key: currentfood._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        });\n      }\n\n      return null;\n    });\n  }\n\n  searchedRecipes() {\n    return this.state.newrecipedata.map(currentfood => {\n      return React.createElement(Recipedata, {\n        food: currentfood,\n        deleteItems: this.deleteItems,\n        key: currentfood._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      });\n    });\n  }\n  /*  onSubmit(e){\r\n      e.preventDefault();\r\n  \r\n          axios\r\n            .get(\"https://api.edamam.com/search?q=chicken&app_id=b53160ee&app_key=5d9984e95c5c6968d5edfb7d02c83b46&from=0&to=3&calories=591-722&health=alcohol-free\")\r\n            .then(response => {\r\n            console.log(response.data);\r\n            //  this.setState({\r\n          //    foods:response.data.foods[0].foodNutrients});\r\n            /*  this.state.foods.map(currentfood=>{\r\n                console.log(currentfood);\r\n                if(currentfood.nutrientName==\"Protein\"){\r\n                  this.state.protein = currentfood.value.toString(10);\r\n                }\r\n                if(currentfood.nutrientName==\"Total lipid (fat)\"){\r\n                  this.state.fat= currentfood.value.toString(10);\r\n                }\r\n                if(currentfood.nutrientName==\"Carbohydrate, by difference\"){\r\n                  this.state.carbs= currentfood.value.toString(10);\r\n                }\r\n                if(currentfood.nutrientName==\"Energy\"){\r\n                  this.state.calories=currentfood.value.toString(10);\r\n                }\r\n                if(currentfood.nutrientName==\"Sugars, total including NLEA\"){\r\n                  this.state.sugar=currentfood.value.toString(10);\r\n                }\r\n  \r\n              })\r\n  \r\n            }*/\n\n\n  restrictions() {\n    return React.createElement(Form, {\n      inline: true,\n      justified: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"Cal\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, \"250Cal\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, \"500Cal\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"750Cal\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"1000Cal\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"1500Cal\"))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"Fat\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"Fat\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"Fat\"))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, \"Carbs\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \"Carbs\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, \"Carbs\"))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, \"Sodium\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, \"Sodium\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"Sodium\"))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"Sugar\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, \"Sugar\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"Sugar\"))));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(TopBar, {\n      username: this.state.username,\n      password: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }), React.createElement(Container, {\n      className: \"fit-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, \"Recipes\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"search\",\n      name: \"search\",\n      id: \"exampleSearch\",\n      placeholder: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    })), React.createElement(Col, {\n      xs: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    })), this.restrictions(), this.inventory()), React.createElement(Navi, {\n      username: this.state.password,\n      password: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }));\n  }\n\n} //<Navi username={this.state.username} password={this.state.password}/>","map":{"version":3,"sources":["C:/Users/Antwong/Documents/temp/csc648-03-sp20-team102/application/team102/UI/src/Component/Recipe.js"],"names":["React","useState","Component","Container","Row","Col","Input","Button","ButtonGroup","Card","CardImg","Form","CardText","CardFooter","CardHeader","FormGroup","NavLink","Modal","ModalHeader","ModalBody","ModalFooter","CardBody","Navi","TopBar","axios","Fooddata","props","className","modal","setModal","toggle","food","recipeImage","recipeName","recipeCalories","recipeCarbs","recipeSugar","recipeProtein","recipeFat","deleteItems","recipe_id","Math","round","Recipedata","recipe","label","Recipe","constructor","onChangeSearch","bind","onChangeCalories","onChangeCarbs","onChangeFat","onChangeSugar","onSubmit","match","params","state","creator","id","password","searches","recipedata","newrecipedata","newRecipes","recipename","e","setState","target","value","onChangeProtein","protein","preventDefault","get","then","response","newrec","data","hits","map","currentfood","console","log","push","ingredients","currentingredient","text","addRec","window","location","componentDidMount","catch","error","delete","res","filter","el","_id","inventory","searchedRecipes","restrictions","render","username"],"mappings":"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","sourcesContent":["import React, {useState, Component} from 'react';\r\nimport {Container, Row, Col, Input, Button, ButtonGroup, Card, CardImg, Form, CardText, CardFooter, CardHeader, FormGroup, NavLink,  Modal, ModalHeader, ModalBody, ModalFooter, CardBody} from 'reactstrap';\r\nimport Navi from \"./Navigation\";\r\nimport TopBar from \"./TopBar\";\r\nimport axios from \"axios\";\r\n\r\n//grabs recipe information\r\n//displays as a rectangular picture with overlay text\r\n//when clicked with have a pop up with more info\r\nconst Fooddata = props => {\r\n  const {className} = props;\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const toggle = () => setModal(!modal);\r\n  return (\r\n  <Card className=\"bigdes \">\r\n    <CardImg alt=\"recipeItem\" onClick={toggle} src={props.food.recipeImage}/>\r\n    <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}><h3>{props.food.recipeName}</h3></ModalHeader>\r\n        <ModalBody>\r\n          <h4>Calories:{props.food.recipeCalories}</h4>\r\n          <h4>Carbs:{props.food.recipeCarbs}</h4>\r\n          <h4>Sugar:{props.food.recipeSugar}</h4>\r\n          <h4>Protein:{props.food.recipeProtein}</h4>\r\n          <h4>Fat:{props.food.recipeFat}</h4>\r\n          <img src={props.food.recipeImage} height=\"50%\" width=\"100%\"/>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <ButtonGroup className=\"itemOptions\">\r\n            <Button onClick={() => {props.deleteItems(props.food.recipe_id);}}>\r\n              <img alt=\"delete\"  />\r\n            </Button>\r\n            <Button>\r\n              <CardText></CardText>\r\n            </Button>\r\n            <Button onClick={() => \"/create\" + props.food.recipe_id}>\r\n              <img alt=\"eat\"  />\r\n            </Button>\r\n          </ButtonGroup>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      <CardHeader>\r\n        <ButtonGroup className=\"itemHead\">\r\n          <Button>\r\n\r\n          </Button>\r\n          <Button>\r\n            <CardText>{props.food.recipeName}</CardText>\r\n          </Button>\r\n          <Button>\r\n            <CardText>{props.food.recipeCalories !== 'null'? Math.round(props.food.recipeCalories):0}</CardText>\r\n          </Button>\r\n        </ButtonGroup>\r\n      </CardHeader>\r\n      <CardBody position='center'>\r\n          \r\n      </CardBody>\r\n      <CardFooter>\r\n        <ButtonGroup className=\"itemOptions\">\r\n          <Button onClick={() => {props.deleteItems(props.food.recipe_id);}}>\r\n            <img alt=\"delete\"  />\r\n          </Button>\r\n          <Button>\r\n            <CardText></CardText>\r\n          </Button>\r\n          <Button onClick={() => \"/create\" + props.food.recipe_id}>\r\n            <img alt=\"eat\"  />\r\n          </Button>\r\n        </ButtonGroup>\r\n      </CardFooter>\r\n  </Card>\r\n  );\r\n}\r\n//grabs search results\r\nconst Recipedata = props =>(\r\n  <tr>{props.food.recipe.label}</tr>\r\n);\r\n\r\nexport default class Recipe extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearch = this.onChangeSearch.bind(this);\r\n    this.onChangeCalories = this.onChangeCalories.bind(this);\r\n    this.onChangeCarbs = this.onChangeCarbs.bind(this);\r\n    this.onChangeFat = this.onChangeFat.bind(this);\r\n    this.onChangeSugar = this.onChangeSugar.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.deleteItems = this.deleteItems.bind(this);\r\n    const {match:{params}} = this.props;\r\n\r\n    this.state = {\r\n      creator: params.id,\r\n      password: params.password,\r\n      searches: \"\",\r\n      recipedata: [],\r\n      newrecipedata: [],\r\n      newRecipes: [],\r\n      recipename: \"\",\r\n      recipeCalories: \"\",\r\n      recipeCarbs: \"\",\r\n      recipeFat: \"\",\r\n      recipeProtein: \"\",\r\n      recipeSugar: \"\",\r\n\r\n\r\n    };\r\n  }\r\n\r\n  onChangeSearch(e) {\r\n    this.setState({\r\n      searches: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeCalories(e){\r\n    this.setState({\r\n      recipeCalories:e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeCarbs(e){\r\n    this.setState({\r\n      recipeCarbs:e.target.value\r\n    });\r\n  }\r\n  onChangeSugar(e){\r\n    this.setState({\r\n      recipeSugar:e.target.value\r\n    });\r\n  }\r\n  onChangeProtein(e){\r\n    this.setState({\r\n      protein:e.target.value\r\n    });\r\n  }\r\n  onChangeFat(e){\r\n    this.setState({\r\n      recipeFat:e.target.value\r\n    });\r\n  }\r\n\r\n  onSubmit(e){\r\n    e.preventDefault();\r\n        axios\r\n          .get(\"https://api.edamam.com/search?q=chicken&app_id=b53160ee&app_key=5d9984e95c5c6968d5edfb7d02c83b46&from=0&to=3&calories=591-722&health=alcohol-free\")\r\n          .then(response => {\r\n            let newrec = [];\r\n            var label;\r\n            //console.log(response.data);\r\n              this.setState({\r\n              newrecipedata:response.data.hits});\r\n              this.state.newrecipedata.map(currentfood=>{\r\n              console.log(currentfood.recipe.label);\r\n              label = currentfood.recipe.label;\r\n              console.log(label);\r\n              newrec.push(label);\r\n              console.log(newrec);\r\n              currentfood.recipe.ingredients.map(currentingredient=>{\r\n                console.log(currentingredient.text);\r\n                return (null);\r\n              })\r\n              return (null);\r\n\r\n            })\r\n            console.log(newrec);\r\n            this.setState({\r\n              newRecipes: newrec\r\n            })\r\n            console.log(this.state.newRecipes);\r\n          })\r\n    var addRec=\"/addRecipe/\"+this.state.creator+\"/\"+this.state.password+\"/\"+this.state.searches+\"/\"+this.state.recipeSugar+\"/\"+this.state.recipeFat+\"/\"+this.state.recipeCarbs+\"/\"+this.state.recipeCalories\r\n    window.location=addRec\r\n}\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:8080/recipedata/\")\r\n      .then(response => {\r\n        this.setState({ recipedata: response.data });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  deleteItems(id) {\r\n    axios\r\n      .delete(\"http://localhost:8080/recipedata/\" + id)\r\n      .then(res => console.log(res.data));\r\n    this.setState({\r\n      recipedata: this.state.recipedata.filter(el => el._id !== id)\r\n    });\r\n  }\r\n/*  addRecipe(id){\r\n    const ingredient = {\r\n      ingredientName : this.state.ingredients\r\n    }\r\n    const recipes = {\r\n      recipeName: this.state.recipename,\r\n      creator: this.state.creator,\r\n      recipeCalories: this.state.recipeCalories,\r\n      recipeCarbs: this.state.recipeCarbs,\r\n      recipeProtein: this.state.recipeProtein,\r\n      recipeFat: this.state.recipeFat,\r\n      ingredients: ingredient\r\n    }\r\n\r\n    this.state.newrecipedata.map(currentfood=>{\r\n    console.log(currentfood.recipe.label);\r\n    label = currentfood.recipe.label;\r\n    console.log(label);\r\n    newrec.push(label);\r\n    console.log(newrec);\r\n    currentfood.recipe.ingredients.map(currentingredient=>{\r\n      console.log(currentingredient.text);\r\n\r\n    })\r\n\r\n\r\n  })\r\n\r\n\r\n\r\n    console.log(recipe);\r\n    axios\r\n      .post(\"http://localhost:8080/recipedata/add\", recipe)\r\n      .then(res => console.log(res.data));\r\n\r\n\r\n  }*/\r\n  \r\n  inventory() {\r\n    const {match:{params}} = this.props;\r\n    return this.state.recipedata.map(currentfood => {\r\n      if(currentfood.creator===params.id){\r\n        return (\r\n          <Fooddata\r\n            food={currentfood}\r\n            username={params.id}\r\n            password={params.password}\r\n\r\n            deleteItems={this.deleteItems}\r\n            key={currentfood._id}\r\n            />\r\n          );} return (null);\r\n    });\r\n  }\r\n\r\n  searchedRecipes() {\r\n    return this.state.newrecipedata.map(currentfood => {\r\n        return (\r\n          <Recipedata\r\n            food={currentfood}\r\n            deleteItems={this.deleteItems}\r\n            key={currentfood._id}\r\n            />\r\n          );\r\n    });\r\n  }\r\n\r\n/*  onSubmit(e){\r\n    e.preventDefault();\r\n\r\n        axios\r\n          .get(\"https://api.edamam.com/search?q=chicken&app_id=b53160ee&app_key=5d9984e95c5c6968d5edfb7d02c83b46&from=0&to=3&calories=591-722&health=alcohol-free\")\r\n          .then(response => {\r\n          console.log(response.data);\r\n          //  this.setState({\r\n        //    foods:response.data.foods[0].foodNutrients});\r\n          /*  this.state.foods.map(currentfood=>{\r\n              console.log(currentfood);\r\n              if(currentfood.nutrientName==\"Protein\"){\r\n                this.state.protein = currentfood.value.toString(10);\r\n              }\r\n              if(currentfood.nutrientName==\"Total lipid (fat)\"){\r\n                this.state.fat= currentfood.value.toString(10);\r\n              }\r\n              if(currentfood.nutrientName==\"Carbohydrate, by difference\"){\r\n                this.state.carbs= currentfood.value.toString(10);\r\n              }\r\n              if(currentfood.nutrientName==\"Energy\"){\r\n                this.state.calories=currentfood.value.toString(10);\r\n              }\r\n              if(currentfood.nutrientName==\"Sugars, total including NLEA\"){\r\n                this.state.sugar=currentfood.value.toString(10);\r\n              }\r\n\r\n            })\r\n\r\n          }*/\r\n\r\n  \r\n  restrictions() {\r\n    return (\r\n      <Form inline justified>\r\n        <FormGroup>\r\n          <Input type=\"select\">\r\n            <option>Cal</option>\r\n            <option>250Cal</option>\r\n            <option>500Cal</option>\r\n            <option>750Cal</option>\r\n            <option>1000Cal</option>\r\n            <option>1500Cal</option>\r\n          </Input>\r\n        </FormGroup> \r\n        <FormGroup>\r\n          <Input type=\"select\">\r\n            <option>Fat</option>\r\n            <option>Fat</option>\r\n            <option>Fat</option>\r\n          </Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Input type=\"select\">\r\n            <option>Carbs</option>\r\n            <option>Carbs</option>\r\n            <option>Carbs</option>\r\n          </Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Input type=\"select\">\r\n            <option>Sodium</option>\r\n            <option>Sodium</option>\r\n            <option>Sodium</option>\r\n          </Input>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Input type=\"select\">\r\n            <option>Sugar</option>\r\n            <option>Sugar</option>\r\n            <option>Sugar</option>\r\n          </Input>\r\n        </FormGroup>\r\n      </Form>\r\n    );\r\n  }\r\n  render() {\r\n    return (        \r\n      <div><TopBar username={this.state.username} password={this.state.password}/> <br/><br/><br/>\r\n      <Container className=\"fit-content\"> \r\n        <Row><Col><h1>Recipes</h1></Col></Row>\r\n        <Row><Col xs='1'/><Col><Input type=\"search\" name=\"search\" id=\"exampleSearch\" placeholder=\"Search\" /></Col><Col xs='1'/></Row>\r\n        {this.restrictions()}\r\n\r\n        {this.inventory()}        \r\n      </Container>    \r\n        <Navi username={this.state.password} password={this.state.password}/>\r\n      </div>  \r\n    )\r\n  }\r\n}\r\n//<Navi username={this.state.username} password={this.state.password}/>"]},"metadata":{},"sourceType":"module"}