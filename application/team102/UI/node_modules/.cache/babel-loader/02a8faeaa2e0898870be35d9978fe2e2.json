{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mitya\\\\Documents\\\\GitHub\\\\csc648-03-sp20-team102\\\\application\\\\team102\\\\UI\\\\src\\\\Component\\\\Scan.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nexport default class Scan extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.oGetUserMedia;\n\n    if (navigator.getUserMedia) {\n      navigator.getUserMedia({\n        video: true\n      }, this.handleVideo, this.videoError);\n    }\n  }\n\n  handleVideo(stream) {\n    // Update the state, triggering the component to re-render with the correct stream\n    this.setState({\n      videoSrc: window.URL.createObjectURL(stream)\n    });\n    this.videoElement.play();\n  }\n\n  videoError() {\n    console.log(\"video error\");\n  }\n\n  render() {\n    setTimeout = () => {\n      if (!this.props.isOpen) {\n        return;\n      }\n\n      this.context = this.canvasElement.getContext('2d');\n      this.context.drawImage(this.props.video, 0, 0, 640, 480);\n    };\n\n    const video = React.createElement(\"video\", {\n      id: \"video\",\n      width: \"640\",\n      height: \"480\",\n      className: \"cameraFrame\",\n      src: this.state.videoSrc,\n      autoPlay: true,\n      ref: input => {\n        this.videoElement = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    });\n    const canvasEl = React.createElement(\"canvas\", {\n      id: \"canvas\",\n      width: \"640\",\n      height: \"480\",\n      className: \"photoCard\",\n      ref: input => this.canvasElement = this.context,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, video, canvasEl, React.createElement(\"input\", {\n      style: {\n        display: 'none'\n      },\n      type: \"file\",\n      onChange: this.fileSelectedHandler,\n      ref: fileInput => this.fileInput = fileInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => this.fileInput.click(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Pick File\"), React.createElement(\"button\", {\n      onClick: this.fileUploadHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Upload\"));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/mitya/Documents/GitHub/csc648-03-sp20-team102/application/team102/UI/src/Component/Scan.js"],"names":["React","Component","axios","Scan","constructor","props","componentDidMount","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","oGetUserMedia","video","handleVideo","videoError","stream","setState","videoSrc","window","URL","createObjectURL","videoElement","play","console","log","render","setTimeout","isOpen","context","canvasElement","getContext","drawImage","state","input","canvasEl","display","fileSelectedHandler","fileInput","click","fileUploadHandler"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nexport default class Scan extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia || navigator.oGetUserMedia;\r\n        if (navigator.getUserMedia) {\r\n            navigator.getUserMedia({video: true}, this.handleVideo, this.videoError);\r\n        }\r\n        \r\n    }\r\n    handleVideo (stream) {\r\n        // Update the state, triggering the component to re-render with the correct stream\r\n        this.setState({ videoSrc: window.URL.createObjectURL(stream) });\r\n        this.videoElement.play();\r\n      }\r\n    videoError() {\r\n        console.log(\"video error\");\r\n    }\r\n    \r\n    render() {\r\n\r\n        setTimeout=() => {\r\n            if (!this.props.isOpen) {\r\n                return;\r\n            }\r\n            this.context = this.canvasElement.getContext('2d');\r\n            this.context.drawImage(this.props.video, 0, 0, 640, 480);\r\n        };\r\n\r\n        const video = (<video id=\"video\" width=\"640\" height=\"480\" className=\"cameraFrame\" src={this.state.videoSrc} autoPlay={true}\r\n        ref={(input) => { this.videoElement = input; }}></video>);\r\n        \r\n        const canvasEl = (<canvas id=\"canvas\" width=\"640\" height=\"480\" className=\"photoCard\" ref={(input) => this.canvasElement = this.context} />);\r\n        return (\r\n            <div>\r\n                {video}\r\n                {canvasEl}\r\n                <input style={{display: 'none'}} \r\n                    type=\"file\" \r\n                    onChange={this.fileSelectedHandler} \r\n                    ref={fileInput => this.fileInput = fileInput}/>\r\n                    <br/>\r\n                <button onClick={() => this.fileInput.click()}>Pick File</button>\r\n                <button onClick={this.fileUploadHandler}>Upload</button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}