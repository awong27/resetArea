{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antwong\\\\Documents\\\\temp\\\\csc648-03-sp20-team102\\\\application\\\\team102\\\\UI\\\\src\\\\Component\\\\Home.js\";\nimport React, { useState, Component } from 'react';\nimport { Container, Row, Col, NavLink, Table, TabPane, Nav, NavItem, TabContent, UncontrolledAlert, Button, ButtonGroup, Card, CardImg, CardText, CardBody, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport Navi from \"./Navigation\";\nimport TopBar from \"./TopBar\";\nimport \"./Home.css\";\nimport classnames from 'classnames';\nimport axios from \"axios\";\nimport { Bar, Doughnut } from 'react-chartjs-2';\n\nconst Recipedata = props => {\n  const {\n    className\n  } = props;\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  return React.createElement(Card, {\n    className: \"homeRep\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(CardImg, {\n    alt: \"recipeItem\",\n    onClick: toggle,\n    src: props.food.recipeImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    className: className,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, props.food.recipeName)), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Calories:\", props.food.recipeCalories), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Carbs:\", props.food.recipeCarbs), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Sugar:\", props.food.recipeSugar), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Protein:\", props.food.recipeProtein), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Fat:\", props.food.recipeFat), React.createElement(\"img\", {\n    alt: props.food.recipeName,\n    src: props.food.recipeImage,\n    height: \"50%\",\n    width: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(ButtonGroup, {\n    className: \"itemOptions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: () => {\n      props.deleteItems(props.food.recipe_id);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(Button, {\n    onClick: () => \"/create\" + props.food.recipe_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    alt: \"eat\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))))), React.createElement(CardBody, {\n    position: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(CardText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, props.food.recipeName)));\n};\n\nconst Fooddata = props => React.createElement(Row, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}, React.createElement(Col, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}, React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}, props.food.recipeName)), React.createElement(Col, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}), React.createElement(Col, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}, \"Calories: \", props.food.recipeCalories), React.createElement(Col, {\n  xs: \"1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}));\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    this.deleteItems = this.deleteItems.bind(this);\n    this.state = {\n      userdata: [],\n      password: params.password,\n      username: params.id,\n      fooddata: [],\n      recipedata: [],\n      today: new Date(Date.now()),\n      date: \"\",\n      activeTab: '1',\n      labels: ['Fats', 'Protein', 'Sugar', 'Carbs', 'Sodium'],\n      datasets: [{\n        label: 'Nutrition',\n        backgroundColor: ['#B21F00', '#C9DE00', '#2FDE00', '#00A6B4', '#6800B4'],\n        hoverBackgroundColor: ['#501800', '#4B5000', '#175000', '#003350', '#35014F'],\n        data: [65, 59, 80, 81, 56]\n      }]\n    };\n    var date = (this.state.today.getMonth() + 1).toString() + \"/\" + this.state.today.getDate().toString() + \"/\" + this.state.today.getFullYear().toString();\n    this.state.date = date;\n    console.log(this.state.date);\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  componentDidMount() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    axios.get(`http://localhost:8080/userdata/${params.id}`).then(response => {\n      this.setState({\n        userdata: response.data\n      });\n      console.log(this.state.userdata);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  deleteItems(id) {\n    axios.delete(\"http://localhost:8080/userdata/\" + id).then(res => console.log(res.data));\n    this.setState({\n      userdata: this.state.userdata.filter(el => el._id !== id)\n    });\n  }\n\n  notifications() {\n    //need to query for expiring food in inv\n    return React.createElement(React.Fragment, null, React.createElement(UncontrolledAlert, {\n      color: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Expiring Soon\"));\n  }\n\n  todaysMeals() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    axios.get(\"http://localhost:8080/mealplan/\").then(response => {\n      this.setState({\n        fooddata: response.data\n      });\n    });\n    return this.state.fooddata.map(currentfood => {\n      if (currentfood.creator === params.id && currentfood.date === this.state.date) {\n        return React.createElement(Fooddata, {\n          food: currentfood,\n          deleteItems: this.deleteItems,\n          key: currentfood._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        });\n      }\n    });\n  }\n\n  myRecipes() {\n    var count = 4;\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    axios.get(\"http://localhost:8080/recipedata/\").then(response => {\n      this.setState({\n        recipedata: response.data\n      });\n    });\n    return this.state.recipedata.map(currentfood => {\n      if (currentfood.creator === params.id) {\n        count = count - 1;\n        console.log(count);\n\n        if (count < 0) {\n          return React.createElement(React.Fragment, null, \" Find New Recipes \");\n        }\n\n        return React.createElement(Recipedata, {\n          food: currentfood,\n          deleteItems: this.deleteItems,\n          key: currentfood._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    var inv = \"/inventory/\" + params.id + \"/\" + params.password;\n    var stat = \"/Statistics/\" + params.id + \"/\" + params.password;\n    var meal = \"/mealplan/\" + params.id + \"/\" + params.password; //console.log(user);\n\n    /*\r\n    * homepage should load with user data\r\n    * there should be two tabs\r\n    *   one for current statistics of user\r\n    *   the other should have notifications of expiring items from inv\r\n    *     current meal plan and recent recipes\r\n    *     current meal plan should know the day and content\r\n    * stats chart and table should be grabbing user data and populating\r\n    */\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \" \", React.createElement(TopBar, {\n      username: this.state.username,\n      password: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(Container, {\n      className: \"HomePage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Welcome, \", this.state.username), this.notifications(), React.createElement(Nav, {\n      tabs: true,\n      justified: true,\n      className: \"plan\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeTab === '1'\n      }),\n      onClick: () => {\n        this.toggle('1');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Today\")), React.createElement(NavItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      className: classnames({\n        active: this.state.activeTab === '2'\n      }),\n      onClick: () => {\n        this.toggle('2');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Me\")), React.createElement(NavItem, {\n      style: {\n        flex: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, this.state.date))), React.createElement(TabContent, {\n      activeTab: this.state.activeTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(TabPane, {\n      tabId: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"Meal Plan For Today\"), React.createElement(Row, {\n      className: \"homeRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, this.todaysMeals())), React.createElement(Row, {\n      className: \"homeRow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      href: \"/Recipes/:id/:password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, this.myRecipes())))), React.createElement(TabPane, {\n      tabId: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Statistics\", React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Doughnut, {\n      data: this.state,\n      options: {\n        title: {\n          display: true,\n          text: 'Daily Nutrition',\n          fontSize: 20\n        },\n        legend: {\n          display: true,\n          position: 'right'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"Calories\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }), \" \", React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"57,352\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"Fats\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), \" \", React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"768 g\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"Sodium\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }), \" \", React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"179 g\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Protien\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), \" \", React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"1,423 g\")), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"Fluids\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), \" \", React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \"15 gal\")))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(Bar, {\n      data: this.state,\n      options: {\n        title: {\n          display: true,\n          text: 'Weekly Calories',\n          fontSize: 20\n        },\n        legend: {\n          display: true,\n          position: 'right'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }))))), React.createElement(Navi, {\n      username: this.state.username,\n      password: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Antwong/Documents/temp/csc648-03-sp20-team102/application/team102/UI/src/Component/Home.js"],"names":["React","useState","Component","Container","Row","Col","NavLink","Table","TabPane","Nav","NavItem","TabContent","UncontrolledAlert","Button","ButtonGroup","Card","CardImg","CardText","CardBody","Modal","ModalHeader","ModalBody","ModalFooter","Navi","TopBar","classnames","axios","Bar","Doughnut","Recipedata","props","className","modal","setModal","toggle","food","recipeImage","recipeName","recipeCalories","recipeCarbs","recipeSugar","recipeProtein","recipeFat","deleteItems","recipe_id","Fooddata","Home","constructor","match","params","bind","state","userdata","password","username","id","fooddata","recipedata","today","Date","now","date","activeTab","labels","datasets","label","backgroundColor","hoverBackgroundColor","data","getMonth","toString","getDate","getFullYear","console","log","tab","setState","componentDidMount","get","then","response","catch","error","delete","res","filter","el","_id","notifications","todaysMeals","map","currentfood","creator","myRecipes","count","render","inv","stat","meal","active","flex","title","display","text","fontSize","legend","position"],"mappings":"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","sourcesContent":["import React, {useState, Component } from 'react';\r\nimport { Container, Row, Col, NavLink, Table, TabPane, \r\n  Nav, NavItem, TabContent, UncontrolledAlert, Button,\r\n  ButtonGroup, Card, CardImg, CardText, CardBody, \r\n  Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport Navi from \"./Navigation\";\r\nimport TopBar from \"./TopBar\";\r\nimport \"./Home.css\";\r\nimport classnames from 'classnames';\r\nimport axios from \"axios\";\r\nimport { Bar, Doughnut } from 'react-chartjs-2';\r\n\r\nconst Recipedata = props => {\r\n  const { className } = props;\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n  return (\r\n    <Card className=\"homeRep\">\r\n      <CardImg alt=\"recipeItem\" onClick={toggle} src={props.food.recipeImage} />\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader toggle={toggle}><h3>{props.food.recipeName}</h3></ModalHeader>\r\n        <ModalBody>\r\n          <h4>Calories:{props.food.recipeCalories}</h4>\r\n          <h4>Carbs:{props.food.recipeCarbs}</h4>\r\n          <h4>Sugar:{props.food.recipeSugar}</h4>\r\n          <h4>Protein:{props.food.recipeProtein}</h4>\r\n          <h4>Fat:{props.food.recipeFat}</h4>\r\n          <img alt={props.food.recipeName} src={props.food.recipeImage} height=\"50%\" width=\"100%\" />\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <ButtonGroup className=\"itemOptions\">\r\n            <Button onClick={() => { props.deleteItems(props.food.recipe_id); }}>\r\n              <img alt=\"delete\" />\r\n            </Button>\r\n            <Button>\r\n              <CardText></CardText>\r\n            </Button>\r\n            <Button onClick={() => \"/create\" + props.food.recipe_id}>\r\n              <img alt=\"eat\" />\r\n            </Button>\r\n          </ButtonGroup>\r\n        </ModalFooter>\r\n      </Modal>\r\n      <CardBody position='center'>\r\n        <CardText>{props.food.recipeName}</CardText>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\nconst Fooddata = props => (\r\n  <Row>\r\n    <Col><p>{props.food.recipeName}</p></Col><Col></Col><Col>Calories: {props.food.recipeCalories}</Col><Col xs='1' />\r\n  </Row>\r\n);\r\n\r\nexport default class Home extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const { match: { params } } = this.props;\r\n    this.deleteItems = this.deleteItems.bind(this);\r\n    this.state = {\r\n      userdata: [],\r\n      password: params.password,\r\n      username: params.id,\r\n      fooddata: [],\r\n      recipedata: [],\r\n      today: new Date(Date.now()),\r\n      date: \"\",\r\n      activeTab: '1',\r\n      labels: ['Fats', 'Protein', 'Sugar',\r\n        'Carbs', 'Sodium'],\r\n      datasets: [{\r\n        label: 'Nutrition',\r\n        backgroundColor: [\r\n          '#B21F00',\r\n          '#C9DE00',\r\n          '#2FDE00',\r\n          '#00A6B4',\r\n          '#6800B4'\r\n        ],\r\n        hoverBackgroundColor: [\r\n          '#501800',\r\n          '#4B5000',\r\n          '#175000',\r\n          '#003350',\r\n          '#35014F'\r\n        ],\r\n        data: [65, 59, 80, 81, 56]\r\n      }]\r\n    };\r\n    var date = (this.state.today.getMonth() + 1).toString() + \"/\" + (this.state.today.getDate()).toString() + \"/\" + (this.state.today.getFullYear()).toString();\r\n    this.state.date = date\r\n    console.log(this.state.date)\r\n  }\r\n  toggle(tab) {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({\r\n        activeTab: tab\r\n      });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const { match: { params } } = this.props;\r\n    axios\r\n      .get(`http://localhost:8080/userdata/${params.id}`)\r\n      .then(response => {\r\n        this.setState({ userdata: response.data });\r\n        console.log(this.state.userdata)\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  deleteItems(id) {\r\n    axios\r\n      .delete(\"http://localhost:8080/userdata/\" + id)\r\n      .then(res => console.log(res.data));\r\n    this.setState({\r\n      userdata: this.state.userdata.filter(el => el._id !== id)\r\n    });\r\n  }\r\n  notifications() {//need to query for expiring food in inv\r\n    return (<>\r\n      <UncontrolledAlert color=\"info\">\r\n        Expiring Soon\r\n      </UncontrolledAlert>\r\n    </>\r\n    );\r\n  }\r\n  todaysMeals() {\r\n    const { match: { params } } = this.props;\r\n    axios\r\n      .get(\"http://localhost:8080/mealplan/\")\r\n      .then(response => {\r\n        this.setState({\r\n          fooddata: response.data,\r\n        });\r\n      })\r\n    return this.state.fooddata.map(currentfood => {\r\n      if (currentfood.creator === params.id && currentfood.date === this.state.date) {\r\n        return (\r\n          <Fooddata\r\n            food={currentfood}\r\n            deleteItems={this.deleteItems}\r\n            key={currentfood._id}\r\n          />\r\n        );\r\n      }\r\n    });\r\n  }\r\n  myRecipes() {\r\n    var count = 4;\r\n    const { match: { params } } = this.props;\r\n    axios\r\n      .get(\"http://localhost:8080/recipedata/\")\r\n      .then(response => {\r\n        this.setState({\r\n          recipedata: response.data,\r\n        });\r\n      })\r\n    return this.state.recipedata.map(currentfood => {\r\n      if (currentfood.creator === params.id) {\r\n        count = count - 1;\r\n        console.log(count);\r\n        if (count < 0) {\r\n          return (<> Find New Recipes </>);\r\n        }\r\n        return (\r\n          <Recipedata\r\n            food={currentfood}\r\n            deleteItems={this.deleteItems}\r\n            key={currentfood._id}\r\n          />\r\n        );\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    const { match: { params } } = this.props;\r\n\r\n    var inv = \"/inventory/\" + params.id + \"/\" + params.password;\r\n    var stat = \"/Statistics/\" + params.id + \"/\" + params.password;\r\n    var meal = \"/mealplan/\" + params.id + \"/\" + params.password;\r\n\r\n    //console.log(user);\r\n    /*\r\n    * homepage should load with user data\r\n    * there should be two tabs\r\n    *   one for current statistics of user\r\n    *   the other should have notifications of expiring items from inv\r\n    *     current meal plan and recent recipes\r\n    *     current meal plan should know the day and content\r\n    * stats chart and table should be grabbing user data and populating\r\n    */\r\n    return (\r\n      <div className=\"container\"> <TopBar username={this.state.username} password={this.state.password} />\r\n        <Container className=\"HomePage\">  \r\n          <h2>Welcome, {this.state.username}</h2>\r\n          {this.notifications()}\r\n          <Nav tabs justified className=\"plan\">\r\n            <NavItem>\r\n              <NavLink className={classnames({ active: this.state.activeTab === '1' })}\r\n                onClick={() => { this.toggle('1'); }} >\r\n                Today\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink className={classnames({ active: this.state.activeTab === '2' })}\r\n                onClick={() => { this.toggle('2'); }} >\r\n                Me\r\n              </NavLink>\r\n            </NavItem>\r\n\r\n            <NavItem style={{ flex: 'auto' }}>\r\n              <NavLink>{this.state.date}</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n          <TabContent activeTab={this.state.activeTab}>\r\n            <TabPane tabId=\"1\">\r\n              <h3>Meal Plan For Today</h3>\r\n              <Row className=\"homeRow\">\r\n                <Col>{this.todaysMeals()}</Col>\r\n\r\n              </Row>\r\n              <Row className=\"homeRow\">\r\n                <Col>\r\n                  <NavLink href=\"/Recipes/:id/:password\">\r\n                    {this.myRecipes()}\r\n                  </NavLink>\r\n                </Col>\r\n              </Row>\r\n            </TabPane>\r\n            <TabPane tabId=\"2\">\r\n              Statistics\r\n              <Row>\r\n                <Doughnut\r\n                  data={this.state}\r\n                  options={{\r\n                    title: {\r\n                      display: true,\r\n                      text: 'Daily Nutrition',\r\n                      fontSize: 20\r\n                    },\r\n                    legend: {\r\n                      display: true,\r\n                      position: 'right'\r\n                    }\r\n                  }}\r\n                />\r\n              </Row>\r\n              <Row><Col xs=\"1\"></Col>\r\n                <Col><Table striped>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th scope=\"row\">Calories</th>\r\n                      <td></td> <td>57,352</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">Fats</th>\r\n                      <td></td> <td>768 g</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">Sodium</th>\r\n                      <td></td> <td>179 g</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">Protien</th>\r\n                      <td></td> <td>1,423 g</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">Fluids</th>\r\n                      <td></td> <td>15 gal</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table></Col>\r\n              </Row>\r\n              <Row>\r\n                <Bar\r\n                  data={this.state}\r\n                  options={{\r\n                    title: {\r\n                      display: true,\r\n                      text: 'Weekly Calories',\r\n                      fontSize: 20\r\n                    },\r\n                    legend: {\r\n                      display: true,\r\n                      position: 'right'\r\n                    }\r\n                  }}\r\n                />\r\n              </Row>\r\n            </TabPane>\r\n          </TabContent>\r\n        </Container>\r\n        <Navi username={this.state.username} password={this.state.password} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}