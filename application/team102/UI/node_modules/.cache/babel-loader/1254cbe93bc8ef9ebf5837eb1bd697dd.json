{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Antwong\\\\Documents\\\\temp\\\\csc648-03-sp20-team102\\\\application\\\\team102\\\\UI\\\\src\\\\Component\\\\Recipe.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Input, Form, FormGroup } from 'reactstrap';\nimport Navi from \"./Navigation\";\nimport TopBar from \"./TopBar\";\nimport axios from \"axios\";\nimport RecipeData from \"./RecipeData.js\";\nexport default class Recipe extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeSearch = this.onChangeSearch.bind(this);\n    this.onChangeCalories = this.onChangeCalories.bind(this);\n    this.onChangeCarbs = this.onChangeCarbs.bind(this);\n    this.onChangeFat = this.onChangeFat.bind(this);\n    this.onChangeSugar = this.onChangeSugar.bind(this);\n    this.onChangeSodium = this.onChangeSodium.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.deleteItems = this.deleteItems.bind(this);\n    this.searchRepClean = this.searchRepClean.bind(this);\n    this.sort = this.sort.bind(this);\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    this.state = {\n      creator: params.id,\n      password: params.password,\n      searches: \"\",\n      recipedata: [],\n      newrecipedata: [],\n      newRecipes: [],\n      recipename: \"\",\n      recipeCalories: \"\",\n      recipeCarbs: \"\",\n      recipeFat: \"\",\n      recipeProtein: \"\",\n      recipeSugar: \"\",\n      recipeSodium: \"\",\n      addedRecipe: \"\",\n      ingredients: [],\n      recipeImage: \"\",\n      fat: params.fat,\n      calories: params.calories,\n      carbs: params.carbs,\n      sugar: params.sugar\n    };\n  }\n\n  searchRepClean() {\n    this.setState({\n      newrecipedata: []\n    });\n  }\n\n  onChangeSearch(e) {\n    this.setState({\n      searches: e.target.value\n    });\n  }\n\n  onChangeCalories(e) {\n    this.setState({\n      recipeCalories: e.target.value.replace(/\\D/g, '')\n    });\n  }\n\n  onChangeCarbs(e) {\n    this.setState({\n      recipeCarbs: e.target.value.replace(/\\D/g, '')\n    });\n  }\n\n  onChangeSugar(e) {\n    this.setState({\n      recipeSugar: e.target.value.replace(/\\D/g, '')\n    });\n  }\n\n  onChangeSodium(e) {\n    this.setState({\n      recipeSodium: e.target.value.replace(/\\D/g, '')\n    });\n  }\n\n  onChangeProtein(e) {\n    this.setState({\n      protein: e.target.value\n    });\n  }\n\n  onChangeFat(e) {\n    this.setState({\n      recipeFat: e.target.value.replace(/\\D/g, '')\n    });\n  }\n  /**onSubmit sends a search request to edamam api with current params */\n\n\n  onSubmit(e) {\n    e.preventDefault();\n    axios.get(`https://api.edamam.com/search?q=${this.state.searches}&app_id=b53160ee&app_key=5d9984e95c5c6968d5edfb7d02c83b46&from=0&to=10&calories=0-${this.state.recipeCalories}${this.state.recipeFat}${this.state.recipeCarbs}${this.state.recipeSugar}${this.state.recipeSodium}`).then(response => {\n      this.setState({\n        newrecipedata: response.data.hits\n      });\n      this.sort();\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n  /** sort will take the new recipe data and only grab what is needed\r\n   * and creates a new list of recipes for search results\r\n   * cleans up results data\r\n   */\n\n\n  sort() {\n    let newList = [];\n    this.state.newrecipedata.map(currentfood => {\n      let newR = {\n        ingredients: [],\n        recipeName: \"\",\n        recipeImage: \"\",\n        recipeCalories: \"\",\n        recipeProtein: \"\",\n        recipeFat: \"\",\n        recipeCarbs: \"\",\n        recipeSugar: \"\",\n        recipeSodium: \"\",\n        creator: this.state.creator\n      };\n      newR.ingredients = currentfood.recipe.ingredientLines;\n      newR.recipeName = currentfood.recipe.label;\n      newR.recipeImage = currentfood.recipe.image;\n      newR.recipeCalories = currentfood.recipe.calories;\n      newR.recipeProtein = currentfood.recipe.totalNutrients.PROCNT.quantity;\n      newR.recipeFat = currentfood.recipe.totalNutrients.FAT.quantity;\n      newR.recipeCarbs = currentfood.recipe.totalNutrients.CHOCDF.quantity;\n      newR.recipeSugar = currentfood.recipe.totalNutrients.SUGAR.quantity;\n      newR.recipeSodium = currentfood.recipe.totalNutrients.NA.quantity;\n      console.log(newR);\n      newList.push(newR);\n      return null;\n    });\n    this.setState({\n      newRecipes: newList\n    });\n    console.log(this.state.newRecipes);\n    this.searchRepClean();\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/recipedata/\").then(response => {\n      this.setState({\n        recipedata: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  deleteItems(id) {\n    axios.delete(\"http://localhost:8080/recipedata/\" + id).then(res => console.log(res.data));\n    this.setState({\n      recipedata: this.state.recipedata.filter(el => el._id !== id)\n    });\n  }\n\n  addRecipe(newR) {\n    axios.post(\"http://localhost:8080/recipedata/add\", newR).then(res => console.log(res.data));\n    this.onChangeSearch(\"\");\n  }\n\n  inventory() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    return this.state.recipedata.map(currentfood => {\n      if (currentfood.creator === params.id) {\n        return React.createElement(RecipeData, {\n          food: currentfood,\n          username: params.id,\n          addRecipe: this.addRecipe,\n          password: params.password,\n          key: currentfood._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        });\n      }\n\n      return null;\n    });\n  }\n\n  searchedRecipes() {\n    //const { match: { params } } = this.props;\n    return this.state.newRecipes.map(currentfood => {\n      return React.createElement(RecipeData, {\n        food: currentfood,\n        username: params.id,\n        addRecipe: this.addRecipe,\n        password: params.password,\n        key: currentfood._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      });\n    });\n  }\n\n  restrictions() {\n    return React.createElement(Form, {\n      justified: true,\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"Search\",\n      style: {\n        width: '70vw'\n      },\n      required: true,\n      className: \"form-control\",\n      value: this.state.searches,\n      onChange: this.onChangeSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), \" \", React.createElement(Input, {\n      type: \"submit\",\n      style: {\n        width: '30vw'\n      },\n      value: \"Find\",\n      className: \"btn btn-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      style: {\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"select\",\n      style: {\n        width: '24vw',\n        padding: '0'\n      },\n      onChange: this.onChangeCalories,\n      value: this.state.recipeCalories,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Calories\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"250  Cal\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"500  Cal\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"750  Cal\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"1000  Cal\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"1500  Cal\")), React.createElement(Input, {\n      type: \"select\",\n      style: {\n        width: '15vw',\n        padding: '0'\n      },\n      onChange: this.onChangeFat,\n      value: this.state.recipeFat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Fat\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"5 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"10 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"15 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"20 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"25 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"30 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"35 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, \"40 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"45 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, \"50 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"55 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"60 g\")), React.createElement(Input, {\n      type: \"select\",\n      style: {\n        width: '19vw',\n        padding: '0'\n      },\n      value: this.state.recipeCarbs,\n      onChange: this.onChangeCarbs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Carbs\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"5 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"10 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"15 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"20 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, \"25 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"30 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"35 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"40 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"45 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"50 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"55 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"60 g\")), React.createElement(Input, {\n      type: \"select\",\n      style: {\n        width: '23vw',\n        padding: '0'\n      },\n      value: this.state.recipeSodium,\n      onChange: this.onChangeSodium,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Sodium\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"5 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"10 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"15 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"20 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"25 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"30 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"35 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"40 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"45 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"50 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \"55 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"60 g\")), React.createElement(Input, {\n      type: \"select\",\n      style: {\n        width: '19vw',\n        padding: '0'\n      },\n      value: this.state.recipeSugar,\n      onChange: this.onChangeSugar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, \"Sugar\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"5 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"10 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, \"15 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"20 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"25 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"30 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"35 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"40 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"45 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"50 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"55 g\"), React.createElement(\"option\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"60 g\"))));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(TopBar, {\n      username: this.state.creator,\n      password: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }), React.createElement(Container, {\n      className: \"fit-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"Recipes\"))), this.restrictions(), this.state.searches !== \"\" ? this.searchedRecipes() : this.inventory(), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    })), React.createElement(Navi, {\n      username: this.state.creator,\n      password: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }));\n  }\n\n}\n/**var search = encodeURI(params.search);\r\n    var calories = \"\";\r\n    if (params.calories !== \"NA\") {\r\n      calories = encodeURI(`${params.calories}`);\r\n    }\r\n    var fat = \"\";\r\n    if (params.fat !== \"NA\") {\r\n      fat = encodeURI(`&nutrients[FAT]=${params.fat}`);\r\n    }\r\n    var sugar = \"\";\r\n    if (params.sugar !== \"NA\") {\r\n      sugar = encodeURI(`&nutrients[SUGAR]=${params.sugar}`);\r\n    }\r\n    var carbs = \"\";\r\n    if (params.carbs !== \"NA\") {\r\n      carbs = encodeURI(`&nutrients[CHOCDF]=${params.carbs}`);\r\n    }\r\n\r\n\r\n\r\n    let ingredients = [];\r\n          currentfood.recipe.ingredients.map(currentingredient => {\r\n            console.log(currentingredient.text);\r\n            ingredients.push(currentingredient.text);\r\n            return (null);\r\n          })\r\n\r\n\r\n          recipedata.recipe.ingredients.map(currentingredient => {\r\n      ingred = currentingredient.text;\r\n      newR.ingredients.push(ingred);\r\n      console.log(newR.ingredients);\r\n      return (null);\r\n    })\r\n     */","map":{"version":3,"sources":["C:/Users/Antwong/Documents/temp/csc648-03-sp20-team102/application/team102/UI/src/Component/Recipe.js"],"names":["React","Component","Container","Row","Col","Input","Form","FormGroup","Navi","TopBar","axios","RecipeData","Recipe","constructor","props","onChangeSearch","bind","onChangeCalories","onChangeCarbs","onChangeFat","onChangeSugar","onChangeSodium","onSubmit","deleteItems","searchRepClean","sort","match","params","state","creator","id","password","searches","recipedata","newrecipedata","newRecipes","recipename","recipeCalories","recipeCarbs","recipeFat","recipeProtein","recipeSugar","recipeSodium","addedRecipe","ingredients","recipeImage","fat","calories","carbs","sugar","setState","e","target","value","replace","onChangeProtein","protein","preventDefault","get","then","response","data","hits","catch","error","console","log","newList","map","currentfood","newR","recipeName","recipe","ingredientLines","label","image","totalNutrients","PROCNT","quantity","FAT","CHOCDF","SUGAR","NA","push","componentDidMount","delete","res","filter","el","_id","addRecipe","post","inventory","searchedRecipes","restrictions","width","display","padding","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Row, Col, Input, Form, FormGroup } from 'reactstrap';\r\nimport Navi from \"./Navigation\";\r\nimport TopBar from \"./TopBar\";\r\nimport axios from \"axios\";\r\nimport RecipeData from \"./RecipeData.js\"\r\n\r\n\r\nexport default class Recipe extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearch = this.onChangeSearch.bind(this);\r\n    this.onChangeCalories = this.onChangeCalories.bind(this);\r\n    this.onChangeCarbs = this.onChangeCarbs.bind(this);\r\n    this.onChangeFat = this.onChangeFat.bind(this);\r\n    this.onChangeSugar = this.onChangeSugar.bind(this);\r\n    this.onChangeSodium = this.onChangeSodium.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.deleteItems = this.deleteItems.bind(this);\r\n    this.searchRepClean = this.searchRepClean.bind(this);\r\n    this.sort = this.sort.bind(this);\r\n    const { match: { params } } = this.props;\r\n    this.state = {\r\n      creator: params.id,\r\n      password: params.password,\r\n      searches: \"\",\r\n      recipedata: [],\r\n      newrecipedata: [],\r\n      newRecipes: [],\r\n      recipename: \"\",\r\n      recipeCalories: \"\",\r\n      recipeCarbs: \"\",\r\n      recipeFat: \"\",\r\n      recipeProtein: \"\",\r\n      recipeSugar: \"\",\r\n      recipeSodium: \"\",\r\n      addedRecipe: \"\",\r\n      ingredients: [],\r\n      recipeImage: \"\",\r\n      fat: params.fat,\r\n      calories: params.calories,\r\n      carbs: params.carbs,\r\n      sugar: params.sugar\r\n    };\r\n  }\r\n  searchRepClean() { this.setState({ newrecipedata: [] }); }\r\n  onChangeSearch(e) { this.setState({ searches: e.target.value }); }\r\n  onChangeCalories(e) { this.setState({ recipeCalories: e.target.value.replace(/\\D/g, '') }); }\r\n  onChangeCarbs(e) { this.setState({ recipeCarbs: e.target.value.replace(/\\D/g, '') }); }\r\n  onChangeSugar(e) { this.setState({ recipeSugar: e.target.value.replace(/\\D/g, '') }); }\r\n  onChangeSodium(e) { this.setState({ recipeSodium: e.target.value.replace(/\\D/g, '') }); }\r\n  onChangeProtein(e) { this.setState({ protein: e.target.value }); }\r\n  onChangeFat(e) { this.setState({ recipeFat: e.target.value.replace(/\\D/g, '') }); }\r\n  /**onSubmit sends a search request to edamam api with current params */\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    axios\r\n      .get(`https://api.edamam.com/search?q=${this.state.searches}&app_id=b53160ee&app_key=5d9984e95c5c6968d5edfb7d02c83b46&from=0&to=10&calories=0-${this.state.recipeCalories}${this.state.recipeFat}${this.state.recipeCarbs}${this.state.recipeSugar}${this.state.recipeSodium}`)\r\n      .then(response => {\r\n        this.setState({ newrecipedata: response.data.hits });\r\n        this.sort();\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  /** sort will take the new recipe data and only grab what is needed\r\n   * and creates a new list of recipes for search results\r\n   * cleans up results data\r\n   */\r\n  sort() {\r\n    let newList = [];\r\n    this.state.newrecipedata.map(currentfood => {\r\n      let newR = {\r\n        ingredients: [],\r\n        recipeName: \"\",\r\n        recipeImage: \"\",\r\n        recipeCalories: \"\",\r\n        recipeProtein: \"\",\r\n        recipeFat: \"\",\r\n        recipeCarbs: \"\",\r\n        recipeSugar: \"\",\r\n        recipeSodium: \"\",\r\n        creator: this.state.creator,\r\n      };\r\n      newR.ingredients = currentfood.recipe.ingredientLines;\r\n      newR.recipeName = currentfood.recipe.label;\r\n      newR.recipeImage = currentfood.recipe.image;\r\n      newR.recipeCalories = currentfood.recipe.calories;\r\n      newR.recipeProtein = currentfood.recipe.totalNutrients.PROCNT.quantity;\r\n      newR.recipeFat = currentfood.recipe.totalNutrients.FAT.quantity;\r\n      newR.recipeCarbs = currentfood.recipe.totalNutrients.CHOCDF.quantity;\r\n      newR.recipeSugar = currentfood.recipe.totalNutrients.SUGAR.quantity;\r\n      newR.recipeSodium = currentfood.recipe.totalNutrients.NA.quantity;\r\n      console.log(newR);\r\n      newList.push(newR);\r\n      return (null);\r\n    })\r\n    this.setState({\r\n      newRecipes: newList\r\n    })\r\n    console.log(this.state.newRecipes);\r\n    this.searchRepClean();\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://localhost:8080/recipedata/\")\r\n      .then(response => {\r\n        this.setState({ recipedata: response.data });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  deleteItems(id) {\r\n    axios\r\n      .delete(\"http://localhost:8080/recipedata/\" + id)\r\n      .then(res => console.log(res.data));\r\n    this.setState({\r\n      recipedata: this.state.recipedata.filter(el => el._id !== id)\r\n    });\r\n  }\r\n  addRecipe(newR) {\r\n    axios\r\n      .post(\"http://localhost:8080/recipedata/add\", newR)\r\n      .then(res => console.log(res.data));\r\n    this.onChangeSearch(\"\");\r\n  };\r\n\r\n  inventory() {\r\n    const { match: { params } } = this.props;\r\n    return this.state.recipedata.map(currentfood => {\r\n      if (currentfood.creator === params.id) {\r\n        return (\r\n          <RecipeData\r\n            food={currentfood}\r\n            username={params.id}\r\n            addRecipe={this.addRecipe}\r\n            password={params.password}\r\n            key={currentfood._id}\r\n          />\r\n        );\r\n      } return (null);\r\n    });\r\n  }\r\n\r\n  searchedRecipes() {\r\n    //const { match: { params } } = this.props;\r\n    return this.state.newRecipes.map(currentfood => {\r\n      return (\r\n        <RecipeData\r\n          food={currentfood}\r\n          username={params.id}\r\n          addRecipe={this.addRecipe}\r\n          password={params.password}\r\n          key={currentfood._id}\r\n        />\r\n      );\r\n    });\r\n  }\r\n  restrictions() {\r\n    return (\r\n      <Form justified onSubmit={this.onSubmit}>\r\n        <FormGroup>\r\n          <Row>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              style={{ width: '70vw' }}\r\n              required\r\n              className=\"form-control\"\r\n              value={this.state.searches}\r\n              onChange={this.onChangeSearch}\r\n            /> <Input\r\n              type=\"submit\"\r\n              style={{ width: '30vw' }}\r\n              value=\"Find\"\r\n              className=\"btn btn-secondary\"\r\n            /></Row>\r\n        </FormGroup>\r\n        <FormGroup style={{ display: \"flex\" }}>\r\n          <Input\r\n            type=\"select\"\r\n            style={{ width: '24vw', padding: '0' }}\r\n            onChange={this.onChangeCalories}\r\n            value={this.state.recipeCalories}>\r\n            <option>Calories</option>\r\n            <option>250  Cal</option>\r\n            <option>500  Cal</option>\r\n            <option>750  Cal</option>\r\n            <option>1000  Cal</option>\r\n            <option>1500  Cal</option>\r\n          </Input>\r\n          <Input\r\n            type=\"select\"\r\n            style={{ width: '15vw', padding: '0' }}\r\n            onChange={this.onChangeFat}\r\n            value={this.state.recipeFat}>\r\n            <option>Fat</option>\r\n            <option>5 g</option>\r\n            <option>10 g</option>\r\n            <option>15 g</option>\r\n            <option>20 g</option>\r\n            <option>25 g</option>\r\n            <option>30 g</option>\r\n            <option>35 g</option>\r\n            <option>40 g</option>\r\n            <option>45 g</option>\r\n            <option>50 g</option>\r\n            <option>55 g</option>\r\n            <option>60 g</option>\r\n          </Input>\r\n          <Input\r\n            type=\"select\"\r\n            style={{ width: '19vw', padding: '0' }}\r\n            value={this.state.recipeCarbs}\r\n            onChange={this.onChangeCarbs}>\r\n            <option>Carbs</option>\r\n            <option>5 g</option>\r\n            <option>10 g</option>\r\n            <option>15 g</option>\r\n            <option>20 g</option>\r\n            <option>25 g</option>\r\n            <option>30 g</option>\r\n            <option>35 g</option>\r\n            <option>40 g</option>\r\n            <option>45 g</option>\r\n            <option>50 g</option>\r\n            <option>55 g</option>\r\n            <option>60 g</option>\r\n          </Input>\r\n          <Input\r\n            type=\"select\"\r\n            style={{ width: '23vw', padding: '0' }}\r\n            value={this.state.recipeSodium}\r\n            onChange={this.onChangeSodium}>\r\n            <option>Sodium</option>\r\n            <option>5 g</option>\r\n            <option>10 g</option>\r\n            <option>15 g</option>\r\n            <option>20 g</option>\r\n            <option>25 g</option>\r\n            <option>30 g</option>\r\n            <option>35 g</option>\r\n            <option>40 g</option>\r\n            <option>45 g</option>\r\n            <option>50 g</option>\r\n            <option>55 g</option>\r\n            <option>60 g</option>\r\n          </Input>\r\n          <Input\r\n            type=\"select\"\r\n            style={{ width: '19vw', padding: '0' }}\r\n            value={this.state.recipeSugar}\r\n            onChange={this.onChangeSugar}>\r\n            <option>Sugar</option>\r\n            <option>5 g</option>\r\n            <option>10 g</option>\r\n            <option>15 g</option>\r\n            <option>20 g</option>\r\n            <option>25 g</option>\r\n            <option>30 g</option>\r\n            <option>35 g</option>\r\n            <option>40 g</option>\r\n            <option>45 g</option>\r\n            <option>50 g</option>\r\n            <option>55 g</option>\r\n            <option>60 g</option>\r\n          </Input>\r\n        </FormGroup>\r\n      </Form>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div><TopBar username={this.state.creator} password={this.state.password} />\r\n        <Container className=\"fit-content\">\r\n          <Row><Col><h1>Recipes</h1></Col></Row>\r\n          {this.restrictions()}\r\n          {this.state.searches !== \"\" ? this.searchedRecipes() : this.inventory()}\r\n          <br />\r\n        </Container>\r\n        <Navi username={this.state.creator} password={this.state.password} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/**var search = encodeURI(params.search);\r\n    var calories = \"\";\r\n    if (params.calories !== \"NA\") {\r\n      calories = encodeURI(`${params.calories}`);\r\n    }\r\n    var fat = \"\";\r\n    if (params.fat !== \"NA\") {\r\n      fat = encodeURI(`&nutrients[FAT]=${params.fat}`);\r\n    }\r\n    var sugar = \"\";\r\n    if (params.sugar !== \"NA\") {\r\n      sugar = encodeURI(`&nutrients[SUGAR]=${params.sugar}`);\r\n    }\r\n    var carbs = \"\";\r\n    if (params.carbs !== \"NA\") {\r\n      carbs = encodeURI(`&nutrients[CHOCDF]=${params.carbs}`);\r\n    }\r\n\r\n\r\n\r\n    let ingredients = [];\r\n          currentfood.recipe.ingredients.map(currentingredient => {\r\n            console.log(currentingredient.text);\r\n            ingredients.push(currentingredient.text);\r\n            return (null);\r\n          })\r\n\r\n\r\n          recipedata.recipe.ingredients.map(currentingredient => {\r\n      ingred = currentingredient.text;\r\n      newR.ingredients.push(ingred);\r\n      console.log(newR.ingredients);\r\n      return (null);\r\n    })\r\n     */"]},"metadata":{},"sourceType":"module"}